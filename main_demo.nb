(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    457831,       9477]
NotebookOptionsPosition[    445359,       9275]
NotebookOutlinePosition[    445713,       9291]
CellTagsIndexPosition[    445670,       9288]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Hardware Verification Workflow with SCR1", "Title",
 CellChangeTimes->{{3.737196421912888*^9, 3.737196428803424*^9}, {
  3.737199275736985*^9, 
  3.737199327543291*^9}},ExpressionUUID->"06c7e292-9ceb-4e64-b669-\
2e08baca2aef"],

Cell["\<\
This is demonstration of the project for Wolfram  Hackathon Russia 2018. We \
developed a driver for SCR1 based on Device Framework. SCR1 is open-source \
microcontroller core. SCR1 implements RISC-V architecture  (RV32I|E[MC]). \
Sources to SCR1 is located here:  http://github.com/syntacore/scr1.

This project demonstrates potential application for Wolfram Mathematica to \
semiconductor industry. It is known that workflow for chips productions is \
complex.  The most  complicated stage is verification phase. Engineers use \
expensive toolchain to simulate designs. Here we offer an idea to use \
comprehensive analytical and visualisation features of Wolfram Mathematica to \
solve some hardware design tasks. As result we built workflow to introduce \
Wolfram Mathematica to semiconductor market.\
\>", "Text",
 CellChangeTimes->{{3.74221225490233*^9, 3.742212405209511*^9}, {
  3.742212587891507*^9, 3.742212655773381*^9}, {3.742212705721612*^9, 
  3.742212830288333*^9}, {3.742212981437007*^9, 
  3.7422131539962482`*^9}},ExpressionUUID->"5c006520-4c11-4d25-b0ba-\
d024e260238e"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Features of the workflow", "Subchapter"]], "Chapter",
 CellChangeTimes->{{3.73719643392211*^9, 3.737196443302948*^9}, {
  3.7394665098743668`*^9, 3.7394665196934032`*^9}, {3.7394665615329723`*^9, 
  3.7394665648958683`*^9}, {3.742212488237467*^9, 3.742212489658185*^9}, {
  3.742213199980544*^9, 
  3.742213218964159*^9}},ExpressionUUID->"a0716f33-11bc-45cf-82de-\
feac96e25066"],

Cell[CellGroupData[{

Cell["Architecture", "Section",
 CellChangeTimes->{{3.742213342663478*^9, 3.742213357758943*^9}, {
  3.7422153299667883`*^9, 
  3.742215335571657*^9}},ExpressionUUID->"778e1e37-6500-4bb1-98d6-\
e9b7bd557798"],

Cell[TextData[{
 "The prototype works with ",
 StyleBox["Verilator",
  FontSlant->"Italic"],
 " software (https://www.veripool.org/wiki/verilator). This is open-source \
free Verilog / System Verilog hardware description language (HDL) simulator. \
It compiles HDL into C++ code. We wrapped this code with function to \
communicate with Wolfram Mathematica. On the Wolfram side we wrote simple \
driver in terms of Wolfram Device Framework. Driver works with C++ code \
through Wolfram ",
 StyleBox["LibraryLink",
  FontSlant->"Italic"],
 ". The full scheme of the prototype is shown below."
}], "Text",
 CellChangeTimes->{{3.742212551106104*^9, 3.742212574025146*^9}, {
  3.7422132224884443`*^9, 3.742213269401536*^9}, {3.742213309865519*^9, 
  3.74221331031252*^9}, {3.742215017419423*^9, 3.742215132176165*^9}, {
  3.742215248415626*^9, 3.742215354139977*^9}, {3.742215410123323*^9, 
  3.742215447353243*^9}},ExpressionUUID->"54881897-4fac-4dac-bf0c-\
71d6ab70deb2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TreePlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnQl4W8W1xxsIO4+9j62spbSlBR4tdHl9r7SllPK6QNNSKFAKtEkIkED2
EgiEbCS2E8eJHe92nMSJHTvxEjteYlmy5UVe5FXebcm2LHlfJO+b8o50Y+Xm
ytplXyf6/76TfPJd5s7cmTNzzszcmYfe/WjJsiu+9rWvrb2W/lvyzsZfrlnz
zid/voX+eGXV2hXLVy3914ur1i1dvnTNT969kg7etYj5p/99DgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAwQXfu3PjU9PDEFIRkdHKK7wwBlwwVndo9
hc1/ia/4xkHxFR6Cr+3OgDDyVHgB35kDFi7TOl2GondTVuNzUdI79mc5UMCu
25P5flrNAWnr0pTqa7wyeS/w0CMwzyg1o7+OkjpZwN5Lq5mcnvYvUep0uqWp
1Td5ixZ7XiYN2dVemU+FS56OKPzx4cK3k6v4zi6wsJia1mW29L0SX3GlKyw3
z4Lm+PquKzwyslv7zjR1f3i21qOg+T+8hbxrgZNCDVBEpfqtJNnfEitfS6jY
IGzgO9/AQoE0KLmx+0eHC11Y3h4LyRcr+xv7hgXNfY8E5tIRUiIPieLhwBze
dcExoTrh3TNV6zLr6fe1ezIfCsh5OCD3pZNlfOceWChsy5XPT1EkV6upf+TR
4DzelcIB+WdK9c58BfPbq6A5sqr9sEwdV9fJd+6BBYFfiXKxhyvL2y37RA/4
51B1/c3AXGqJHg3KvetAtvHsrT6iXfmKJ8MkvOuFXfKjiIKPBXX04+Z9oj2F
zX86Vc4cRz8DIDwLWlxb3u47mNM8MBJV3X5Upo6QqcPKVYGlbWnynv9kqdKN
3sLKrsEfHirgXTtsFLJID1WomN97C5v/K6yAXMgD0tbE+q4cZT/feQh4Zke+
i825BwNyPCWKu32zOcfv8s32L1Gy+wCv35O5I0++Iq2G5MP02pVnaz/KqKMK
f42gbmlK9dVeC6hn76dHisIrVPf751A7613U8seTZYs9BVvETb+LKb3HL/v5
KCnf2Qj4JKq6Y5GLStrThwq25sr/L6ZUMTBy5wGzg00HS5S3+Vw4S1U6NVK3
+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
Vfbv3x8REVFUVDQ9bcfCjKOjoxKJhPJ33759DjyUobe311z4Q0NDGRkZQUFB
toTv6+sbGxvb0NBge/yJ4eHhM2fOUP6aC1apVJq7d2BggPKRnmtLMinTKS2U
IruixyY6OppdHui1OxyUVSoqKtjPCgsLczgoej/GcFavXj3rNVNTU/RytmzZ
snz58mV2snLlyoCAgFn7G6mqsTGQuro6zr2Us/bGhM1HH31ECtXW1mb55TQ3
N9O7pdfizLMYyH02DZ8iQLpDLoADAW7atCkxMXFiYsJyEujNBwYGUnoth2b6
hinkgoICLy8vBzKdUkTporpuctLuJc2ppLGDoqeTItsbiI3Mpx6NjIxs3brV
3jfJYcWKFfRWOSHzqEdGqE0092ao8f3www9d8pRls+mRWq12fqjRcnVdWFhI
b96WcEzfMDkmTsaNiImJsRC9WWlqauIEQsXbLvvBduZNj6g+IVvI+fe5zFCx
ZGdnswNfCHq0du3azs5O09dCWm9jCbQRjh7JZDKXKCm9Vcr9WadfZmVl2R4O
+w2Pj49HRkY60AyZQg1TVFSU1UaTAzkFnHAojc7YiuaYNz0yHRFzhlWrVrFf
6ULQIyI0NJQTuE6n27Bhg6vCZ+Do0eeff+7CwMkW4iSBNMuqLceG/YbtUkBb
yMnJsatMdnd3r1+/3jQcStFqe6BAvvzyy5CQkJqamlkfND96RIYNJyFUe2dm
Zsrl8jZrkN9Kvjm1ZZxqjfLIGL5WqyUHhKNNlOpmE0zrW41GY3qZVchZEIvF
u3btYj/xgw8+UCgU7MCLi4s5Cd+9ezfFnBLuwEMZ2BVIbGwsJ/ygoCB6KJk0
VsOpqqpKSkr65JNP2Ld/9tlnbE+E/Nm9e/eyL6BcOHr0KBmx5pJgfMNkQZEj
zIleeHg4PdeWZFI7GxwczLl927Zt9hZLehWurco2b95MWsN5yvzoEb099lPI
se3qsnsDBbLl2IFs376dc8H893tTkaOiyFZwqrjY5XzPnj3sKMXHx7vw6VTD
sANfs2aNA5O+qBrx8PBgh5OQkGA8yykeBNV+NoZMDRP7xo0bN1royjNHQ0MD
VbnscDg1lS2MjY1Ra7LMdVCFyUnL/OgRVSPsp1BV5kD4ZCOx5xySwczxGfka
P+K0Suy+O7b7v3LlSspQFz43Ly+P/dzo6GjHwqEWhAqGMRwq8MZTVEuwH0EV
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
FA==
         "], {{0, 280}, {280, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{280, 280},
       PlotRange->{{0, 280}, {0, 280}}], "\[Rule]", "\"\<Verilator\>\""}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Verilator\>\"", "\[Rule]", "\"\<C++ model\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<C++ model\>\"", "\[Rule]", "\"\<cpp_bridge\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<cpp_bridge\>\"", "\[Rule]", " ", "\"\<C++ model\>\""}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<cpp_bridge\>\"", "\[Rule]", " ", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
dpDtaKjyZr+L5SH2sQJDn30usL5mjRsHjhcoenbv4VvvgV9/NZZd+uWXvmWb
3Htf5PbUN9CXUPfWr8+TZP42rR4xPo83x75Olvl5yxYy/4J58135Pv/0syq/
d0i33ngT2c81ZHlDQr8VRHZWlhyDh6lv+y+/RHomGKfie+dX59R33zOWH/D0
M4FtysjIiNSm+kZCQgJ5X/c2usuT93wa3U8535/77ie/sXNnzybz792zx8mT
eDpR3HTd9ca6m97fWP6tvl2zRny1bLkcQ/n9bTu27+D5PteGvEF2ZnzwQWBS
Mckb5qXIO2XyZDF29GjRo2s3ce0/rzbeQ9yIEYHtXvzZ56Hld9jQFyI9E8z5
g+ps17oNWbYgvyDUd2DL5tiOa4t3Ev0BdW/p6e44G5jTBT2PQ4e8caegS9Hz
XXf1v+QztokbPsJY57ODBpPzk6TEJPFQ02bGctBhqtSGvIXRCeiY5G3RwoWe
vIcPHRaNbrudzN+9S/B+4106dvKUe6BxE9GrZ0/PcXz/cnJyQt/H8qXLQsnx
2eRkT1nou8KUnTnjo9Dtqa+Yxtz6fAzfz6DnQY0XqDFo20daO+eh7zd92x55
uIUoLCjw1GkDm4Dpm6+PiRuCvIF3Jk0i80OW/MAYmyqHufonCxaQ57743Lvn
pInRo0aFkplPFy7ylB350kuhyj43eEjo9tRXTDqQ+XPnOXkwTmx8z72Bz0OV
I1BUVETaD0a9/IqTZ93atcb6THpSlaHP0fN/XDcvryJeeEORN4wxK/MumnRj
0GGcPn26UjKs8mjbduTfQD/21JPu72Bpaam0cYSRN/TFsc7Kr78m7w1jPBvT
t5FKmIvZoP+h8ny5ZImTZ8L48WSeG665Vtr7gsC40dQWVVfZEOQN42rMgaj8
fn1RSUmJuO+uuz1loPOz57mtHn6YrDeMjQ/tMn1Xg/6uePZ6HtiP8O2m2pNV
hb0d6gN4ntR94Xtls+iTTzznb73pZnLcr+odVyxfTtYNObSBXoDKg/cwDCkp
KUY5WrJ4sZOvNuTt8R6Pye+XX9q/b7+rLpO8YdwIHcS+vfvE9l+2y3FY+za0
rEGflJ+fb2yvyW467s2K2LMYV1J5YFML4tf9+8my0Ik92KSp5/j6dd87ZSmb
HcYsLw0bTtaJZxHLQI978/U3eO7r+muukd9FAPuOfh7jF0qHj/mgzdvjxnnO
Yx5u1wtgp6aeK/QkYcBYF99Mqo4Pp0938tUXe4DeB1bVHgBdMvQofuBvRZXd
vWuXk4fqZ5Bgp/bzZQALP/6YLItnTs1XXo6Lc8rC70E/D7+9eXPmknXOnTMn
0t+qPtK9cxfy3v7880/5rNGX6ecwtzp79qznOPQXFy5ckPX2fvwJz3ldj9ay
efNQ76Ufd956G1kHxqo2DU3e4JM1eeIk51mbwPiL+h5BTjF3ssF316T73PDD
D77XoHTQ0B2DXTt3es7BfwjXNo2tks+cEVt//pk8h74v1nl99Bjy3lav+sYa
z+z1HIc+H7ZTQI1xYCMD1N9PHcMA0zhdnT8GYfIDxZjMpqHJ22033+waL5v4
bNGnZHn8zXVGvDiMzDuw/wDfa7R4yPvNHDxwoDyHsQylD8EYdNZHMz3Hmz/w
oCxn8u/CtWIdk+0E30/4ierHe/V83Cn7/ntTyb9PamoqWeeab9z7nqG/o/Lp
eiwTly9fNr6Tc2bNcvI1NHmzE2XzVDGN1yn/O/gTUHmhC9HtsTaw51Blpr9f
4YNJ2VffmzJF+l3rx8e89ppTjvK7RVL1zrHIH7//Tt7X0337ise6dfccx3jd
5uBvv3nOY4629rvvyDrh06Ly4tChZD74q4Th9yO0DhTpm5WrnHy1IW/wTcQY
2y/p+jWTvMGH5seNG+X6o6f79jO2HX2SCdN4Den2m2+R43A1oc805cd8imLb
1q1kftiwbSh7NnQ8VDlVl2JaV4IxaiyDdWTQj+j3hfEgpeeFb4cN9MmUrrnz
ox09xzDu032+Zs/0jinsdOL4icC2ow8zlVf9KGPZHoBnZrIJw1fAHtvrmGxu
lUmtW7Qkr0GNCfV3JKy/Fub+6r2YbEWwz8c6pnGHnnSbNnh15MuhylJjxN8O
HDDmp+YYKpjjm3y6oA9QfShjWd4A+kVKb4VEzeNMNreqJMq/f9CAAZ58aKfu
v0rpuPWEb7QK+nYqH2wFsU5YfxzKZ2vjhg3hyk5511MWfxfMkan86HMxrzaB
OYLpWrpeJtblDbz2Kv03onwnTTa3qiRcX4dauwrfah3o+IPqf/edd1xlTP4S
pr42loB/QphnfujgQU/ZsOMFk17Zby0OdFvwIVG/l5gvQ+5NZTAGVsczwE/e
MNcMmndhHZ9NXckb7GWme9DXZJtsbhifoJ1+yWSjwZxP9Wc16cTeGDPW03as
pfFb34C0Y7t77SJ0YdCF6/lQj+rvHotQeg89wYfStA7R5CeiJqzpocDYJ0hP
h2tjPTr0N6Y1DXZS7QA2fvIWJtn2JFBX8oZnDx8sKv9HH85w8plsbkibf9oU
2KYVX31lfA6qDsrk17/kiy/IetHvmeqFjg3+tjptWrYi8/uNe2IBfEso3Yia
VF2tDuYQfmWD1ufCZxa+DFWRCSTYKih/iIYgbwDreqn86hjLZHPD81V9e0xg
/GAar8CHwQY6fSqPaR23yWcEqW/vPmQZk/4a9xjrmHxh7eS33s80trCTbf/0
A/pEyr8nbMKc3BTLo6HIG9Zdm9oI2wgw6b7gXxeWIQMHGa8D/w9Axb/BWM/k
y2la34yEdckUJv2n6hMWq/itQ4LOKSj+nN+YEHr/MNg+d37rvfUEWx3m434x
PBqKvKF/MvnT2DG7TPcQ5GepYrKfIsEHAmNbyl4X5P+BNY1UnaoPuwrGv1T+
Dm3bhr6X+gr6L9McWo83QoF4KKbyR//4I1JbMjMz5TwANmT8DdX5CObtWL8A
nSp0MEH+tAD9XpCewC/B18YG/mpUHtuPLQp4d6m6/OKHYL0GVQb6X7yf1Lko
fZt8XgUF0s5D1QW9MOxk1DnVF4ICfrd6Geg9TXoB+LVQ16F0pQzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD1C3/D0cN2Bk=
         "], {{0, 142}, {
         220, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{220, 142},
       PlotRange->{{0, 220}, {0, 142}}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
dpDtaKjyZr+L5SH2sQJDn30usL5mjRsHjhcoenbv4VvvgV9/NZZd+uWXvmWb
3Htf5PbUN9CXUPfWr8+TZP42rR4xPo83x75Olvl5yxYy/4J58135Pv/0syq/
d0i33ngT2c81ZHlDQr8VRHZWlhyDh6lv+y+/RHomGKfie+dX59R33zOWH/D0
M4FtysjIiNSm+kZCQgJ5X/c2usuT93wa3U8535/77ie/sXNnzybz792zx8mT
eDpR3HTd9ca6m97fWP6tvl2zRny1bLkcQ/n9bTu27+D5PteGvEF2ZnzwQWBS
Mckb5qXIO2XyZDF29GjRo2s3ce0/rzbeQ9yIEYHtXvzZ56Hld9jQFyI9E8z5
g+ps17oNWbYgvyDUd2DL5tiOa4t3Ev0BdW/p6e44G5jTBT2PQ4e8caegS9Hz
XXf1v+QztokbPsJY57ODBpPzk6TEJPFQ02bGctBhqtSGvIXRCeiY5G3RwoWe
vIcPHRaNbrudzN+9S/B+4106dvKUe6BxE9GrZ0/PcXz/cnJyQt/H8qXLQsnx
2eRkT1nou8KUnTnjo9Dtqa+Yxtz6fAzfz6DnQY0XqDFo20daO+eh7zd92x55
uIUoLCjw1GkDm4Dpm6+PiRuCvIF3Jk0i80OW/MAYmyqHufonCxaQ57743Lvn
pInRo0aFkplPFy7ylB350kuhyj43eEjo9tRXTDqQ+XPnOXkwTmx8z72Bz0OV
I1BUVETaD0a9/IqTZ93atcb6THpSlaHP0fN/XDcvryJeeEORN4wxK/MumnRj
0GGcPn26UjKs8mjbduTfQD/21JPu72Bpaam0cYSRN/TFsc7Kr78m7w1jPBvT
t5FKmIvZoP+h8ny5ZImTZ8L48WSeG665Vtr7gsC40dQWVVfZEOQN42rMgaj8
fn1RSUmJuO+uuz1loPOz57mtHn6YrDeMjQ/tMn1Xg/6uePZ6HtiP8O2m2pNV
hb0d6gN4ntR94Xtls+iTTzznb73pZnLcr+odVyxfTtYNObSBXoDKg/cwDCkp
KUY5WrJ4sZOvNuTt8R6Pye+XX9q/b7+rLpO8YdwIHcS+vfvE9l+2y3FY+za0
rEGflJ+fb2yvyW467s2K2LMYV1J5YFML4tf9+8my0Ik92KSp5/j6dd87ZSmb
HcYsLw0bTtaJZxHLQI978/U3eO7r+muukd9FAPuOfh7jF0qHj/mgzdvjxnnO
Yx5u1wtgp6aeK/QkYcBYF99Mqo4Pp0938tUXe4DeB1bVHgBdMvQofuBvRZXd
vWuXk4fqZ5Bgp/bzZQALP/6YLItnTs1XXo6Lc8rC70E/D7+9eXPmknXOnTMn
0t+qPtK9cxfy3v7880/5rNGX6ecwtzp79qznOPQXFy5ckPX2fvwJz3ldj9ay
efNQ76Ufd956G1kHxqo2DU3e4JM1eeIk51mbwPiL+h5BTjF3ssF316T73PDD
D77XoHTQ0B2DXTt3es7BfwjXNo2tks+cEVt//pk8h74v1nl99Bjy3lav+sYa
z+z1HIc+H7ZTQI1xYCMD1N9PHcMA0zhdnT8GYfIDxZjMpqHJ22033+waL5v4
bNGnZHn8zXVGvDiMzDuw/wDfa7R4yPvNHDxwoDyHsQylD8EYdNZHMz3Hmz/w
oCxn8u/CtWIdk+0E30/4ierHe/V83Cn7/ntTyb9PamoqWeeab9z7nqG/o/Lp
eiwTly9fNr6Tc2bNcvI1NHmzE2XzVDGN1yn/O/gTUHmhC9HtsTaw51Blpr9f
4YNJ2VffmzJF+l3rx8e89ppTjvK7RVL1zrHIH7//Tt7X0337ise6dfccx3jd
5uBvv3nOY4629rvvyDrh06Ly4tChZD74q4Th9yO0DhTpm5WrnHy1IW/wTcQY
2y/p+jWTvMGH5seNG+X6o6f79jO2HX2SCdN4Den2m2+R43A1oc805cd8imLb
1q1kftiwbSh7NnQ8VDlVl2JaV4IxaiyDdWTQj+j3hfEgpeeFb4cN9MmUrrnz
ox09xzDu032+Zs/0jinsdOL4icC2ow8zlVf9KGPZHoBnZrIJw1fAHtvrmGxu
lUmtW7Qkr0GNCfV3JKy/Fub+6r2YbEWwz8c6pnGHnnSbNnh15MuhylJjxN8O
HDDmp+YYKpjjm3y6oA9QfShjWd4A+kVKb4VEzeNMNreqJMq/f9CAAZ58aKfu
v0rpuPWEb7QK+nYqH2wFsU5YfxzKZ2vjhg3hyk5511MWfxfMkan86HMxrzaB
OYLpWrpeJtblDbz2Kv03onwnTTa3qiRcX4dauwrfah3o+IPqf/edd1xlTP4S
pr42loB/QphnfujgQU/ZsOMFk17Zby0OdFvwIVG/l5gvQ+5NZTAGVsczwE/e
MNcMmndhHZ9NXckb7GWme9DXZJtsbhifoJ1+yWSjwZxP9Wc16cTeGDPW03as
pfFb34C0Y7t77SJ0YdCF6/lQj+rvHotQeg89wYfStA7R5CeiJqzpocDYJ0hP
h2tjPTr0N6Y1DXZS7QA2fvIWJtn2JFBX8oZnDx8sKv9HH85w8plsbkibf9oU
2KYVX31lfA6qDsrk17/kiy/IetHvmeqFjg3+tjptWrYi8/uNe2IBfEso3Yia
VF2tDuYQfmWD1ufCZxa+DFWRCSTYKih/iIYgbwDreqn86hjLZHPD81V9e0xg
/GAar8CHwQY6fSqPaR23yWcEqW/vPmQZk/4a9xjrmHxh7eS33s80trCTbf/0
A/pEyr8nbMKc3BTLo6HIG9Zdm9oI2wgw6b7gXxeWIQMHGa8D/w9Axb/BWM/k
y2la34yEdckUJv2n6hMWq/itQ4LOKSj+nN+YEHr/MNg+d37rvfUEWx3m434x
PBqKvKF/MvnT2DG7TPcQ5GepYrKfIsEHAmNbyl4X5P+BNY1UnaoPuwrGv1T+
Dm3bhr6X+gr6L9McWo83QoF4KKbyR//4I1JbMjMz5TwANmT8DdX5CObtWL8A
nSp0MEH+tAD9XpCewC/B18YG/mpUHtuPLQp4d6m6/OKHYL0GVQb6X7yf1Lko
fZt8XgUF0s5D1QW9MOxk1DnVF4ICfrd6Geg9TXoB+LVQ16F0pQzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD1C3/D0cN2Bk=
         "], {{0, 142}, {
         220, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{220, 142},
       PlotRange->{{0, 220}, {0, 142}}], "->", "\"\<cpp_bridge\>\""}]}], 
    "\[IndentingNewLine]", "}"}], ",", "Automatic", ",", 
   RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
   RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7422133696407223`*^9, 3.742213371517219*^9}, {
   3.742213466023044*^9, 3.742213652616708*^9}, {3.742214231928425*^9, 
   3.742214235055687*^9}, {3.742214443091364*^9, 3.742214495764353*^9}, {
   3.742214526183999*^9, 3.742214528645871*^9}, 3.742214759341901*^9, {
   3.74221480958664*^9, 3.7422148120484133`*^9}, 3.742214846828354*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"6e14ad3c-428c-49fc-9e8c-8a7f93de0cf5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[CompressedData["
1:eJx1UntMk1cUJzI6WCJMLXSSlKqg4+2kOl03/BECe1iKAV0QMtmiILoRUcEJ
xlZjfMxuw4CWZXGDsTm3ikUoW8DNiXGAkkphTNRYCl/LQ9p+H18fIqFf1+7h
rcv+2E1uTs7Nuef8HmfptrLc4nkBAQGZf92/4/+dErfXKE+YxpM4QqIX/33/
N/r/hXZ318reNyGW2+893O9Bdr5kXxfPDPGWwhFmjwfmx9ozx74wo3jN7X5N
mAe6Pukz7yaMQdXr3TjSxEFRpHWvaBvDZLtWXZ/JIXjJSxOt4nFcqMu1hRrd
wP15B+5dGgdPaB3euM+N8Td9P+yNmsDWqNGZo0Fu1PB9B2NetKE1d3TlgMeF
1DVVN8NqbAi+Xv6JoNqFI1d3M/EuGxLdi8ZUQhc8Mnt8nozGLn1F1e4mJx6E
9UgqG2gcP3lscfdaJ/oas7ZWWGhUKlN41244sKL55HurExgUBC6wy7McWPpp
yXffFDHgi+9Y4obsqNauk7B3bSg/9JH+6l47ZFFdBZUSG3aKvprOHrDjpyPS
VzrOW/Fyesof1asc6FdrbxnDreA1+w4VqhwQLsoaDK+24MdOaXQ958CZPP1D
5XwLZqgmU1KRE+80cG8Xn53C2QK+ndY70Z7sE+iWTWF9vujelVddCNnuy3kh
0gxrjOjL0ow5FKYfD0pqMaG2XZm2vG0OkT+fHl2QbUKZ3Gq5EO1GQ1zo1xMu
CmL1qU16lRvXS9bVdjVSiLBXtR0I4dA31Fp2K49CDKPrUSg4VPR+WBocQSG9
ghm+9oiD806SNOXKKE5kxI8tLPWgtaSOv8U5jYzMxsDw523YfIOiDNEsQgaz
jMkSKxxKH2uQsRDGft7RvM2CUk2wQLqHRVpn1fL7p6ZwV5CjjPqYRfOOVBF7
+SFGEvspWT2Li4vXz64dmkRe9y8Rv6tZJD/Yj9m5CWxmFKcvalgYyR748+f+
0WHwaf3OtIWp87cPwEj6mY8GnhPk9z2d91s2j5NM9+IDgkdJ8811J3pgJ3j5
b32mei36V2wifG6n1wRVKjvRQvjav2cGXzd0YAnZh0j1k1yeIjSIxAwek3pq
l1cnCmEQR/oVvzFzvmWSRgOZxw1fWmXU0ZgkeFw3kw2aDhqzBO/BlWnfxmpo
lBM+8mcPJ+aoaYQTvv7cTPTw168mej0i/S4TPf3z2ojeOwieTOKHieBdRvxS
ED6hxE///m8gfv8JwOk0lA==
    "], {
     {RGBColor[0.5, 0., 0.], Arrowheads[{{0.03455062489611723, 0.7}}], 
      ArrowBox[{1, 2}], ArrowBox[{2, 3}], 
      ArrowBox[{3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
        4}], ArrowBox[{4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
       35, 36, 37, 3}], 
      ArrowBox[{4, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
        53, 5}], 
      ArrowBox[{5, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
        69, 4}]}, {InsetBox[
       FrameBox[
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJztnQl4W8W1xxsIO4+9j62spbSlBR4tdHl9r7SllPK6QNNSKFAKtEkIkED2
EgiEbCS2E8eJHe92nMSJHTvxEjteYlmy5UVe5FXebcm2LHlfJO+b8o50Y+Xm
ytplXyf6/76TfPJd5s7cmTNzzszcmYfe/WjJsiu+9rWvrb2W/lvyzsZfrlnz
zid/voX+eGXV2hXLVy3914ur1i1dvnTNT969kg7etYj5p/99DgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAwQXfu3PjU9PDEFIRkdHKK7wwBlwwVndo9
hc1/ia/4xkHxFR6Cr+3OgDDyVHgB35kDFi7TOl2GondTVuNzUdI79mc5UMCu
25P5flrNAWnr0pTqa7wyeS/w0CMwzyg1o7+OkjpZwN5Lq5mcnvYvUep0uqWp
1Td5ixZ7XiYN2dVemU+FS56OKPzx4cK3k6v4zi6wsJia1mW29L0SX3GlKyw3
z4Lm+PquKzwyslv7zjR1f3i21qOg+T+8hbxrgZNCDVBEpfqtJNnfEitfS6jY
IGzgO9/AQoE0KLmx+0eHC11Y3h4LyRcr+xv7hgXNfY8E5tIRUiIPieLhwBze
dcExoTrh3TNV6zLr6fe1ezIfCsh5OCD3pZNlfOceWChsy5XPT1EkV6upf+TR
4DzelcIB+WdK9c58BfPbq6A5sqr9sEwdV9fJd+6BBYFfiXKxhyvL2y37RA/4
51B1/c3AXGqJHg3KvetAtvHsrT6iXfmKJ8MkvOuFXfKjiIKPBXX04+Z9oj2F
zX86Vc4cRz8DIDwLWlxb3u47mNM8MBJV3X5Upo6QqcPKVYGlbWnynv9kqdKN
3sLKrsEfHirgXTtsFLJID1WomN97C5v/K6yAXMgD0tbE+q4cZT/feQh4Zke+
i825BwNyPCWKu32zOcfv8s32L1Gy+wCv35O5I0++Iq2G5MP02pVnaz/KqKMK
f42gbmlK9dVeC6hn76dHisIrVPf751A7613U8seTZYs9BVvETb+LKb3HL/v5
KCnf2Qj4JKq6Y5GLStrThwq25sr/L6ZUMTBy5wGzg00HS5S3+Vw4S1U6NVK3
+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
Vfbv3x8REVFUVDQ9bcfCjKOjoxKJhPJ33759DjyUobe311z4Q0NDGRkZQUFB
toTv6+sbGxvb0NBge/yJ4eHhM2fOUP6aC1apVJq7d2BggPKRnmtLMinTKS2U
IruixyY6OppdHui1OxyUVSoqKtjPCgsLczgoej/GcFavXj3rNVNTU/RytmzZ
snz58mV2snLlyoCAgFn7G6mqsTGQuro6zr2Us/bGhM1HH31ECtXW1mb55TQ3
N9O7pdfizLMYyH02DZ8iQLpDLoADAW7atCkxMXFiYsJyEujNBwYGUnoth2b6
hinkgoICLy8vBzKdUkTporpuctLuJc2ppLGDoqeTItsbiI3Mpx6NjIxs3brV
3jfJYcWKFfRWOSHzqEdGqE0092ao8f3www9d8pRls+mRWq12fqjRcnVdWFhI
b96WcEzfMDkmTsaNiImJsRC9WWlqauIEQsXbLvvBduZNj6g+IVvI+fe5zFCx
ZGdnswNfCHq0du3azs5O09dCWm9jCbQRjh7JZDKXKCm9Vcr9WadfZmVl2R4O
+w2Pj49HRkY60AyZQg1TVFSU1UaTAzkFnHAojc7YiuaYNz0yHRFzhlWrVrFf
6ULQIyI0NJQTuE6n27Bhg6vCZ+Do0eeff+7CwMkW4iSBNMuqLceG/YbtUkBb
yMnJsatMdnd3r1+/3jQcStFqe6BAvvzyy5CQkJqamlkfND96RIYNJyFUe2dm
Zsrl8jZrkN9Kvjm1ZZxqjfLIGL5WqyUHhKNNlOpmE0zrW41GY3qZVchZEIvF
u3btYj/xgw8+UCgU7MCLi4s5Cd+9ezfFnBLuwEMZ2BVIbGwsJ/ygoCB6KJk0
VsOpqqpKSkr65JNP2Ld/9tlnbE+E/Nm9e/eyL6BcOHr0KBmx5pJgfMNkQZEj
zIleeHg4PdeWZFI7GxwczLl927Zt9hZLehWurco2b95MWsN5yvzoEb099lPI
se3qsnsDBbLl2IFs376dc8H893tTkaOiyFZwqrjY5XzPnj3sKMXHx7vw6VTD
sANfs2aNA5O+qBrx8PBgh5OQkGA8yykeBNV+NoZMDRP7xo0bN1royjNHQ0MD
VbnscDg1lS2MjY1Ra7LMdVCFyUnL/OgRVSPsp1BV5kD4ZCOx5xySwczxGfka
P+K0Suy+O7b7v3LlSspQFz43Ly+P/dzo6GjHwqEWhAqGMRwq8MZTVEuwH0EV
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
FA==
           "], {{0, 280}, {280, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{280, 280},
         PlotRange->{{0, 280}, {0, 280}}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 1], InsetBox[
       FrameBox["\<\"Verilator\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 2], InsetBox[
       FrameBox["\<\"C++ model\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 3], InsetBox[
       FrameBox["\<\"cpp_bridge\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 4], InsetBox[
       FrameBox[
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
dpDtaKjyZr+L5SH2sQJDn30usL5mjRsHjhcoenbv4VvvgV9/NZZd+uWXvmWb
3Htf5PbUN9CXUPfWr8+TZP42rR4xPo83x75Olvl5yxYy/4J58135Pv/0syq/
d0i33ngT2c81ZHlDQr8VRHZWlhyDh6lv+y+/RHomGKfie+dX59R33zOWH/D0
M4FtysjIiNSm+kZCQgJ5X/c2usuT93wa3U8535/77ie/sXNnzybz792zx8mT
eDpR3HTd9ca6m97fWP6tvl2zRny1bLkcQ/n9bTu27+D5PteGvEF2ZnzwQWBS
Mckb5qXIO2XyZDF29GjRo2s3ce0/rzbeQ9yIEYHtXvzZ56Hld9jQFyI9E8z5
g+ps17oNWbYgvyDUd2DL5tiOa4t3Ev0BdW/p6e44G5jTBT2PQ4e8caegS9Hz
XXf1v+QztokbPsJY57ODBpPzk6TEJPFQ02bGctBhqtSGvIXRCeiY5G3RwoWe
vIcPHRaNbrudzN+9S/B+4106dvKUe6BxE9GrZ0/PcXz/cnJyQt/H8qXLQsnx
2eRkT1nou8KUnTnjo9Dtqa+Yxtz6fAzfz6DnQY0XqDFo20daO+eh7zd92x55
uIUoLCjw1GkDm4Dpm6+PiRuCvIF3Jk0i80OW/MAYmyqHufonCxaQ57743Lvn
pInRo0aFkplPFy7ylB350kuhyj43eEjo9tRXTDqQ+XPnOXkwTmx8z72Bz0OV
I1BUVETaD0a9/IqTZ93atcb6THpSlaHP0fN/XDcvryJeeEORN4wxK/MumnRj
0GGcPn26UjKs8mjbduTfQD/21JPu72Bpaam0cYSRN/TFsc7Kr78m7w1jPBvT
t5FKmIvZoP+h8ny5ZImTZ8L48WSeG665Vtr7gsC40dQWVVfZEOQN42rMgaj8
fn1RSUmJuO+uuz1loPOz57mtHn6YrDeMjQ/tMn1Xg/6uePZ6HtiP8O2m2pNV
hb0d6gN4ntR94Xtls+iTTzznb73pZnLcr+odVyxfTtYNObSBXoDKg/cwDCkp
KUY5WrJ4sZOvNuTt8R6Pye+XX9q/b7+rLpO8YdwIHcS+vfvE9l+2y3FY+za0
rEGflJ+fb2yvyW467s2K2LMYV1J5YFML4tf9+8my0Ik92KSp5/j6dd87ZSmb
HcYsLw0bTtaJZxHLQI978/U3eO7r+muukd9FAPuOfh7jF0qHj/mgzdvjxnnO
Yx5u1wtgp6aeK/QkYcBYF99Mqo4Pp0938tUXe4DeB1bVHgBdMvQofuBvRZXd
vWuXk4fqZ5Bgp/bzZQALP/6YLItnTs1XXo6Lc8rC70E/D7+9eXPmknXOnTMn
0t+qPtK9cxfy3v7880/5rNGX6ecwtzp79qznOPQXFy5ckPX2fvwJz3ldj9ay
efNQ76Ufd956G1kHxqo2DU3e4JM1eeIk51mbwPiL+h5BTjF3ssF316T73PDD
D77XoHTQ0B2DXTt3es7BfwjXNo2tks+cEVt//pk8h74v1nl99Bjy3lav+sYa
z+z1HIc+H7ZTQI1xYCMD1N9PHcMA0zhdnT8GYfIDxZjMpqHJ22033+waL5v4
bNGnZHn8zXVGvDiMzDuw/wDfa7R4yPvNHDxwoDyHsQylD8EYdNZHMz3Hmz/w
oCxn8u/CtWIdk+0E30/4ierHe/V83Cn7/ntTyb9PamoqWeeab9z7nqG/o/Lp
eiwTly9fNr6Tc2bNcvI1NHmzE2XzVDGN1yn/O/gTUHmhC9HtsTaw51Blpr9f
4YNJ2VffmzJF+l3rx8e89ppTjvK7RVL1zrHIH7//Tt7X0337ise6dfccx3jd
5uBvv3nOY4629rvvyDrh06Ly4tChZD74q4Th9yO0DhTpm5WrnHy1IW/wTcQY
2y/p+jWTvMGH5seNG+X6o6f79jO2HX2SCdN4Den2m2+R43A1oc805cd8imLb
1q1kftiwbSh7NnQ8VDlVl2JaV4IxaiyDdWTQj+j3hfEgpeeFb4cN9MmUrrnz
ox09xzDu032+Zs/0jinsdOL4icC2ow8zlVf9KGPZHoBnZrIJw1fAHtvrmGxu
lUmtW7Qkr0GNCfV3JKy/Fub+6r2YbEWwz8c6pnGHnnSbNnh15MuhylJjxN8O
HDDmp+YYKpjjm3y6oA9QfShjWd4A+kVKb4VEzeNMNreqJMq/f9CAAZ58aKfu
v0rpuPWEb7QK+nYqH2wFsU5YfxzKZ2vjhg3hyk5511MWfxfMkan86HMxrzaB
OYLpWrpeJtblDbz2Kv03onwnTTa3qiRcX4dauwrfah3o+IPqf/edd1xlTP4S
pr42loB/QphnfujgQU/ZsOMFk17Zby0OdFvwIVG/l5gvQ+5NZTAGVsczwE/e
MNcMmndhHZ9NXckb7GWme9DXZJtsbhifoJ1+yWSjwZxP9Wc16cTeGDPW03as
pfFb34C0Y7t77SJ0YdCF6/lQj+rvHotQeg89wYfStA7R5CeiJqzpocDYJ0hP
h2tjPTr0N6Y1DXZS7QA2fvIWJtn2JFBX8oZnDx8sKv9HH85w8plsbkibf9oU
2KYVX31lfA6qDsrk17/kiy/IetHvmeqFjg3+tjptWrYi8/uNe2IBfEso3Yia
VF2tDuYQfmWD1ufCZxa+DFWRCSTYKih/iIYgbwDreqn86hjLZHPD81V9e0xg
/GAar8CHwQY6fSqPaR23yWcEqW/vPmQZk/4a9xjrmHxh7eS33s80trCTbf/0
A/pEyr8nbMKc3BTLo6HIG9Zdm9oI2wgw6b7gXxeWIQMHGa8D/w9Axb/BWM/k
y2la34yEdckUJv2n6hMWq/itQ4LOKSj+nN+YEHr/MNg+d37rvfUEWx3m434x
PBqKvKF/MvnT2DG7TPcQ5GepYrKfIsEHAmNbyl4X5P+BNY1UnaoPuwrGv1T+
Dm3bhr6X+gr6L9McWo83QoF4KKbyR//4I1JbMjMz5TwANmT8DdX5CObtWL8A
nSp0MEH+tAD9XpCewC/B18YG/mpUHtuPLQp4d6m6/OKHYL0GVQb6X7yf1Lko
fZt8XgUF0s5D1QW9MOxk1DnVF4ICfrd6Geg9TXoB+LVQ16F0pQzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD1C3/D0cN2Bk=
           "], {{0, 
           142}, {220, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{220, 142},
         PlotRange->{{0, 220}, {0, 142}}],
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 5]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{0., 0.}, {0., 0.9428090415820635}, {
     0.47140452079103173`, 1.885618083164127}, {0.9428090415820635, 
     0.9428090415820635}, {0.9428090415820635, 0.}}]& ],
  AspectRatio->1.3801311186847083`,
  FrameTicks->None,
  ImageSize->{352.0860521980318, Automatic},
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{3.742214763647202*^9, 3.7422148140921993`*^9, 
  3.742214849828973*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"5c19778a-3ff2-4975-8eaf-15f86d1bf01b"]
}, {2}]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7422147882081013`*^9, 
  3.74221480750909*^9}},ExpressionUUID->"36744b9f-0e0e-49ee-a11b-\
a3921f5d0165"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Section",
 CellChangeTimes->{{3.7371985637926826`*^9, 3.7371985870047903`*^9}, {
  3.7394670694048986`*^9, 3.739467091602139*^9}, {3.742212534958724*^9, 
  3.7422125451843367`*^9}, {3.742212968435264*^9, 3.742212969647827*^9}, {
  3.7422155379593573`*^9, 3.74221554262906*^9}, {3.742217483518128*^9, 
  3.7422174846701927`*^9}},ExpressionUUID->"3fddaa04-c18e-4e35-a4d7-\
e6bd6120ec5c"],

Cell[CellGroupData[{

Cell["Start to work", "Subsubsection",
 CellChangeTimes->{{3.737196532196039*^9, 3.737196570179631*^9}, {
  3.739466666522048*^9, 3.739466670713827*^9}, {3.742215471898279*^9, 
  3.742215475192848*^9}},ExpressionUUID->"1eb99232-768b-45b1-9333-\
c9841e6345ed"],

Cell[TextData[{
 StyleBox["Initialization",
  FontWeight->"Bold"],
 "\nTo start working with SCR1 processor it should be loaded ",
 StyleBox["SCR1Device ",
  FontSlant->"Italic"],
 "package as follows"
}], "Text",
 CellChangeTimes->{{3.7422154784021473`*^9, 3.742215520025515*^9}, {
  3.7422161516292467`*^9, 
  3.742216159382546*^9}},ExpressionUUID->"bf663672-e907-4a35-b9a1-\
c5f7617b6dd5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<SCR1Device`\>\"", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.737193390494355*^9, 3.737193442700655*^9}, {
  3.741707418321744*^9, 3.741707423194973*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d3a54814-f965-40f5-8350-fbb3017d5f3c"],

Cell["\<\
Here, we create an instance of SCR1 processor. This is a singleton that\
\[CloseCurlyQuote]s why it can be created only one instance in one scope.\
\>", "Text",
 CellChangeTimes->{{3.74221552417509*^9, 
  3.742215649833749*^9}},ExpressionUUID->"c2b466b8-ef31-406e-af4c-\
d31203c273c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"device", " ", "=", " ", 
  RowBox[{"DeviceOpen", "[", "\"\<SCR1\>\"", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.737193447581373*^9, 3.737193464210661*^9}, {
  3.737193934108679*^9, 3.737193953462079*^9}, {3.737954703289415*^9, 
  3.737954703955413*^9}, {3.741867262828918*^9, 3.741867263514525*^9}, {
  3.7422233408682547`*^9, 3.742223364186308*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"ccdaaad1-16fc-4876-8c53-f3e015b4b4ec"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DeviceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"], 
               ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1: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
              "], {{0, 0}, {
              126, 107}}, {0, 255}, ColorFunction -> RGBColor], 
             ImageSize -> {Automatic, 
               Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
             PlotRange -> {{0, 126}, {0, 107}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"SCR1\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                    Style[
                    Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                    False], 
                    Style[
                    Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                    False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                    Opacity[1], 
                    Opacity[0.2]}, 
                    Devices`DeviceAPI`DeviceDump`status$$ = {
                    "Connected", "Not connected"}, 
                    Devices`DeviceAPI`DeviceDump`d$$ = 
                    DeviceObject[{"SCR1", 1}], 
                    Devices`DeviceAPI`DeviceDump`ind$$ = 1, 
                    Devices`DeviceAPI`DeviceDump`indr$$ = 1}, 
                   DynamicBox[
                    ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                    Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                    Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm], 
                    ImageSizeCache -> {67., {5., 9.}}], 
                   DynamicModuleValues :> {}], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], Appearance -> None, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1: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
              "], {{0, 0}, {
              126, 107}}, {0, 255}, ColorFunction -> RGBColor], 
             ImageSize -> {Automatic, 
               Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
             PlotRange -> {{0, 126}, {0, 107}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"SCR1\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                    Style[
                    Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                    False], 
                    Style[
                    Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                    False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                    Opacity[1], 
                    Opacity[0.2]}, 
                    Devices`DeviceAPI`DeviceDump`status$$ = {
                    "Connected", "Not connected"}, 
                    Devices`DeviceAPI`DeviceDump`d$$ = 
                    DeviceObject[{"SCR1", 1}], 
                    Devices`DeviceAPI`DeviceDump`ind$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$}, 
                   DynamicBox[
                    ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                    Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                    Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]], 
                   DynamicModuleValues :> {}], "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               TagBox[
                
                DynamicModuleBox[{
                 Devices`DeviceAPI`DeviceDump`opacities$$ = {
                    Opacity[1], 
                    Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
                  DeviceObject[{"SCR1", 1}], 
                  Devices`DeviceAPI`DeviceDump`props$$, 
                  Devices`DeviceAPI`DeviceDump`vals$$, 
                  Devices`DeviceAPI`DeviceDump`reg$$}, 
                 DynamicBox[
                  ToBoxes[
                  Devices`DeviceAPI`DeviceDump`reg$$ = 
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$]; 
                   Devices`DeviceAPI`DeviceDump`props$$ = 
                    DeviceFramework`DeviceExternalProperties[
                    Devices`DeviceAPI`DeviceDump`d$$]; 
                   Devices`DeviceAPI`DeviceDump`vals$$ = 
                    Devices`DeviceAPI`DeviceDump`d$$[
                    Devices`DeviceAPI`DeviceDump`props$$]; Column[
                    Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                    MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]], 
                 DynamicModuleValues :> {}], "SummaryItem"], 
               "\[SpanFromLeft]"}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  DeviceObject[{"SCR1", 1}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.741773496440621*^9, 3.741773642192869*^9, 3.74177370346517*^9, 
   3.741773810990169*^9, 3.741774074162043*^9, 3.7417743222376337`*^9, 
   3.741774508610795*^9, 3.7418003006833353`*^9, 3.741853173137547*^9, 
   3.741853291745172*^9, 3.7418570419670887`*^9, 3.7418591475888233`*^9, 
   3.741859966850381*^9, 3.7418600593022947`*^9, 3.741860338112294*^9, 
   3.7418610688296213`*^9, 3.7418616148607683`*^9, 3.7418617839793997`*^9, 
   3.741862087838151*^9, 3.7418621684700527`*^9, 3.741862254030376*^9, 
   3.741862394997312*^9, 3.74186247249263*^9, 3.7418625243994293`*^9, 
   3.741862954908944*^9, 3.741865960641588*^9, 3.741867282855174*^9, 
   3.741867459810594*^9, 3.741867653739461*^9, {3.741867737290174*^9, 
   3.7418677618814793`*^9}, 3.74186828672051*^9, 3.741869068789343*^9, 
   3.741869158823148*^9, 3.741886155316324*^9, 3.741886481399884*^9, 
   3.741886577306391*^9, 3.7418868260118523`*^9, 3.741887270876313*^9, 
   3.742211253736713*^9, 3.7422156778515053`*^9, 3.7422185399466476`*^9, 
   3.742223361064714*^9, 3.742223587040423*^9, 3.742223699732379*^9, 
   3.742223874569083*^9, 3.742224048882567*^9, 3.742224117374256*^9, 
   3.742224182662807*^9, 3.742224262062611*^9, 3.742224467986919*^9, 
   3.742224563473324*^9, 3.742224754113449*^9, {3.742226018821837*^9, 
   3.742226018985536*^9}, 3.742226127960181*^9, 3.742226758852952*^9, 
   3.742226809948143*^9, 3.742226967247468*^9, 3.742227041143292*^9, 
   3.7422273282377167`*^9, 3.742229155414898*^9, 3.742229474289743*^9, 
   3.7422296353202143`*^9, 3.742229735137333*^9, 3.742231126358231*^9, {
   3.7422313021656637`*^9, 3.742231302412752*^9}, {3.742231760644053*^9, 
   3.742231760865013*^9}, {3.742231809093294*^9, 3.742231809300416*^9}, {
   3.7422319543297453`*^9, 3.742231964196197*^9}, {3.742232110487994*^9, 
   3.742232110661463*^9}, {3.742232162972875*^9, 3.7422321842654877`*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"a59b716d-651b-430d-8d58-73cf9b7bd772"]
}, Open  ]],

Cell["There is a standard way to unload device.", "Text",
 CellChangeTimes->{{3.742215688082567*^9, 
  3.742215715368086*^9}},ExpressionUUID->"7286950f-34f7-4e3d-9961-\
25081da47bda"],

Cell[BoxData[
 RowBox[{"DeviceClose", "[", "device", "]"}]], "Input",
 CellChangeTimes->{{3.737193826478496*^9, 3.73719383071049*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"de3619b2-6f2a-4397-89ba-da7a78c57eb9"],

Cell[TextData[{
 StyleBox["Load program\n",
  FontWeight->"Bold"],
 "Reset SCR1",
 StyleBox[" ",
  FontWeight->"Bold"],
 "and load program intro the  memory"
}], "Text",
 CellChangeTimes->{{3.74221135447031*^9, 3.742211366780945*^9}, {
  3.7422115952895823`*^9, 
  3.742211649046753*^9}},ExpressionUUID->"541154d5-f546-4050-bf04-\
374f78c25cb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeviceExecute", "[", 
   RowBox[{
   "device", ",", "\[IndentingNewLine]", "\"\<LOAD\>\"", ",", 
    "\[IndentingNewLine]", "\"\<./scr1_programs/dhrystone.bin\>\""}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.737195234241221*^9, 3.737195282480632*^9}, {
   3.74169240590304*^9, 3.7416924070260143`*^9}, {3.74185330345366*^9, 
   3.741853315419147*^9}, {3.741856823973422*^9, 3.741856827355569*^9}, {
   3.74186006416965*^9, 3.741860064630362*^9}, {3.741861619113221*^9, 
   3.741861621140737*^9}, {3.741862003073409*^9, 3.7418620179193563`*^9}, 
   3.741862324413477*^9, {3.742211376794608*^9, 3.742211405371554*^9}, {
   3.742231316640864*^9, 3.742231319685196*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"9624ebf4-22de-40a6-ae09-b60252f077f0"],

Cell[TextData[{
 StyleBox["Soft reset SRC1",
  FontWeight->"Bold"],
 " \nThis is a reset of SCR1 processor."
}], "Text",
 CellChangeTimes->{{3.742211425899447*^9, 3.742211450072006*^9}, {
  3.742211545647708*^9, 
  3.742211572905532*^9}},ExpressionUUID->"e7f77f02-c2c4-48da-bfd8-\
7de23f52a556"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeviceExecute", "[", 
   RowBox[{"device", ",", "\"\<RESET\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.741867810109128*^9, 3.741867847071076*^9}, {
  3.742211453565092*^9, 3.742211494120522*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"6090ce86-fb7d-43d9-96f4-f0b52c826c13"],

Cell["\<\
Hard reset SCR1 (soft reset + clean memory and simulator state)\
\>", "Text",
 CellChangeTimes->{
  3.742211496103846*^9},ExpressionUUID->"b49c603e-f494-4ebb-a4b5-\
7bb0706c2bec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeviceExecute", "[", 
   RowBox[{"device", ",", "\"\<HARD_RESET\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.741868311523582*^9, 3.741868314332066*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"d0602119-e757-4d0e-b226-92097b03259b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Read information from SCR1 side", "Subsubsection",
 CellChangeTimes->{{3.7422115076772614`*^9, 3.74221152215093*^9}, {
  3.7422161823872643`*^9, 
  3.74221618955133*^9}},ExpressionUUID->"0756ce18-7e41-4db1-bd2f-\
0c8e5688a183"],

Cell["\<\
You may read different information when processor works. current state.\
\>", "Text",
 CellChangeTimes->{{3.74221198984966*^9, 3.742212001767749*^9}, {
  3.742216196695072*^9, 3.742216227119972*^9}, {3.742216361377473*^9, 
  3.7422163917194653`*^9}, {3.742216976004754*^9, 
  3.742216986652069*^9}},ExpressionUUID->"49207ad1-ae23-4a04-a538-\
91d98ba2bfcb"],

Cell[TextData[{
 StyleBox["SCR1 state",
  FontWeight->"Bold"],
 "\nThe basic informative function returns assassination with "
}], "Text",
 CellChangeTimes->{{3.742216988192893*^9, 3.742216996876465*^9}, 
   3.742217072811057*^9},ExpressionUUID->"d6a50e65-ece4-47e2-a5d7-\
a42c04c727d2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"DeviceRead", "[", 
   RowBox[{"device", ",", "\"\<STATE\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.7418618599422083`*^9, {3.7422120719866457`*^9, 3.7422120766715393`*^9}, 
   3.74221633424051*^9},
 CellLabel->"In[47]:=",ExpressionUUID->"9b507119-333f-4d4c-9f24-aa90b57018b5"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 4, "InitialType" -> 
        TypeSystem`Struct[{"State", "Finished", "Clock", "IPC"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer]}], "Shape" -> 
        TypeSystem`PackageScope`DocumentShape[
          
          Association[{"State"} -> 
           TypeSystem`PackageScope`AtomShape[38.400000000000006`], {
            "Finished"} -> TypeSystem`PackageScope`AtomShape[34], {"Clock"} -> 
           TypeSystem`PackageScope`AtomShape[34], {"IPC"} -> 
           TypeSystem`PackageScope`AtomShape[34]], 1], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[440115070], "Type" -> 
        TypeSystem`Struct[{"State", "Finished", "Clock", "IPC"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer]}], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[440115070]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"State\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"State\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1680242399][{
                    Key["State"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1680242399][
                  GeneralUtilities`Slice[
                   Key["State"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["WORK", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1680242399][
                  GeneralUtilities`Slice[
                   Key["State"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Finished\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Finished\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1680242399][{
                    Key["Finished"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1680242399][
                  GeneralUtilities`Slice[
                   Key["Finished"]]], "Mouse"], Background -> GrayLevel[0.95],
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1680242399][
                  GeneralUtilities`Slice[
                   Key["Finished"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Clock\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Clock\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1680242399][{
                    Key["Clock"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1680242399][
                  GeneralUtilities`Slice[
                   Key["Clock"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["30"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1680242399][
                  GeneralUtilities`Slice[
                   Key["Clock"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"IPC\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"IPC\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1680242399][{
                    Key["IPC"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1680242399][
                  GeneralUtilities`Slice[
                   Key["IPC"]]], "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["512"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1680242399][
                  GeneralUtilities`Slice[
                   Key["IPC"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1680242399][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1680242399]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1680242399][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1680242399][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[
         TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {109., {55.134033203125, 60.865966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.741861861315893*^9, 3.741861865249484*^9}, {
   3.741866076079509*^9, 3.741866082199107*^9}, 3.74186775130823*^9, {
   3.741867789240843*^9, 3.741867824477825*^9}, {3.7418682935348787`*^9, 
   3.741868335067452*^9}, 3.741869076476862*^9, {3.7418691648264112`*^9, 
   3.7418691914723873`*^9}, {3.7418859734977703`*^9, 
   3.7418859822985497`*^9}, {3.741886174922037*^9, 3.74188618039149*^9}, 
   3.7418864874100122`*^9, {3.741886586424234*^9, 3.741886617937817*^9}, 
   3.741886834446402*^9, {3.741887277007326*^9, 3.7418872937174397`*^9}, 
   3.742211414882999*^9, 3.7422115245152197`*^9, 3.742212077370805*^9, 
   3.742216335069954*^9, 3.742217865409799*^9, 3.7422185492555237`*^9, 
   3.742223373354672*^9, 3.7422304465961742`*^9, {3.7422305144462433`*^9, 
   3.7422305191381187`*^9}},
 CellLabel->"Out[47]=",ExpressionUUID->"54f4a767-2ed7-4212-891c-454995ce81eb"]
}, Open  ]],

Cell[TextData[{
 "Here ",
 StyleBox["State ",
  FontSlant->"Italic"],
 "shows current state of the instance (IDLE, WORK, FINISHED). ",
 StyleBox["FInished",
  FontSlant->"Italic"],
 " flag  shows 1 if the program is finished otherwise it is false. ",
 StyleBox["Clock ",
  FontSlant->"Italic"],
 "gives information about number of steps aka clocks so far. ",
 StyleBox["IPC,",
  FontSlant->"Italic"],
 " instruction pointer counter, shows an address of current instruction."
}], "Text",
 CellChangeTimes->{{3.742216396825121*^9, 3.742216493081846*^9}, {
  3.742216533068901*^9, 
  3.742216655538752*^9}},ExpressionUUID->"c41100be-0c4d-4c40-b5e3-\
c722773ed75b"],

Cell[TextData[{
 StyleBox["SCR1 branch state\n",
  FontWeight->"Bold"],
 "The branch state consists of different signals from SCR1 pipeline."
}], "Text",
 CellChangeTimes->{{3.742217002247324*^9, 
  3.742217071092122*^9}},ExpressionUUID->"b1f7c1d1-d8f9-4966-b0b0-\
d2a89588f61f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"DeviceRead", "[", 
   RowBox[{"device", ",", "\"\<BRANCH\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.741869095940776*^9, 3.7418691139963503`*^9}, 
   3.742216674713832*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"737edf65-e6f3-4358-a510-74a69245fd62"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 5, "Length" -> 5, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration[
           "Branch not taken", "Branch taken", "IPC", "JB addr", "Jump"]], 
          TypeSystem`Atom[Integer], 5], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[144.], 
            TypeSystem`PackageScope`AtomShape[34]]], 5, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[159298132], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration[
           "Branch not taken", "Branch taken", "IPC", "JB addr", "Jump"]], 
          TypeSystem`Atom[Integer], 5], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[159298132]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["IPC", 
                    Style[
                    "IPC", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2029408692][{
                    Key["IPC"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2029408692][
                   GeneralUtilities`Slice[
                    Key["IPC"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["512"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2029408692][
                  GeneralUtilities`Slice[
                   Key["IPC"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Jump", 
                    Style[
                    "Jump", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2029408692][{
                    Key["Jump"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2029408692][
                   GeneralUtilities`Slice[
                    Key["Jump"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2029408692][
                  GeneralUtilities`Slice[
                   Key["Jump"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Branch taken", 
                    Style[
                    "Branch taken", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2029408692][{
                    Key["Branch taken"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2029408692][
                   GeneralUtilities`Slice[
                    Key["Branch taken"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2029408692][
                  GeneralUtilities`Slice[
                   Key["Branch taken"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Branch not taken", 
                    Style[
                    "Branch not taken", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2029408692][{
                    Key["Branch not taken"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2029408692][
                   GeneralUtilities`Slice[
                    Key["Branch not taken"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2029408692][
                  GeneralUtilities`Slice[
                   Key["Branch not taken"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["JB addr", 
                    Style[
                    "JB addr", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2029408692][{
                    Key["JB addr"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2029408692][
                   GeneralUtilities`Slice[
                    Key["JB addr"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2029408692][
                  GeneralUtilities`Slice[
                   Key["JB addr"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2029408692][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2029408692]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2029408692][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2029408692][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {198., {67.634033203125, 73.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.741869097909911*^9, 3.7418691144957523`*^9}, 
   3.741869167154869*^9, 3.741886489993532*^9, 3.74221667524151*^9, 
   3.742217859976939*^9, 3.742230464585661*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"573c80f6-4a80-474b-91d9-f133b23647cd"]
}, Open  ]],

Cell[TextData[{
 StyleBox["SCR1 memory bus\n",
  FontWeight->"Bold"],
 "It may be implemented an access to any buses. Here is an example for memory \
data bus."
}], "Text",
 CellChangeTimes->{{3.742217002247324*^9, 3.742217071092122*^9}, {
  3.742217594892026*^9, 
  3.742217655277028*^9}},ExpressionUUID->"043367d9-fa5c-4bf1-8e8a-\
46dfe53ea264"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"DeviceRead", "[", 
   RowBox[{"device", ",", "\"\<DBUS\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.741869095940776*^9, 3.7418691139963503`*^9}, 
   3.742216674713832*^9, {3.7422176577586937`*^9, 3.742217659235798*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"f912d38a-62ab-4424-ab7e-1e082ba1b223"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration["Address", "Bytes"]], 
          TypeSystem`Atom[Integer], 2], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[63.], 
            TypeSystem`PackageScope`AtomShape[34]]], 2, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[324536970], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration["Address", "Bytes"]], 
          TypeSystem`Atom[Integer], 2], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[324536970]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Address", 
                    Style[
                    "Address", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 905194145][{
                    
                    Key["Address"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[905194145][
                   GeneralUtilities`Slice[
                    Key["Address"]]], "Mouse"], 
                 ImageSize -> {{63., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[905194145][
                 
                  GeneralUtilities`Slice[
                   Key["Address"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Bytes", 
                    Style[
                    "Bytes", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 905194145][{
                    
                    Key["Bytes"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[905194145][
                   GeneralUtilities`Slice[
                    Key["Bytes"]]], "Mouse"], 
                 ImageSize -> {{63., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[905194145][
                 
                  GeneralUtilities`Slice[
                   Key["Bytes"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 905194145][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 905194145]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[905194145][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[905194145][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {117., {30.134033203125, 35.865966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.741869097909911*^9, 3.7418691144957523`*^9}, 
   3.741869167154869*^9, 3.741886489993532*^9, 3.74221667524151*^9, 
   3.742217660062151*^9, 3.7422178565838127`*^9, 3.742232200071809*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"a4a9ce54-5844-4a4e-93cc-8fe354638b0a"]
}, Open  ]],

Cell[TextData[{
 StyleBox["SCR1 general purpose registers\n",
  FontWeight->"Bold"],
 "Registers are basic structure of processor. They reflect the state of \
processor. Any computations use them for work. We can read the value of them. \
Here an example of representation values of register in binary and \
hexadecimal forms."
}], "Text",
 CellChangeTimes->{{3.742217057319984*^9, 3.742217153856681*^9}, {
  3.742217300753049*^9, 
  3.742217344522896*^9}},ExpressionUUID->"59070edc-3cc3-455d-9fa7-\
923a2a97d7af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#2", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"BaseForm", "[", 
        RowBox[{"#1", ",", "16"}], "]"}], ",", 
       RowBox[{"BaseForm", "[", 
        RowBox[{"#1", ",", "2"}], "]"}]}], "}"}], "&"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"DeviceRead", "[", 
     RowBox[{"device", ",", "\"\<REGS\>\""}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.742216723878661*^9, 3.742216822454677*^9}, {
  3.742216909914373*^9, 3.742216936965242*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"9224bb0f-ea63-4c51-bd97-797e2feb2e4e"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 31, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Tuple[{
            TypeSystem`Atom[Integer], TypeSystem`AnyType, 
            TypeSystem`AnyType}], 31], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`RowShape[{
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`UnknownShape, 
             TypeSystem`PackageScope`UnknownShape}]], 20, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1174529856], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Tuple[{
            TypeSystem`Atom[Integer], TypeSystem`AnyType, 
            TypeSystem`AnyType}], 31], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[1174529856]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[1, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"260\"", "\"16\""], 608, Editable -> 
                    False], BaseForm[#, 16]& ], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[1, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"1001100000\"", "\"2\""], 608, Editable -> 
                    False], BaseForm[#, 2]& ], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[1, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[2, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"10000\"", "\"16\""], 65536, Editable -> 
                    False], BaseForm[#, 16]& ], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[2, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"10000000000000000\"", "\"2\""], 65536, 
                    Editable -> False], BaseForm[#, 2]& ], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[2, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[3, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"3520\"", "\"16\""], 13600, Editable -> 
                    False], BaseForm[#, 16]& ], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[3, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"11010100100000\"", "\"2\""], 13600, 
                    Editable -> False], BaseForm[#, 2]& ], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[3, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[4, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"16\""], 0, Editable -> False], 
                    BaseForm[#, 16]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[4, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"2\""], 0, Editable -> False], 
                    BaseForm[#, 2]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[4, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[5, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"ffffffff\"", "\"16\""], 4294967295, 
                    Editable -> False], BaseForm[#, 16]& ], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[5, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox[
                    "\"11111111111111111111111111111111\"", "\"2\""], 
                    4294967295, Editable -> False], BaseForm[#, 2]& ], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[5, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[6, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"1c\"", "\"16\""], 28, Editable -> False], 
                    BaseForm[#, 16]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[6, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"11100\"", "\"2\""], 28, Editable -> 
                    False], BaseForm[#, 2]& ], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[6, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[7, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"ffffffff\"", "\"16\""], 4294967295, 
                    Editable -> False], BaseForm[#, 16]& ], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[7, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox[
                    "\"11111111111111111111111111111111\"", "\"2\""], 
                    4294967295, Editable -> False], BaseForm[#, 2]& ], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[7, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[8, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"16\""], 0, Editable -> False], 
                    BaseForm[#, 16]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[8, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"2\""], 0, Editable -> False], 
                    BaseForm[#, 2]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[8, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[9, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"16\""], 0, Editable -> False], 
                    BaseForm[#, 16]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[9, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"2\""], 0, Editable -> False], 
                    BaseForm[#, 2]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[9, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[10, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"16\""], 0, Editable -> False], 
                    BaseForm[#, 16]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[10, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"2\""], 0, Editable -> False], 
                    BaseForm[#, 2]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[10, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["11"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[11, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"f0000000\"", "\"16\""], 4026531840, 
                    Editable -> False], BaseForm[#, 16]& ], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[11, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox[
                    "\"11110000000000000000000000000000\"", "\"2\""], 
                    4026531840, Editable -> False], BaseForm[#, 2]& ], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[11, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["12"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[12, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"a000\"", "\"16\""], 40960, Editable -> 
                    False], BaseForm[#, 16]& ], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[12, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"1010000000000000\"", "\"2\""], 40960, 
                    Editable -> False], BaseForm[#, 2]& ], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[12, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["13"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[13, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"a\"", "\"16\""], 10, Editable -> False], 
                    BaseForm[#, 16]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[13, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"1010\"", "\"2\""], 10, Editable -> False],
                     BaseForm[#, 2]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[13, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["14"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[14, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"16\""], 0, Editable -> False], 
                    BaseForm[#, 16]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[14, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"2\""], 0, Editable -> False], 
                    BaseForm[#, 2]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[14, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["15"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[15, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"31\"", "\"16\""], 49, Editable -> False], 
                    BaseForm[#, 16]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[15, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"110001\"", "\"2\""], 49, Editable -> 
                    False], BaseForm[#, 2]& ], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[15, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["16"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[16, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"30\"", "\"16\""], 48, Editable -> False], 
                    BaseForm[#, 16]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[16, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"110000\"", "\"2\""], 48, Editable -> 
                    False], BaseForm[#, 2]& ], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[16, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["17"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[17, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"a0000000\"", "\"16\""], 2684354560, 
                    Editable -> False], BaseForm[#, 16]& ], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[17, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox[
                    "\"10100000000000000000000000000000\"", "\"2\""], 
                    2684354560, Editable -> False], BaseForm[#, 2]& ], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[17, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["18"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[18, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"16\""], 0, Editable -> False], 
                    BaseForm[#, 16]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[18, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"2\""], 0, Editable -> False], 
                    BaseForm[#, 2]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[18, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["19"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[19, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"16\""], 0, Editable -> False], 
                    BaseForm[#, 16]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[19, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"2\""], 0, Editable -> False], 
                    BaseForm[#, 2]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[19, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["20"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[20, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"16\""], 0, Editable -> False], 
                    BaseForm[#, 16]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[20, 2]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TagBox[
                    InterpretationBox[
                    SubscriptBox["\"0\"", "\"2\""], 0, Editable -> False], 
                    BaseForm[#, 2]& ], FontFamily -> "Source Code Pro", 
                   FontSize -> 13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
                  GeneralUtilities`Slice[20, 3]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    31 (-20), {1, 31 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 31 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    31, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 31 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    31 20, {1, 31 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    31 (-20), {1, 31 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 31 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    31, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 31 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    31 20, {1, 31 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1420832801},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1420832801},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1420832801},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1420832801},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1420832801},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1420832801][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1420832801]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1420832801][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {469., {268.634033203125, 274.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.742216725292186*^9, 3.742216733474*^9}, {
   3.7422167945535088`*^9, 3.742216822902618*^9}, {3.742216911194941*^9, 
   3.742216937592392*^9}, 3.74221784811615*^9, 3.742223377488944*^9, 
   3.742227054777484*^9, 3.742227204367938*^9, 3.742231436942356*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"2a31d9a9-9327-4992-9691-4b52fd2fcede"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Memory\n",
  FontWeight->"Bold"],
 "Code of program and data store in the memory. The value is contained at \
particular address can be read."
}], "Text",
 CellChangeTimes->{{3.742217002247324*^9, 3.742217071092122*^9}, {
  3.742217198337976*^9, 
  3.74221728271126*^9}},ExpressionUUID->"696aca4c-e5dc-4486-871b-\
a5e7036bf51c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"BlockMap", "[", 
    RowBox[{
     RowBox[{"#", "&"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{"#", "&"}], ",", 
       RowBox[{"DeviceRead", "[", 
        RowBox[{"device", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<MEM\>\"", ",", "0", ",", 
           RowBox[{"32", "*", "1024"}]}], "}"}]}], "]"}]}], "]"}], ",", 
     "128"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.737197408354478*^9, 3.737197497485209*^9}, {
  3.7416983862530737`*^9, 3.74169840029431*^9}, {3.741800339980147*^9, 
  3.741800361165791*^9}, {3.742217402830648*^9, 3.742217403001433*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"a98b811e-a3e2-43a8-ba98-1162da33ae9b"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzsvXd0ldXT9y1SpXeQJh1CCSLSy1CkeSIgXTpIEFRCr9Kr9GJohibSpdeA
dEgIpJBKCT09Ocm5gnQQ8l73ut//3vX9rWee9zq/JPr1H/WzztrZ196zZ8/M
nj27wpBRXd2zfmD+k+WDD2aZ//qf/z43d0ujWTMM+STyau4ZXoYULhKeWrtW
ipCTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTZxweOrdCoVNpDpm6
5avD+dKS5W2Rbo/6do6Qflk69u0fasis0qFFa50z5Jx9aVDPc/EZrn1ycnJy
cnJy8ozG59Srk1b6iCFrj/4wLuKQIds67t4aE54oo8d4eLhcNCRrWOqT/CcN
aTTPq8Wouwnq9huE2w6mhhgy3bd13QaHDfmsaJbbuSvHWGZf7QpcMsw7PFnK
dMz5Y/41MVJ4e4XPC/4aJMNO3R16+ZohrScNnrvptCFvG3rmiHbT95/ts/1/
c/vF/JJrTa2WJEX7tgorXPOitCpwfGTJ7D7k/5dcO/5/RjQ5sXOWIXWyVj44
eKOpj1uGRi3OhX9f2MtWu0SgIR7Z1/x5c6chD5p8PvjTolFyrbrNZehlQ7rM
bRxcYrUh7gXrx79IuCsDl9s6Zg0w5MJwj99+3m6I/3r5NnrzY2k/3Lbpqp8h
J1a/6bp5kyG/HBk84u8WjyDPaPsa+b+TU/7JycnJ/5cj/ZbR+klOTvknJ6f8
k5NbxYfmmRSV6G/I11vPVpv9pyHJQ1e/EpcEWb6h6pK+uwzpELe5+bf7DEkd
fjiuyMIkdfsf9c6Vq81Uu9irNi959uE9WZpyaN6hYtdlVfsl+ervMKTR2dYb
Zv5hSFrTo89O7NW3T05O/U9OTvknJ6f8k5NT/snJycnJycnJycnJycnJycnJ
ycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJycnJ
ycnJycnJycnJyckzJte+H5TRuFda2RJeZr/flAzN+WSXIc1+Pl2rTWO7PHtq
G7Et3JBPO/0+9vUJQ4buielq6xgrRSvn8xnvbZeGs7yilhd9KDOXuU5pF3td
5vVuY/x6P1l8H19ZOuxsjPxevXfiyZNB4pVim1TSbOdO2gr30OOG9OmdFLY9
fyys37snYc+oN0UN6eIz4fiFdimyK9f+1rOfRcg3M8v/si0pSbY9mzV+31fh
cmj+npdbU6/KlyOn7rp1zuSLy/Qbvy9ESvbo7xXV4arssOWpMqCGXT4d6Hpk
ZIXbsupQp3oXYvzkcNnd+1ouMmTkLs+WqVsM8X16fe/7KclwfLZ95La52lpD
/DedLdXO7O+ILBd61tpuz3DzSE5OTk5OTk5OTk5OTk5OTk5OTv7/5f2ydOzb
P9SQWaVDi9Y6Z8g5+9Kgnufi5ecOtuhivoZkzfNrobvrDLnU5O97k+o9kBw/
23pN8TdkRKm+noN/N3n7tjHNhj4Wj8sfJXe+bEiRv93W/nXSkOqHN3wacDIB
vos9uqKtYeQlQ15/XvVy6kpDunq0TNwz7q5UqmMr7TB/vyvE7X6LXwyZdMQl
ts2Ae/BdbNTPN+Nts+9eM2RonQojk7cYsrN7z+86HtO/o42+d6uHbcXXZvv5
Hucb5LPZkI1Z+yVsm/II9n9DvYZND2wzZOnFmz+dr2xIlbPZpk9tFakenzqt
bU+W+Biy78yCbMfWGnJwfc6HNc7dh+Owb7bN3bhufk9A+4VNzL/v/eJL97Uu
eL4imtrSspjt9/AY93LpGkM2vSj8+H6H+/C7UH/Q+KN20LvqjzvZIraY39Xn
m/3lPtxgSPi91Mgrux/IsPJuOYffNmTV2BpBuc8bsuPRGf/b0XHwu1A8H8k/
6ue/Tf6d/b4JkjckV2g80fgs2Ts0+5U95nwELQ/d0cyQAacqPl0wOdKy/h8t
4lap+y1DoiOyHjtzxpDVLfwCl3jEZTg9j/gPv9k++c1cdz7ddvu922VI/BLX
Rzc7RUmfbjG355rrZeUXrqcKmOvrYMklF47+Gi/DTt0detmUq9aTBs/ddNqQ
tw09c0S7JUivHTN77r1pyJaRi/s/NX+/te2iIwUnxcN14ey/W6dEmyXnuhsS
2sBx8U5ZhxyIOz3iSfQtcW+6bMh3jQwZlC3/dy3Ppci1561Xnc95S1LW+E5b
9sQhrRbcz9rqRrL8XLrEs9aPw8Wtx8/Pn513yKvaEdufVUuWZ/XbnrIPDBP7
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
2Lv9ZBvnbo7/n9M/n1rkN0MO7ugSZzgeqet0aeuwofFB90m17aN5t+q9Lave
O9DW0dXeF9aOJ9JvSB6094i1eV/aeUHzrq1HrbUPraq/52x50Nqx2vdTUD+1
9RuRHC6/mS1b1UqGLHoQO2TZxBQplSXR9dchN+F+5Gy7wtn5DLRjMybPLPGr
jDZujA+kb3wgo8kn2je1doJ2vuq2iV5UPsghddu37XqxV7IMc529I1tQGOyP
dl9GfxfV9dLWm9W+a6N9x1Z7/o6+C42DNt9ee76JxgGtU62faFV9G3Seq31v
BckDakdbpwjNo/bdFu158T9VP2j3KdQ+9Qz1zP+f/frfFn/TyqfWP9XWb9fe
N9fadagdZ7+zaVV8Q7sPov4jPaa139D9L23/3Xr8/PzZeYe8qh2x/Vm1ZHlW
v+0p+8AwtXxa9Y5Yetn/e4tMrXJshSEbK+6p7WXqnw1TfWYVK5BMTp4hOLoH
rb1Pp32PBt2T5fvprDPzb64zY5X8Z/b9WptPm9nPd7TrZfT68xsM8/8Hx7+f
OfZHQ0IOD3i4JS5S7W+i+XW2n4LynY4WcavU/ZYh0RFZj50x7f/VLfwCl3jE
wTwT1D7a11B9Tu07X8jeRvsjah+1Y1VcHeWnWVWngvG9/xzf23fxwa5ly0y7
4rXbopO/mf396upy78+SyckzBM9o/gg5OTk5OTk5eWbnGe29AHLy/xP+Z0ST
EztnGVIna+WDgzcakrVlaNTiXClyqtrNeoFzDGlRa1a3tpsMefZjcHh8TDLk
J6aMOfx0niGdetx7WX2zITEbgny/uGgdP+aft06phYb0n9FoY94thkT4Bnj/
tinz8MNld+9ruciQkbs8W6aa3Pfp9b3vp5D/t/jBUW1qfLfEkOnBqTFhWw05
Wf7axr49ycn/HTyjxaPIyf9JXGsvkWcuvvb37oUTTH368Q+Lu3jvMaRs1ImC
754kWcbRuVVG8xfIycnJycnJycn/l3c9XCBk0RCHnGnXc+HuwCRZtMR73Y2g
EBiP0raP8pyRv69t/5PUQnN2vrDLleRpPQ9tfyTjau8bee+Yf6bpv7Pbn37L
/c3wE4Ycz175zMYjhsz9ffu8zcsSYbzXKrnKaHUMrOIob9PZPKONA/l/5vZP
rnmMaOKQgQs+frrKNUk2d+p0vdnyEKf74+T/yzPaOZqzeUYbf8TRPZ304ugc
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
0PqnmgFwH9HaV6PHeHi4XDTlIyz1Sf6ThjSa59Vi1N0EKA9Ifu73Pdr4YLcU
afP5mXLBXnHSe3TN/amlgtX7kbP3U6Q/kZ5EHLWP4gPInkfrfUJq2tqjex1S
Mdf+ra0e2aVDK3tP39Ohav8u4ZHtl2ym3V7z2xG2eaaf2OHE84heG2LgfKHx
R/1H/r5Wf6J4SJm/Ao8Mq2iXB4cnL36+85bUzxNpa+aL/QvtO87a8dSOD4qf
o/HRzpfWPkHxKGSfoPWCxvnFktuJP39ol/V//2YvejZCfCbkPFDLDc8Xsm+t
kjdtfBLFJdB6R9/b8HTapYQDpv1T53DeeSeDZVDu8QGRea5Cv+nLkVN33TqX
JNsWl+k3fl+IlOzR3yuqw1W4r6H1guYFnYN8M7P8L9uSzL/7bNb4fV+Fy6H5
e15uTb0Kz6/RfHmllS3hZY7Lm5KhOZ+Y493s59O12jS2w/trSG8jeUN2+w5b
nioDatjl04GuR0ZWuC2rDnWqdyEGyxvqJ9qndrkX+z1ylSH7bNlDZ/xuyMJd
l8eOtdvhOGvtATT+Wv0D4/wrG5XpVChZLp047u1d9rFU/rPzsrB8AVCeUbwU
2W/IL2i4oUez1QftEt2p/G8PLj8QR65Xlzdfva5+RwN9L5pH1A6yr3J0X2cP
6JcsbefMa7lwfJTUHXrIK+ijQGn4QduuJ/unSJ+h/pfXXI6T1WnzBxWrGQzl
E/UHySda10iuUPwf/V30vah9dI8V2fPa/Re9N4r8fW08Cq1f1D6KH2rjvdp4
KfLjtPFz5B9dmd1x54wS5votMril6/5YSXUp+Vf18Tfg95Y7YMt6PMiQcalB
Uba9phzVrvSg0pUoeF6J/BH0eyTnMSHzu2xqZ677L6tNv1YgShbcXBtw8XwA
1PNavYH0G+oPeq8Z7e+r169sOaqUXZZmuzxkeq1bcsfdfaj3Lj8YN0Pneuid
U9Qf9D4psmO18bEnJV6c+Ph7u5y9dtdwfX5Xxt596vHwNo5vo/WI7n1r44c9
8rQYVK+rXfwunp7sOz9SBtjXeHebfk1C2g682+h9ioS4nyuaKonS/Knr2kG1
cTwffa9V8fzh57y/qDjELj+Wqep3YupdKd5g5sK+p6+p20f9R3pJGy8tWjmf
z3hvuzSc5RW1vOhDmbnMdUq72Ovw/BTZe+i7tPYzGk90Xq+N32rjFdr+W6VP
PpJuQZMK26Vpr3xNsx+5KdMvpE77fJGfuEduG/04xi6j/8xS7IPuj6RrZcm6
bIo/9IO0+qRX7trrGi9KlnXTG8VIi2jJ+vZClWKbA6E+QfKJ7EPkV2r3O7S+
tPKP+o/sK/ROt7b/9x9169BqpilXc1pcl/0OyRHs4drM9Y66/0ie0XrUxofR
+FQ6XbB7gwiHBHV7t3vXqGTZWmNL6ULZw6Vg46oTPLKmyKKjrV9s6x8r2VP2
V15b74Y6Xor0m1Xjj955R/lO2ngF6r92/FF8ZuDmK6W2zXLIh7fmTnz9hV0a
N/Y73DwtBMoDqguB/AWrzte08oDsSaSHt75y3ZbkaZf40wfuBYbcl+Y/dd++
y+M6tAe0+YTo3FzrTyH9rPX3kb2E7CvUH/RdyF5F8oDaR3mSzv5eNL9bhidv
mdLJIcvjGjYvOyNJiozMWnfBgRDYH23+LdKH398/uWxivhTZGv211/D5sTI1
z7dLHnbD8o/it2idQnsG7C9WrXekT7Tfq13v2vlF+6l2P0LrReu/aPWDNh6C
+oP2I61+QHkaVukHZ3/vld57V5V/lCJLIlZW2eKXIMvafjLtr79xPGfT/jkb
xv9qSJIx4dt85nqx9T3TJK6fHfodWv35Q7EdIyb6GFKxyp4mN70N+fjBuoou
ngnQPkfyj/x0dN6ExnPK0hafjdiSLOWPr9n1blu0HPo58lmFBOy/ozgzivdq
76Fo49vaeC/Kb9HGe7Xxdm28d+b869NaHzPl4N7VEqcOG7J64s7VrQ4nwr+L
xll7HwGtd9R/NF/IX7MqX8Uqext9l9beRutRm/+A5isppWjd2qOSJGxxzs3z
r16TGQ+DVv5Zwldtr2rzObXtO9ue1+a3oPiGVfa89nwks9vzzv5erb5C/dHa
81atLyT/SA8gfx+dqzp7/Tp7fWn1uTYe+3Nne/z7u3bxrfjFs101H8mlLbk6
xfb1h/Ft7XpHdqBW/rX3idA8orilVevd2d+L7HA0Xz1LvDht250s17/q5tfD
P1pa5Su091r2IBivRveAtHap1l+u2yZ6Ufkgh9Rt37brxV7JMsx19o5sQWEw
nm/VenG2/YPin1bZP2g8Ub6WdjxRvAX1U3v+qM3P197/1eorrf7M7PaJs78X
7Y8oHoX6g9Ydkh90TwH1P6PZJ0g/aPuP2kfjjOwirb5FfrFWvznbPkF+9z/V
PnH296J9Vlu/AskhyuNF/Uf78r7ZNnfjuvm7gPYLm5j7i/eLL93XujyW7G8+
+/DXiQ6x7xwfUq+sXd7vGfm+pBEi3q171tu72CEf5/yl9Pkf7TLOr6L7kAKh
0F7Sxt+cnS+B7tcjjvw7bb7Eyu03vz//XYqM9Ywc3tceJ4HLHxVp0jQY2slo
HNA5FLIH0L0SpA+RvYT2XzS/aL7QOGvXL7LfkL2E9DPS/9r8c239EPR7lB+I
9CEafyT/3j88b5/rUoq0bfttg05fJ8iDdQWGzAsIhu0jO9bZ9UnQ75H9bNX5
4MoPd3z480aHJDqaPR1/yC4RHQ5+v98tVDZXqLFlTJ0k8T6+r2LW8pdk0zGX
Hhsr4fok2vvLKB4C80m6536Te0WSjHp+7G47r0BJHf+bq/8qX2h/avU/kp+U
Nb7Tlj1xSKsF97O2upEsP5cu8az143C4T82MLdZvVm67JO7pVWRZw5tSofS0
NYe+94P1WJA8XG8dfj/CP1nGHupoO/FjjMz5xD5j+LQgqMe034v0LdLn6DwO
5Sej8zKUj43uc6H8k8HRbyZNjzPt7qlz9p+LjZF6+5dvHhgRBH+P6iOh/iB9
hewftO4m/7Tx+fHTpp3Q6162occMcX+3dXjvdomw/gbaL1A8AflT6XX+vuPk
ofJZPM39d/zgiUO2GzI5/OLQG1ft6nM9xJG+QuOm3R/R/uLs/RGdhyJ9aNX5
OKpfp81HQveheD6evufjW/vGl+603pBI34/Pu5i/7+N6rsOiWXb1OKRXPqpV
+cCo/3Pq1Ukrbfpva4/+MC7ikCHbOu7eGhOeCPWJtv8or1ubT+vsfGzteb02
fo7ybbT5DChPT1t/A9kbKD9fG69G36utv4HqB6J7stp6mMj/1baP/BE0Puh7
kb+D4oeoP8he0vqV2vxzbbwXya1V9SG19TRQPSIUP9TWI0L2M1rvaN6tqqeB
xl8bL9XWI9KOp3Z8tPU0tPOlzcdG8o/kE40P0p9oPaL7LEgfongOqlOhrncH
/E0Ub0Hzpb0PqD1/QfrTqnrF2nq5Vt03RHF+bb0Cbb1o7f10tG9q9ztn32/S
+i/afAP0XVp/U1s/TZsv4ezzd3Quo63vh+x5bX9QfA/1B9mHyH9EcoXmRftO
AZIrbTva+IC2vp+2Hj7Se6gddJ8ata89f0RxJCTPKM6vrR+ivS+D1gv6XnSu
gdpH44nOQxHXyqezz5eR/YzsSeRfaM+XkdyicdPez9XqQ219D21+uDa/Duk3
VGfJqnoUyG636n4Hsg/R39XWH0b+jja/VxtvQetaO/7acxzt/qg9/7IqfqKt
T6iN52jre2vXr1b/aOVZG39D/UFxA6veQ0H5YGgf0dpXSB9q68dq49XaeLI2
vm1V/W0U37Cq/jaqH6vNJ59W35Zv8hVD3n8yKMnd05DF3ctFrwy7B+VHm2+s
rY+E8gdQ+1p508Ybte/vIHlD/UdxS6vkTWsPaOVNO57a8UF5vGh8tPOlzd9G
36t9vwbpGavqV6B9RPt+h1X1mlA8xKr6JEjOtf4+ml9t/j9aj9r8c22+lva8
SWtvQ3lT6kPUfxSvsOq8ySp9iPS2djy144PiPGh8tPOlvf+I9AmK22j9F+SP
o36ieBTKn0Tzi+IeKB91qf1irjmmf9SrwNvH7Uw/5tGag7dHf4vrVGjrpaO8
ZSQP2vtESM9bVS8d3ePQ2sNW1UvXvn+ExgfFybX7I5IrbX6gVl+h/dcqfaXN
F0L6CsX3UH6vtl6HVfcZte9fOPu9Y2fff9Te30T6AcW9tffRtOePSP+g70X2
GLIn0Xr87rvag68ddsj5ou4vq72yy+zmHwWGPglVv7+mPc9F7aP+W2WPoTxP
rTyj9nPt/iFhcLRDco0c2XP8lmQpXuluzhrjwtXjqR0frT2m9V/aD7dtuupn
yInVb7puNuXwlyODR/zd4hG0x1C8DvVfex8T2bdW1a9A8eqtHrYVX18zJN/j
fIN8TDnZmLVfwrYp+vuYaL0jOUd2IOqP9j4m0ocoX1pbT09rb2jjOaj/aB1Z
9T4vyrdB36W1Z6x6r1x7/qV9D1cbX0LvcWjjG0gO0TrSnn+hOIlV9au1519W
5edr16N2vrT7o/Zd48y+P2rvbz7uZIvY4mtIn2/2l/twg9mfe6mRV3Y/kJOe
nv2GvU6WsXPrfX2/fqysDHp11q3IDae/F4PkGd3HR/vjq79eHS02xpAvRgSV
GTfdIZ63Pmtd6cJteA6L9AnaH1F/Wngc+WCQkSxli7QMKp4/Vnzq+nTL+RTX
y9LWK0ByiPqD9CeyE7T+EZovbb0CdB9TG7dH+tbZ9Qqsys+sUWRlri2SIkXD
N4V/4RYnV35PXtrp+Q1oj2ntB2R3aePzaH9H+w6ST6T3tPpZ2w6SZ219KhQH
RvoZ6XNkF2nvO6Bx0OZzov1C+/6F1n5A6xfJrVXtW3U+qM2ftyq/CO1frd37
vL6cYn5X9/P1e097JNG7J3h/vk5f7wv5Tdr206seIJJzlM+G+o/e77PqvFIb
r9bGk7XxbavyhZB+0+6P6P1Q7fdatV9o9T+qMx/UeNrNxtft8jBqlbtx/KFs
XesVvaa8v9P9a2fHH7TxH+15kPY9Ea3/7uz4T3rFZ5A+1/rjqP/Iz7KqXi6K
62a0/deqeBTK60bynF77r7P3R22+9L9tf9Sej2vHM6Odj6M8GavOx63K38ss
5+NW5WdmtPNxpD/ROKTX+bg2Xv1vOx9HcUK47zu53ib6u1bZb9r6BlbVe0H9
RPUnkb+D7tej+9ra/HatvKE4vDbfbKpLlskrvA3xcZ01aJapB8YHb5v4dkSi
Ze279fj5+bPzDnlVO2L7s2qm3qzf9pR9YJjav0Dyg+wKFM/R5v+jfEjUPuo/
khO077+sXzbw4YoUCepe4t2YxfFy0v/LxwE/4d93emPrWyvCkIUbT8wsb87n
yDcPQp7Mxe/Vou9F+x2aL+14ovvpVuUboP0RyTPqP8pXROOvjW+g+INV7ykj
+dS2j+bFqvgMGgdtPcPoB53GH3RPFqNU68EPN0bJpYS4LhOrBcK/m3KyTI+n
l5LFr8TSGgO+iJG/fj127cIAXC8XrS+Ur4j8EfT7Hi9LhQffNuTg2rgsty4Y
snzswu0ju8XDcyikb7XvYXlc/ii5s2mfF/nbbe1fJw2pfnjDpwEnE2A+NrI3
tPFJrXyi70V1orT1eK06/0X5G8g+R/1x9vkvWhdIbtF5IlrvyG/VvjeK7rOj
8UT9Qee2SD8jex7V39DG4TPafWRkb2vzb5G+ymj1SNH3auuRFo6Ptx3xdEjd
htsuzPO0y4Fe00su/CRULozI8W6VR7JsOJo2u6FPlHQdWTZHubb4PrW2Poa2
fRTf0OoHZF+hdrTxotFjPDxcLppyFpb6JL+5HzWa59Vi1N0E9X1AWG9wRNUZ
NScb8njCgnHfrHFIYFgX7zovb8P+a+2l/YMudXmy09z35ryNydM8WLK5p8X0
TPGFXHtfQBt/Rvfrtf4dWo/3+x5tfLBbirT5/Ey5YK846T265v7UUulXvxTp
zzJ/BR4ZVtEuDw5PXvx85y2pnyfS1swX+xda/akdT2fXL9XOlzbei+ylK286
3Q3KYbazL3uuZ8VT5POCY3oOX4Dri6JxRnFUbX4yWi9o3BDX1tuxqn4U0kta
fxbpcyTPKA9QK89Wxf9/3d/+xw/XJUmRLuVrNlwZJG6lihfvfMhX/Z4akgd0
rqQ930TrF42ntn1t/UNt/VVtHVfEUT1/5J9q15fWHkD1apA9qX2vRBuvRnXn
tO9ZoPwTdP9aex/hx8+8Jq16kyTtOidf3tg6QkYEr/bdXdtPfd6K2p/11WdB
TWsYUs2+6dS45SnS812OHTs33FTXq9SuR9S+Vn+iejgormVVvBTpK238HOlD
dH6K+o/yJZC+Qvlv6Pfo/S9ULyK93qPU3n9EfgGKO11Z+Mnwzp3N9Vi+z6Ar
T30k/5d///XHJlwvFPUHvYeC7Apt/BnFZ6yqF6p9z0ub/6PNN3N2PF/bvvZ9
Im28Hd230tafQd9llf2M7C5tvTtknyB/Stt/Z8crnG1faeuFatev9j1Nq97D
QutdKz9a/1r7fpZV+VRIrpBfrL1foD3PQvErbbzaqnqkqP/a/Emr7keje7La
+01WvX+BxgGdt2r9X629bVX+sLb+KpJnbb1uq+qdov4gO9Cq+nvIX3b292rz
hayqF1q3TfSi8kEOqdu+bdeLvZJlmOvsHdmCwizLv0XrFNon4L1Iq9Y70ifO
rheK+oP0A7IHtPoHrRer8hm07wtr7wsg+x/1B+X/aOvza++bO/t7r/Teu6r8
oxRZErGyyha/BFnW9pNpf/2N8+s27Z+zYfyvhiQZE77NZ64XW98zTeL62aEd
iPx9FE9D+9eXI6fuunUuSbYtLtNv/L4QKdmjv1dUB/xuJrIPtfcpkJ5E8478
O6RnrKpXic7BUXxVW68S2WkoPwq9r6etb4/efdbq57io8yurzLWL9Pb+ZuSn
96XM2PjGvevh96NR+ylrfKcte+KQVgvuZ211I1l+Ll3iWevH4XDekZ38cwdb
dDFfs908vxa6u870B5v8fW9SvQfquJx2PLX3YZE+0b5nra2DapW9rbWHtfmZ
Gc3e1uar9Mpde13jRcmybnqjGGkRLVnfXqhSbDP237X2vLa+dGa35539vdr5
Rf2xqv6/Vv6198usek/ZqvXr7PWF9DmK72nl+efO9vj3d+3iW/GLZ7tqPpJL
W3J1iu3rr/bfkX3u7Pr8WvvcqvWujZ9b9b3a+vao3hTqJzof1Obxas8HBy63
dcxq6r0Lwz1++3m7If7r5dvozY+hv4DO9VA+GJJP1A7qD1q/2vNBlJ+A/BTt
+T6y862K/6P7kmif1Z6/o/iMtv/pVX8DnfNaFe9F/rtV44/8NZS/pM0/zCz7
lzYem9n3L2d/L5Jbbb4istO09QS09VTReDa6taP5N1Ud4lr17e4cDxOl+qcb
vn06Er/PblW+1ryTFSrs6miOZ7b9U3KPj5Oyj4Nf++cOtuw+L4pHWXX/tN62
/W1cDyfL+LiCifufRkvIqvYDx1QKsiyfSntfWFtPHo2bNt7ibHtpT8KeUW+K
GtLFZ8LxC+1SZFeu/a1nP4uA+QYo/qm1l1A82ap6uUiuUH6X9j4RssfQfm3V
e0konqB9d1V7n8Kqermo/9r964diO0ZM9DGkYpU9TW56G/Lxg3UVXTwToLxp
88e09ra2PiGK36I4tvYdium33N8MN7/zePbKZzaa+mfu79vnbV6WCOOxSB60
cWbtfT2YJ7+yUZlOhZLl0onj3t5lH0vlPzsvC8sXoM73RnUX0d/V3rfV3i9A
/dfWr9P6I9p4kVX1+rT5Nsg/Qv7d1r7xpTutNyTS9+PzLubf7eN6rsOiWXbY
H+S/IPlB+Qlof9z2kdvmamtNvbPpbKl2OwwZkeVCz1rbcb6BVed9Wn2L9Axa
11bpW+S/o/xt6D92z/0m94okGfX82N12XoGSOv43V/9VvtS36axv0XrUfld6
xTesii9p43ta+UftI3tSG59xdnwvveqnVTpdsHuDCIcEdXu3e9co0x+osaV0
oez4PM6q8xdn76doPNF+atV5OrKfrcr3Rnp46yvXbUmedok/feBeYMh9af5T
9+27PK6r68Nr63dpz7tR/FBb71pbH1UbP7Sq3iyKHzr7e1E8RysP6Pwa3d/M
aOfXaL1r+4/aR3KiPR/X6s+kDsPnXh2TIouuJOarUCRecpVrenWADdf5RPYG
it9q7T3t/VMUj0Xta+ON2t+jOCeyH5AcFmxcdYJHVnNejrZ+sa1/rGRP2V95
bb0bsO7T5ZGTPs611C6/LKrnVXb2fdn/oqyR1uW6eL+f/9FXTewSdmpDlgHF
70jHtw0/9KtwTY61vbdzjqch3XYPC/rrmUOOXPFbOTjsDtwHUd0k7fdq62Mg
jursIfmcdP3HW8trpkjcuJmLT/0dK5HD5pz/89gNqDe099bRPKJ4bNHK+XzG
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
7j7Qa3rJhZ+EQq7N39buIygOj+wQ5D+i39N//O/4j8h/QeOM8p1Q+6jePtKH
yC9AeeNIflCcmfKWvvLWJfJAbPyGFImbV3VbwyPx8lefHZ5PlmB523HyUPks
nub+Mn7wxCHbDZkcfnHojatY3qa6ZJm8wtzPfFxnDZp11JDxwdsmvh2B5Q3F
u5B+Q/sv0m/o95S3/468IbvOKnlD9R6RvKH4M9JvSH6QfqO8pa+8bVq15Nit
+SlysnKu3vuGxMv0Zqm1d/+gj8ei9pFfo5U3pN9QPF+bP4nyWNB4on0hqPG0
m42v2+Vh1Cp34/hD2brWK3pNeX8YF4V1NsA5IzrvQ+dZ6PfIb0L1XbXto/uA
6BwcxceQ/47OK9H5o/a+ifY+I/KbkJw7+z6d1t90tv+uHX9UV3De8jl5OxZ2
yAe+9wb8tCJRjhaK+XvPVzh/Bu07zq4/r62fo62Hg/x99A6pNh9AWydEG59E
9+m0+SconoP0M6ozgORfe58LyQM6V0L7HZpfFMfLW8qt2INbhjSpXOJi9Flz
f15xye2zPXHSp1vM7bmmnbPyC9dTBUy772DJJReO/hqvrn+Cvhedx2nrJWr1
A7rfh/rvbH2O4uGoP9r6LRmtvgrSn+h7Uf9RPTRU1x3lk6P9AsV/0L0qtF9o
+4Piq8huQfYq0pPafC3t/KL1hfQt0idoP0X1ScpWvXtuQYUUCWozOvZpeKy4
dwjsPdbzhvo+MrKL0Hii+03ofrR9RNUZNScb8njCgnHfrHFIYFgX7zovb8P3
I9D3org6qpeL/CC0vpAfgdrX6uflN7Nlq1rJkEUPYocsm5gipbIkuv465Cbc
v1BdZfR71D76XpRvidpHeZgo3w/Ve0R5udr9FOUHIv9Iaz+g/iB7SXsPQvu9
KJ6A7m8i+UT18VA9QGSHa/uP2tG+B6qtj+1s/wvZ28jPQnKL7CVtfiyyi5Df
hOxk9N4WsvfQebfWntTmY1h1vwPJs7PlTX1/DaxfmM+jvK+krW9jVT4VfL91
/fkNxknTv45/P3Psj6b9dnjAwy1x+H4xah/pT9RPNA4oHo7aR9+F9AY6p0Dr
F+kHlB/bL0vHvv1DDZlVOrRorXOGnLMvDep5Dtd70d7nRXn1aL00CLcdTA0x
v8u3dd0Ghw35rGiW27krx0idHR3W9fjMLnPyxtyJ9botKT0ul/oi6zVYBwy1
j84L0LwgfweND7oPjs7f0XmiZ1/bqaNXDcn1IqxRF7P9N+Ujbw745SGsh4Di
58g+6ZN/89GDO+2youyOga7jHsiAeRfzv9xzHb47gPw79M6dVfVy0fpF+g3V
y0V2CLIPkRzCd11BnQ1U9zWzjCfyQ9F5B8q/+iCnm7Q0/eL6je9v8DD3/Vkb
w260eB2L3wEE34v808wynsjeGHdl4Pqv6xpy+WWPgn12psjK15VLHw2+CeUZ
jSc690HnzqhuBtKryA5Ev0f3VVE9RlT/BP0e3fvbeeajMevNeTKOlatyJ6/p
N1+Iy+GROxKe26Lfo/0Xvb+Axh/pczT+TXvYrrqYvz+860JNF9MfjZ8Re7tQ
uYdw/NHv0fijuAoaf/R77fkXio9ZVT9T+84IsitQnYeMpk8Qn37L/c1w0x49
nr3ymY1mP+f+vn3e5mWJ6njdlV22QjXN7yqz7c+IyqYdl3qv+sDpi6JgfiyK
y2ntTO34aO/pWxXPRHm5jW7taP5NVYe4Vn27O8fDRKn+6YZvn44MgfHYqTMn
5O81K1lSYqZeji8WLeMmLh49chZ+Rzij2QOXgg7c+9Ec5xNeByblve+QKX57
S/XYeEc9nvf7Hm18sFuKtPn8TLlgrzjpPbrm/tRSwTBOmNHGB+3XKO6tHR9U
1wvFz7XrJb3GB91LRedxqC5BRpMHNM7oPgJ6jxvVSdDWB8ho44M4Oh9H900y
izwg+Uf17rTvBDn7/SatPtGeJ76sXzbw4YoUCepe4t2YxfFy0v/LxwE/YfnX
vl+mrYesjYegOB6qe4PsE5Rvg8YZneeivGhU7xrF59H5MvL30figOAyqM4Dy
h5FfhtY7Gh90T1Yr/ygeizhajyg+ifI90HkrOi9DdZ+QXDlbf6LztTol2iw5
Z+r90AaOi3fKOuRA3OkRT6JvwfWOfm+Vfkb+KZovNC9oPJHeQO2jejJovWjf
H0HvNHml2CaVDDfkTtoK99DjhvTpnRS23fRjkL5C7aN3UlC9HaRP0Dky2i+s
qp+P4gxafY7aR3VWUf+1+xFqX7u/o/g22u/QeSWSKzQ+KJ6A7jWg83StfkB5
1Ohc7MmBK1/1umiXJYeLVxb3h1KgsLur40N/dTwKyTPSM8j+d/b8InsA2ava
+L9V84u+F8VpUR6FNs8H5dWg8dHK57aP3DZXW2uI/6azpdrtMOcty4Wetbbb
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
PQ==
   "], {{0, 0}, {128, 256}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{255.5, 
       FormBox["1", TraditionalForm]}, {156.5, 
       FormBox["100", TraditionalForm]}, {56.5, 
       FormBox["200", TraditionalForm]}, {0.5, 
       FormBox["256", TraditionalForm]}}, {{255.5, 
       FormBox["1", TraditionalForm]}, {156.5, 
       FormBox["100", TraditionalForm]}, {56.5, 
       FormBox["200", TraditionalForm]}, {0.5, 
       FormBox["256", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {49.5, 
       FormBox["50", TraditionalForm]}, {99.5, 
       FormBox["100", TraditionalForm]}, {127.5, 
       FormBox["128", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {49.5, 
       FormBox["50", TraditionalForm]}, {99.5, 
       FormBox["100", TraditionalForm]}, {127.5, 
       FormBox["128", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{
  3.742217404166072*^9, 3.7422233822068987`*^9, 3.7422314325992937`*^9, {
   3.742232120764188*^9, 3.7422321229524593`*^9}, 3.742232204412994*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"f8f19250-f213-41fb-b3b1-ee6a2edd2310"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Write to SCR1: memory and registers", "Subsubsection",
 CellChangeTimes->{{3.737196639902239*^9, 3.7371966546347933`*^9}, {
  3.739466774605245*^9, 3.739466791189951*^9}, {3.7422176905579863`*^9, 
  3.742217703624229*^9}},ExpressionUUID->"b9a43d9a-8042-43fa-ba5a-\
d1b0e0dccb96"],

Cell["We can control SR1 by writing some information. ", "Text",
 CellChangeTimes->{{3.742217705455688*^9, 
  3.742217732240947*^9}},ExpressionUUID->"879a1cdd-56d2-496a-9053-\
2a03746ed9db"],

Cell[TextData[StyleBox["Memory",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.7422180917688723`*^9, 
  3.7422180958458633`*^9}},ExpressionUUID->"7ba4088e-5b7c-4f82-a336-\
91bb5a3d6efb"],

Cell["Here the way to modify memory cell.", "Text",
 CellChangeTimes->{{3.742230732073844*^9, 3.742230732947853*^9}, {
  3.742231102040514*^9, 3.742231103561603*^9}, {3.7422314601354847`*^9, 
  3.742231474670665*^9}},ExpressionUUID->"e0658df1-7d18-4c10-95b4-\
d4cf9775d05d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceWrite", "[", 
  RowBox[{"device", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<MEM\>\"", ",", "1000", ",", "124"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.742218099558536*^9, 3.7422181032475767`*^9}, {
  3.742218277753216*^9, 3.742218330667983*^9}, {3.742229755838673*^9, 
  3.742229756619718*^9}, {3.742229795192008*^9, 3.742229795822624*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"1612669f-746f-4e64-8818-227115b985bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MEM\"\>", ",", "1000", ",", "124"}], "}"}]], "Output",
 CellChangeTimes->{{3.7422183191818953`*^9, 3.742218339704843*^9}, 
   3.7422183750054073`*^9, 3.7422234265501842`*^9, 3.742224070161654*^9, 
   3.742224131763301*^9, 3.742224288227056*^9, 3.742224482991972*^9, 
   3.7422261324699097`*^9, 3.742229759126555*^9, 3.742229796341556*^9, 
   3.7422311266230583`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"efae26cb-2ff2-4e46-9ce3-b396ae9ed72a"]
}, Open  ]],

Cell["Check value into the memory.", "Text",
 CellChangeTimes->{{3.742231478128901*^9, 
  3.742231496665378*^9}},ExpressionUUID->"4dc7fbe6-f469-4813-b33e-\
7c95e6ddecc7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DeviceRead", "[", 
   RowBox[{"device", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<MEM\>\"", ",", "1000", ",", "1"}], "}"}]}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.742218367876133*^9, 3.742218371884452*^9}, {
  3.7422234113955317`*^9, 3.742223415742975*^9}, {3.742229771222397*^9, 
  3.742229790599242*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"8cad3872-aabf-4287-8546-b46d09422716"],

Cell[BoxData["124"], "Output",
 CellChangeTimes->{
  3.7422183726657333`*^9, 3.742218470092671*^9, {3.742223407163014*^9, 
   3.742223416337183*^9}, {3.7422297528159323`*^9, 3.742229797620386*^9}, 
   3.742231131608367*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"a1bd07cc-869f-4391-88e4-6c27d05a9a58"]
}, Open  ]],

Cell[TextData[StyleBox["General Purpose Registers",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.7422180917688723`*^9, 3.7422180958458633`*^9}, {
  3.742218386424958*^9, 3.7422183958333673`*^9}, {3.742231504083839*^9, 
  3.742231520344075*^9}},ExpressionUUID->"0ae03630-f211-4d10-93d5-\
0570864dabbd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceWrite", "[", 
  RowBox[{"device", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<REGS\>\"", ",", "5", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.742218403052855*^9, 3.742218432961914*^9}, {
   3.7422232853875523`*^9, 3.7422232896685*^9}, {3.742223892315632*^9, 
   3.7422238940307417`*^9}, {3.7422239249433928`*^9, 
   3.7422239378403587`*^9}, {3.7422245125139933`*^9, 
   3.7422245258062696`*^9}, {3.742226725133099*^9, 3.742226728257224*^9}, 
   3.742226827496011*^9, {3.742226973113948*^9, 3.7422269778722553`*^9}, {
   3.742227062522397*^9, 3.7422271027225847`*^9}, 3.742229647327958*^9, 
   3.742229744204761*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"c836c61e-3894-4d4c-aea9-953372c680e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"REGS\"\>", ",", "5", ",", "30"}], "}"}]], "Output",
 CellChangeTimes->{
  3.742223724334372*^9, {3.742223883474951*^9, 3.742223894457288*^9}, {
   3.7422239311481752`*^9, 3.742223938153152*^9}, {3.742224061377499*^9, 
   3.7422240654382*^9}, 3.742224128361635*^9, 3.742224192017606*^9, {
   3.7422242745242243`*^9, 3.742224277677341*^9}, 3.7422244881940203`*^9, 
   3.742224537138517*^9, 3.742224581205564*^9, {3.7422246654887943`*^9, 
   3.74222468680872*^9}, 3.742224754579487*^9, 3.7422260328121567`*^9, 
   3.742226128301847*^9, 3.7422267591615143`*^9, {3.742226810317802*^9, 
   3.742226828516684*^9}, {3.7422269678103952`*^9, 3.742226978390315*^9}, {
   3.742227069886168*^9, 3.742227103208557*^9}, 3.742227328553253*^9, 
   3.742229156063272*^9, 3.742229474800084*^9, {3.742229642398726*^9, 
   3.742229647853621*^9}, {3.742229735635015*^9, 3.7422297447609577`*^9}, 
   3.742231138670999*^9, 3.742231447935623*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"5aec81ef-b73b-4ec9-8327-d7ee6ce94895"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DeviceRead", "[", 
   RowBox[{"device", ",", "\"\<REGS\>\""}], "]"}], "[", 
  RowBox[{"[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.742218614645713*^9, 3.7422186241706533`*^9}, {
  3.742226818367757*^9, 3.74222682205037*^9}, {3.742229783636896*^9, 
  3.742229784391577*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"a6c3e42e-ffc6-4d1d-839d-3e239b2a897f"],

Cell[BoxData["30"], "Output",
 CellChangeTimes->{{3.742218621477106*^9, 3.74221863035998*^9}, 
   3.742223073840693*^9, {3.74222681355079*^9, 3.742226830086925*^9}, {
   3.7422269694937763`*^9, 3.7422269799212523`*^9}, {3.742227059645877*^9, 
   3.742227104573936*^9}, 3.742227342845714*^9, 3.742229164415168*^9, {
   3.742229496892359*^9, 3.742229502801098*^9}, {3.742229635809435*^9, 
   3.7422296491192207`*^9}, {3.742229735873055*^9, 3.7422297460298843`*^9}, 
   3.7422297850989122`*^9, {3.742231136118289*^9, 3.742231140901882*^9}, {
   3.7422314435546007`*^9, 3.742231449136958*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"467ee524-ecc6-4db4-b8fa-dd1df706e803"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SCR1 execution", "Subsubsection",
 CellChangeTimes->{{3.737196639902239*^9, 3.7371966546347933`*^9}, {
  3.739466774605245*^9, 3.739466791189951*^9}, {3.7422176905579863`*^9, 
  3.742217703624229*^9}, {3.742217739072506*^9, 
  3.742217741774783*^9}},ExpressionUUID->"79608c82-2b0a-430b-9a03-\
653af29e0c89"],

Cell["\<\
To start processor working there are several function. The first is \
\[OpenCurlyDoubleQuote]STEP\[CloseCurlyDoubleQuote]. This function produces \
one clock of simulator and returns number of clocks aka steps so far. After \
finish is reached function doesn\[CloseCurlyQuote]t effect on simulator. The \
SCR1 has to be reset.\
\>", "Text",
 CellChangeTimes->{{3.742229967391027*^9, 
  3.7422301447784357`*^9}},ExpressionUUID->"6d710e3b-a55c-438a-a19b-\
f403be01dbab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceExecute", "[", 
  RowBox[{"device", ",", "\"\<STEP\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7418600872994537`*^9, 3.741860100668535*^9}, 
   3.741866068778449*^9, 3.7422177610978203`*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"df79693e-f4e2-4ef9-b20f-5fed5be14970"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.741860091924621*^9, 3.741860110066436*^9}, 
   3.741861096667616*^9, {3.741866061803063*^9, 3.741866071445445*^9}, {
   3.741867842454075*^9, 3.741867851440922*^9}, 3.741886188325686*^9, {
   3.741886589379334*^9, 3.74188662854652*^9}, {3.7418872988718576`*^9, 
   3.7418873208175793`*^9}, {3.742217762131318*^9, 3.7422177681304626`*^9}, 
   3.742217842606246*^9, 3.742223064022023*^9, {3.742230073683361*^9, 
   3.742230077417985*^9}, 3.742230473227355*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"70102969-a990-41f5-9bf0-196ada7243ad"]
}, Open  ]],

Cell["\<\
During program execution processor fetches instruction by instruction. Every \
instruction has an address. Internal IPC registers contains an address of \
current  instruction. If we want to simulate in per instruction way it should \
be used the following function. The function returns a value of new IPC.\
\>", "Text",
 CellChangeTimes->{{3.74223017063702*^9, 
  3.742230359260934*^9}},ExpressionUUID->"8c903cc6-ab87-433d-af83-\
856bd96f5517"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceExecute", "[", 
  RowBox[{"device", ",", "\"\<NEXT_IPC\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7418600872994537`*^9, 3.741860100668535*^9}, 
   3.741866068778449*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"dfcb5635-8c2f-457e-8e93-90ebe6505933"],

Cell[BoxData["520"], "Output",
 CellChangeTimes->{
  3.742217770134548*^9, 3.742217822064554*^9, 3.742218601468066*^9, {
   3.742230415448167*^9, 3.742230437317808*^9}, {3.742230477953672*^9, 
   3.7422305616320066`*^9}, 3.742231357088132*^9, {3.742232211080638*^9, 
   3.7422322133381653`*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"5b2cf402-a78a-45dc-bf05-5b6f267b8a16"]
}, Open  ]],

Cell["Additionally, SCR1 may be run till a particular IPC value.", "Text",
 CellChangeTimes->{{3.7422303670740423`*^9, 
  3.7422304018379917`*^9}},ExpressionUUID->"aa8ef18e-c64c-4cb9-a7fa-\
40227da4f7f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceExecute", "[", 
  RowBox[{"device", ",", "\"\<RUN_UNTIL_IPC\>\"", ",", "1544"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7422177814364862`*^9, 3.7422178291087418`*^9}, 
   3.7422180192628508`*^9, {3.742230410193162*^9, 3.742230411902726*^9}, {
   3.742230481828203*^9, 3.742230507502862*^9}, 3.742230551144343*^9, {
   3.7422313519773893`*^9, 3.742231353120482*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"3545c76a-7af5-4b22-9629-18646be6d48b"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.742217802975605*^9, 3.742217829558631*^9}, {
   3.742217998600165*^9, 3.7422180198805323`*^9}, {3.742230405002809*^9, 
   3.742230412297358*^9}, 3.742230482677747*^9, {3.742230528303584*^9, 
   3.742230552596257*^9}, 3.742231354204544*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"32fa193a-ebcc-42d6-8eee-3231a647c321"]
}, Open  ]],

Cell["\<\
If we would like to launch SCR till the end of program execute a \
\[OpenCurlyDoubleQuote]RUN\[CloseCurlyDoubleQuote] function.\
\>", "Text",
 CellChangeTimes->{{3.742230574809572*^9, 
  3.742230615773982*^9}},ExpressionUUID->"b7659c26-cb76-4d13-882a-\
4bb13504d437"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeviceExecute", "[", 
   RowBox[{"device", ",", "\"\<RUN\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.742218595733943*^9, 3.74221859612829*^9}, 
   3.742229889867584*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"71c5da87-fc74-4864-af0b-5ef26b7c42cc"],

Cell["\<\
If program prints something to display it can be viewed from src1_output.txt \
file. Standard output stream is redirected to this file.\
\>", "Text",
 CellChangeTimes->{{3.7422306211441803`*^9, 
  3.742230717497451*^9}},ExpressionUUID->"e9cb6b4f-fc60-4f9a-8a23-\
dc948ae6681f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "@", 
  RowBox[{"Import", "[", "\"\<src1_output.txt\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.742229811930879*^9, 3.7422298722229967`*^9}, {
  3.742229954550315*^9, 3.742229954957314*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"246ab0f7-9458-4ae5-84cd-7a2a97164d6b"],

Cell[BoxData[
 FrameBox["\<\"HELL0 SCR1\\n\\nDhrystone Benchmark, Version 2.1 (Language: C)\
\\n\\nProgram compiled without 'register' attribute\\n\\nExecution starts, \
500 runs through Dhrystone\\nExecution ends\\n\\nFinal values of the \
variables used in the benchmark:\\n\\nInt_Glob:            5\\n        should \
be:   5\\nBool_Glob:           1\\n        should be:   1\\nCh_1_Glob:        \
   A\\n        should be:   A\\nCh_2_Glob:           B\\n        should be:   \
B\\nArr_1_Glob[8]:       7\\n        should be:   7\\nArr_2_Glob[8][7]:    \
510\\n        should be:   Number_Of_Runs + 10\\nPtr_Glob->\\n  Ptr_Comp:     \
     11636\\n        should be:   (implementation-dependent)\\n  Discr:       \
      0\\n        should be:   0\\n  Enum_Comp:         2\\n        should \
be:   2\\n  Int_Comp:          17\\n        should be:   17\\n  Str_Comp:     \
     DHRYSTONE PROGRAM, SOME STRING\\n        should be:   DHRYSTONE PROGRAM, \
SOME STRING\\nNext_Ptr_Glob->\\n  Ptr_Comp:          11636\\n        should \
be:   (implementation-dependent), same as above\\n  Discr:             0\\n   \
     should be:   0\\n  Enum_Comp:         1\\n        should be:   1\\n  \
Int_Comp:          18\\n        should be:   18\\n  Str_Comp:          \
DHRYSTONE PROGRAM, SOME STRING\\n        should be:   DHRYSTONE PROGRAM, SOME \
STRING\\nInt_1_Loc:           5\\n        should be:   5\\nInt_2_Loc:         \
  13\\n        should be:   13\\nInt_3_Loc:           7\\n        should be:  \
 7\\nEnum_Loc:            1\\n        should be:   1\\nStr_1_Loc:           \
DHRYSTONE PROGRAM, 1'ST STRING\\n        should be:   DHRYSTONE PROGRAM, 1'ST \
STRING\\nStr_2_Loc:           DHRYSTONE PROGRAM, 2'ND STRING\\n        should \
be:   DHRYSTONE PROGRAM, 2'ND STRING\\n\\nNumber_Of_Runs= 500, HZ= \
1000000\\nTime: begin= 18931, end= 234497, diff= 215566\\nMicroseconds for \
one run through Dhrystone: 431\\nDhrystones per Second:                      \
2319\\n- tb/scr1_top_tb_axi.sv:314: Verilog $finish\"\>",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.742229875623604*^9, 3.7422298923025227`*^9}, 
   3.7422299558846617`*^9, 3.742230563792664*^9, {3.742231151811305*^9, 
   3.742231157948859*^9}, 3.7422313604861298`*^9, 3.742231420319325*^9, 
   3.742232218080928*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"74798b70-411b-4e78-9ccb-29a72b9d274d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Additional Examples", "Section",
 CellChangeTimes->{{3.74221744138943*^9, 
  3.742217448858101*^9}},ExpressionUUID->"65d0321a-55ed-4e55-8db3-\
91688326b2c3"],

Cell[CellGroupData[{

Cell["Develop new devices", "Subsubsection",
 CellChangeTimes->{{3.737198146168716*^9, 3.737198156433972*^9}, {
  3.739466846426894*^9, 
  3.739466850576325*^9}},ExpressionUUID->"9ea7af7a-0fdb-41e8-b1af-\
e6a338f0450b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeviceRead", "[", 
   RowBox[{"device", ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "\"\<reset\>\"", ",", 
      "\"\</Users/ckorikov/_syntacore/projects/wolfram_russianhack18_scr1/cpp_\
bridge/dhrystone.bin\>\""}], "\[IndentingNewLine]", "}"}]}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"f4292eff-4dd5-46a8-86ba-3df96d5e6e69"],

Cell[BoxData[
 RowBox[{
  RowBox[{"branchstatelist", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"DeviceRead", "[", 
       RowBox[{"device", ",", "\"\<next_ipc\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"DeviceRead", "[", 
       RowBox[{"device", ",", "\"\<get_branch_state\>\""}], "]"}]}], ",", 
     "\[IndentingNewLine]", "20000"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.737198199400463*^9, 3.7371982367662573`*^9}, 
   3.7371982695448112`*^9},ExpressionUUID->"1ea3ab32-4767-47e6-81f8-\
330d85d4868e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"jumpsDataset", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"branchstatelist", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "+", 
         RowBox[{"#", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ">", "0"}], ")"}], "&"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.737198275208831*^9},ExpressionUUID->"b41a0f04-8797-4188-8d37-\
ac574169f7cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jumpsDataset", "//", "TableView"}]], "Input",ExpressionUUID->"d947bc85-11fc-43e1-8255-b0a3c7370168"],

Cell[BoxData[
 TableViewBox[CompressedData["
1:eJzt2rFLVVEcB/BbTysV1CE0RKTiIRHODeLQECEhEg4N0RQF0VDQ0CDh0CQN
IQ2N0iwhDU7NEeEQDQ0NESHR1F/QEJ3T7aLnh8KDwh72ufB4/D6c873Xy9eH
7+Kp63cX7hyuqurmcFX1pvexPKTjUP32a2aMMcYYY4wxxhhjjDHGGGOMMcYY
Y4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYY
Y4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYY
Y4wxxhhjjDHGGGOMMcYYO8jW/m2NZ1vsK9flebVVrltP87NgW2k+2Sr35rkd
1k236tdOm2ptn6PZm+etYFutzq9lJFi+lolg7T3OK0+ePHny5MmTJ0+ePHny
5DV5nX7XnQrrphhj/9z24xnUfjwPmxssLc+dXl+3f8bKkydPnjx58uTJkydP
njzPtBj7n+2gPL/q9Fq6/bNTnjx58g5a3nqwnPch2OyRqlo5Up43z5O9peX5
3Fi5txqvqvPBvqX5YrBPab48Vubl+VZY9yDNa2Fdnt8Hy/NMb7l3vqd+7VyX
548j5bqtE1X1NdjqaLruYCvJ+kdLm0jzldHyHHleDpbnbrpXS+G+5Hkx2KJ7
tee9ethT5uV79SSsy/OrYHnu9Hd1I+zd6LK8t+Ee5Dx//8mTJ0+ePHl/L8+z
XMa6z/7kWem7vnLv8mD67j1U2o00Xwp2O82Pg10drqrnwe4nexFsPNnrYPeS
be6y7nOwpWRfdln3PdijZD92WXd8uLSnw7UXlvadCTaT5ulgc2m+NrQ95yPP
C0fDfUlz+1i5Ls+b4f8s87zWX+6dTXY6/ByTaX7ZX+7N85uw9+xA53vz2p2W
5wsD5d75NE+FvXnWF33RF33RF33Rl3KdvuiLvuiLvtSHvuiLvuhLY/qiL/qi
L43pi77oS33oi77oi740pi/6oi/1oS/6oi/6oi/lOn3RF33RF32pD33RF33R
l8b0RV/0RV8a0xd90Zf60Bd90Rd9aUxf9EVf6kNf9EVf9KUb+vITz4Czhg==

  "],
  ScrollPosition->{0., 1320.}]], "Output",
 CellChangeTimes->{{3.737198292238413*^9, 3.737198310210719*^9}, {
  3.739445498629739*^9, 
  3.7394455055256577`*^9}},ExpressionUUID->"46203af3-e70a-49dc-bad8-\
6b41e3264a59"]
}, Open  ]],

Cell["\:0420\:0430\:0437\:0431\:0438\:0432\:0430\:0435\:043c \:043d\:0430 2 \
\:0432\:044b\:0431\:043e\:0440\:043a\:0438 :", "Text",
 CellChangeTimes->{{3.737198325891142*^9, 
  3.7371983337837543`*^9}},ExpressionUUID->"a717d3fa-0d22-4e72-afb3-\
e1df32a1a032"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingSamples", "=", 
   RowBox[{"Round", "[", 
    RowBox[{"0.7", "*", 
     RowBox[{"Length", "[", "jumpsDataset", "]"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{
  3.7371983227066097`*^9},ExpressionUUID->"1a7824d1-ecea-4c7f-b3bb-\
52855f59807e"],

Cell["\:0420\:0435\:0448\:0430\:0435\:043c \:0437\:0430\:0434\:0430\:0447\
\:0443 \:043a\:043b\:0430\:0441\:0441\:0438\:0444\:0438\:043a\:0430\:0446\
\:0438\:0438 \:043d\:0430 2 \:043a\:043b\:0430\:0441\:0441\:0430", "Text",
 CellChangeTimes->{{3.7371983646877003`*^9, 
  3.73719837498895*^9}},ExpressionUUID->"567b7537-c7d1-4fa8-ab59-\
336e89deb2ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"historyLen", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{
    RowBox[{"Reap", "[", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"historyLen", "+", "1"}]}], ",", 
       RowBox[{"i", "\[LessEqual]", "trainingSamples"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Sow", "[", 
        RowBox[{
         RowBox[{"jumpsDataset", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"i", "-", "historyLen"}], ";;", 
             RowBox[{"i", "-", "1"}]}], ",", "3"}], "]"}], "]"}], "\[Rule]", 
         RowBox[{"jumpsDataset", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "]"}]}], "]"}], 
     "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classes", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.737198342779387*^9, 
  3.737198358988542*^9}},ExpressionUUID->"81e015ce-df54-48f9-8508-\
9e6de99e0c05"],

Cell["\:0421\:043e\:0437\:0434\:0430\:0435\:043c \:043f\:0440\:043e\:0441\
\:0442\:0443\:044e \:0441\:0435\:0442\:044c", "Text",
 CellChangeTimes->{{3.737198382253351*^9, 
  3.737198389099595*^9}},ExpressionUUID->"ddb05eb5-d1cf-4177-afc4-\
0369de6c013d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bpNet", "=", 
  RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"LinearLayer", "[", "10", "]"}], ",", "Ramp", ",", 
     RowBox[{"LinearLayer", "[", "]"}], ",", 
     RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7371983927137423`*^9, 
  3.737198392969788*^9}},ExpressionUUID->"9f9a086b-b9a5-4c52-ad13-\
feb924f68920"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{10, NeuralNetworks`SizeT}, 
                 NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {10}, "$OutputSize" -> 10, "$InputSize" -> 
               NeuralNetworks`SizeT, "$InputDimensions" -> 
               NeuralNetworks`ListT[
                NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[
                 NeuralNetworks`ListT[
                 NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "2" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {10}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "3" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{NeuralNetworks`SizeT, 10}, 
                 NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[
                  NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                  NeuralNetworks`RealT]]], "Parameters" -> 
             Association[
              "OutputDimensions" -> 
               NeuralNetworks`ListT[
                NeuralNetworks`NaturalT, NeuralNetworks`SizeT], "$OutputSize" -> 
               NeuralNetworks`SizeT, "$InputSize" -> 10, 
               "$InputDimensions" -> {10}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
             "Outputs" -> Association["Output" -> NeuralNetworks`TensorT[
                 NeuralNetworks`ListT[
                 NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                 NeuralNetworks`RealT]]], "4" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association["Input" -> NeuralNetworks`TensorT[
                 NeuralNetworks`ListT[
                 NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association["Output" -> NeuralNetworks`TensorT[
                 NeuralNetworks`ListT[
                 NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                 NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"]}, 
         "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[
             NeuralNetworks`ListT[
             NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
             NeuralNetworks`RealT]], "Outputs" -> 
         Association["Output" -> NeuralNetworks`TensorT[
             NeuralNetworks`ListT[
             NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
             NeuralNetworks`RealT]]], NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"tensor\"", 
                   Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"tensor\"", Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"tensor\"", Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"tensor\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 ItemBox[
                  StyleBox["\"(uninitialized)\"", 
                   RGBColor[0.66, 0, 0], Small, StripOnInput -> False], 
                  Alignment -> Center, StripOnInput -> False], 
                 "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{27.7734375, {6., 7.353515625}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.73719839656122*^9},ExpressionUUID->"46c70ec0-ca79-4bc1-a8f5-2e303ff2f1fb"]
}, Open  ]],

Cell["\:041e\:0431\:0443\:0447\:0430\:0435\:043c \:0441\:0435\:0442\:044c", \
"Text",
 CellChangeTimes->{{3.737198403992569*^9, 
  3.737198406570786*^9}},ExpressionUUID->"741a4ebb-e32d-4688-aa80-\
b4435135b133"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNet", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"bpNet", ",", "trainingData", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<SGD\>\""}]}], "]"}]}]], "Input",Expressi\
onUUID->"62f5d9a1-ad6c-4230-9888-121c07adb921"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`Private`DummyRawArray[{10, 20}], 
               "Biases" -> NeuralNetworks`Private`DummyRawArray[{10}]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {10}, "$OutputSize" -> 10, "$InputSize" -> 
               20, "$InputDimensions" -> {20}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "2" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {10}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "3" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`Private`DummyRawArray[{2, 10}], 
               "Biases" -> NeuralNetworks`Private`DummyRawArray[{2}]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {2}, "$OutputSize" -> 2, "$InputSize" -> 
               10, "$InputDimensions" -> {10}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]],
            "4" -> Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"]}, 
         "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association["Labels" -> {0, 1}, "Dimensions" -> 2], 
             NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{27.7734375, {6., 7.353515625}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.737198430226074*^9},ExpressionUUID->"a5ed43bc-6bbd-4627-b31f-\
31749db0d239"]
}, Open  ]],

Cell["\:041f\:043e\:0434\:0433\:043e\:0442\:0430\:0432\:043b\:0438\:0432\:0430\
\:0435\:043c \:0442\:0435\:0441\:0442\:043e\:0432\:0443\:044e \:0432\:044b\
\:0431\:043e\:0440\:043a\:0443", "Text",
 CellChangeTimes->{{3.737198421139264*^9, 
  3.737198428982086*^9}},ExpressionUUID->"970c5fa8-7a30-4b16-ae24-\
7fbc7d376918"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{
    RowBox[{"Reap", "[", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"trainingSamples", "+", "1"}]}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "jumpsDataset", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Sow", "[", 
        RowBox[{
         RowBox[{"jumpsDataset", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"i", "-", "historyLen"}], ";;", 
             RowBox[{"i", "-", "1"}]}], ",", "3"}], "]"}], "]"}], "\[Rule]", 
         RowBox[{"jumpsDataset", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "]"}]}], "]"}], 
     "\[IndentingNewLine]", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",ExpressionUUID->\
"6588ea5d-b73a-4fb7-8893-4c87423462d3"],

Cell["\:0421\:043c\:043e\:0442\:0440\:0438\:043c \:043c\:0435\:0442\:0440\
\:0438\:043a\:0438", "Text",
 CellChangeTimes->{{3.7371984392953253`*^9, 
  3.7371984493138733`*^9}},ExpressionUUID->"679d8bf0-0627-44ac-a124-\
2e45308e75c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"trainedNet", ",", "testData"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.737198477289928*^9},ExpressionUUID->"d57e0e80-bb57-42f9-882f-\
e081dae49c33"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierMeasurementsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[
                
                RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                 0.4746151541446917}, {0.7191592194171378, 0.5062062867304069,
                  0.8158644505878024}, {0.47333333333333333`, 
                 0.7727052229508918, 
                 0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                ImagePadding -> 0.2, 
                PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                PlotRangePadding -> Automatic, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Net\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1259", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[
                
                RasterBox[{{0.8564437870801482, 0.8967071593761374, 
                 0.4746151541446917}, {0.7191592194171378, 0.5062062867304069,
                  0.8158644505878024}, {0.47333333333333333`, 
                 0.7727052229508918, 
                 0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
                ImagePadding -> 0.2, 
                PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
                PlotRangePadding -> Automatic, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Net\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of test examples: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1259", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Number of classes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    RowBox[{
                    "0.6957903097696582773`4.982304769508054", "\[PlusMinus]",
                     "0.0129713563183624769`2."}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel", 
        DisplayFunction -> (
         ButtonBox[#, Active -> False, Alignment -> Left, 
          Appearance -> {
           "Default" -> 
            FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
          FrameMargins -> 7, BaseStyle -> {}, 
          DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
          Baseline]& )], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierMeasurementsObject[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.737198451651223*^9, 
  3.737198477740217*^9}},ExpressionUUID->"7f927ce5-46ef-4e36-a954-\
03379392b427"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<Accuracy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7371984634158487`*^9, 
  3.737198495798202*^9}},ExpressionUUID->"53063fe8-29bd-4bf8-abcc-\
468383a2b693"],

Cell[BoxData["0.6957903097696583`"], "Output",
 CellChangeTimes->{{3.737198471029787*^9, 
  3.7371984962189503`*^9}},ExpressionUUID->"d00244f8-8d9d-493c-ac14-\
1a989c179444"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]], "Input",ExpressionU\
UID->"c29d19fb-b473-4ff5-be58-d52da78a79f7"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0.9282086577190896, 0.8471633626699735, 0.6098435324617993}, {
   0.8686792251552311, 0.5957236698175764, 0.07950988346406945}}, {{1., 0.42, 
   0.}, {0.8903008156466521, 0.6902775946184357, 0.26545616943934813`}}}, {{0,
    0}, {2, 2}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["593", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "593", "\" examples of \"", "0", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.839943342776204`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.6871378910776361`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.7558954748247291`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{593, " examples of ", 0, " correctly classified"}], 
         Row[{"Precision = ", 0.839943342776204}], 
         Row[{"Recall = ", 0.6871378910776361}], 
         Row[{"FScore = ", 0.7558954748247291}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["113", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "113", "\" examples of \"", "1", "\" misclassified as \"", "0"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.16005665722379603`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.28535353535353536`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{113, " examples of ", 1, " misclassified as ", 0}], 
         Row[{"Column fraction = ", 0.16005665722379603`}], 
         Row[{"Row fraction = ", 0.28535353535353536`}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["270", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "270", "\" examples of \"", "0", "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.488245931283906`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.3128621089223638`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{270, " examples of ", 0, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.488245931283906}], 
         Row[{"Row fraction = ", 0.3128621089223638}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["283", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "283", "\" examples of \"", "1", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.5117540687160941`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.7146464646464646`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.5964172813487882`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{283, " examples of ", 1, " correctly classified"}], 
         Row[{"Precision = ", 0.5117540687160941}], 
         Row[{"Recall = ", 0.7146464646464646}], 
         Row[{"FScore = ", 0.5964172813487882}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{"863", "\" example\"", "\"s\"", "\" of class \"", "0"},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.6871378910776361`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{863, " example", "s", " of class ", 0}], 
        Row[{"Recall = ", 0.6871378910776361}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{"396", "\" example\"", "\"s\"", "\" of class \"", "1"},
            "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.7146464646464646`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{396, " example", "s", " of class ", 1}], 
        Row[{"Recall = ", 0.7146464646464646}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "706", "\" example\"", "\"s\"", "\" classified as \"", "0"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.839943342776204`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{706, " example", "s", " classified as ", 0}], 
        Row[{"Precision = ", 0.839943342776204}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "553", "\" example\"", "\"s\"", "\" classified as \"", "1"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.5117540687160941`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{553, " example", "s", " classified as ", 1}], 
        Row[{"Precision = ", 0.5117540687160941}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 0.], TraditionalForm]}}, {{1.5, 
       FormBox["863", TraditionalForm]}, {0.5, 
       FormBox["396", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["706", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["553", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["0", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.73719850023339*^9},ExpressionUUID->"d59a7c7a-acf1-42f4-a3e4-e4c9e94c7551"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Work with assembler", "Subsubsection",
 CellChangeTimes->{{3.737475725618786*^9, 3.737475769500861*^9}, {
  3.739466840645041*^9, 3.739466842678536*^9}, {3.739466919947019*^9, 
  3.73946692219348*^9}},ExpressionUUID->"af8d3c0e-37ed-48f0-9235-\
2fdcb750a477"],

Cell[BoxData[
 RowBox[{
  RowBox[{"asm", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"\"\<./programs/dhrystone21.dump\>\"", ",", "\"\<Lines\>\""}], 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"StringLength", "[", "#", "]"}], ">", "0"}], "&"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.737475796033256*^9, 3.7374758132538767`*^9}, 
   3.7374758568980494`*^9, {3.737478886999251*^9, 3.737478896372961*^9}, 
   3.73747974463164*^9, {3.7374798645175867`*^9, 3.737479871047884*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"b452daeb-bf08-477f-8fd1-5f63c85100cf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DeviceRead", "[", 
   RowBox[{"device", ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "\"\<reset\>\"", ",", 
      "\"\</Users/ckorikov/_syntacore/projects/wolfram_russianhack18_scr1/\
programs/dhrystone21.hex\>\""}], "\[IndentingNewLine]", "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labels", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], "@", 
      RowBox[{"StringCases", "[", 
       RowBox[{"asm", ",", 
        RowBox[{
         RowBox[{"StartOfString", "~~", 
          RowBox[{"Shortest", "[", 
           RowBox[{"address", ":", 
            RowBox[{"HexadecimalCharacter", ".."}]}], "]"}], "~~", 
          "\"\< <\>\"", "~~", 
          RowBox[{"Shortest", "[", "label__", "]"}], "~~", "\"\<>\>\"", "~~", 
          
          RowBox[{"Shortest", "[", "__", "]"}]}], "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"address", ",", "label"}], "}"}]}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"FromDigits", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "16"}], "]"}], "\[NotEqual]", 
       "0"}], "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labelsHex", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FromDigits", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "16"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], ",", "labels"}], 
      "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "<", 
       RowBox[{"#2", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.737475872178911*^9, 3.737475877323884*^9}, {
  3.737475970741289*^9, 3.737475983324868*^9}, {3.7379592970246363`*^9, 
  3.7379592973119297`*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"6649ff40-2815-4246-bed7-abe7acd67425"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ipcList", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DeviceRead", "[", 
      RowBox[{"device", ",", "\"\<next_ipc\>\""}], "]"}], ",", "150000"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.737906830370401*^9, 3.737906833649856*^9}, {
   3.7379071134245462`*^9, 3.7379071151137857`*^9}, 3.737907247126247*^9, {
   3.737908713476569*^9, 3.7379087139367237`*^9}, {3.737959318867873*^9, 
   3.737959321399781*^9}, {3.737959560106915*^9, 3.737959561461396*^9}, {
   3.7379601087694807`*^9, 3.737960109410781*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"7c68b042-a24f-4d2f-859c-b61fc684f3e7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"colorLabels", "=", 
   RowBox[{"BlockMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], ",", 
     RowBox[{"Sort", "[", "labelsHex", "]"}], ",", "2", ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colorLabels", "=", 
   RowBox[{"MapIndexed", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{"#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<CMYKColors\>\"", "]"}], "[", 
         RowBox[{
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", 
          RowBox[{"Length", "@", "colorLabels"}]}], "]"}]}], "]"}], "&"}], 
     ",", "colorLabels"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getColor", "[", "b_", "]"}], ":=", 
   RowBox[{
    RowBox[{"SelectFirst", "[", 
     RowBox[{"colorLabels", ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", "b"}], "  ", "&&", 
        " ", 
        RowBox[{"b", " ", "\[LessEqual]", "  ", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], "&"}]}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getName", "[", "b_", "]"}], ":=", 
   RowBox[{
    RowBox[{"SelectFirst", "[", 
     RowBox[{"colorLabels", ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", "b"}], "  ", "&&", 
        " ", 
        RowBox[{"b", " ", "\[LessEqual]", "  ", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], "&"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataGraph", "=", 
   RowBox[{"Union", "[", "\[IndentingNewLine]", 
    RowBox[{"BlockMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"BlockMap", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ">", "4"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "]"}], "&"}], ",", 
          "ipcList", ",", "2", ",", "1"}], " ", "]"}], ",", 
        RowBox[{
         RowBox[{"#", ">", "0"}], "&"}]}], "]"}], ",", "2", ",", "1"}], "]"}],
     "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.737914971895954*^9, 3.737914982031152*^9}, {
   3.737959242272469*^9, 3.737959254779873*^9}, {3.737959314184291*^9, 
   3.737959314499424*^9}, {3.737960378178604*^9, 3.7379603941350937`*^9}, {
   3.7379605928036423`*^9, 3.737960598566177*^9}, {3.737960639750552*^9, 
   3.737960661422233*^9}, {3.737960706237196*^9, 3.7379607119577913`*^9}, 
   3.73796074493828*^9, {3.7379610068992863`*^9, 3.737961152836007*^9}, {
   3.737961281466692*^9, 3.7379613132565823`*^9}, 3.737961353030225*^9, 
   3.7379614050289803`*^9, {3.737961439348872*^9, 3.737961467525345*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"fb72d99e-2cda-4897-b059-bb2a1254f47c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"HighlightGraph", "[", "\[IndentingNewLine]", 
   RowBox[{"dataGraph", ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"First", "@", "dataGraph"}], ")"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Start\>\""}], "]"}], ",", 
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Last", "@", "dataGraph"}], ")"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Finish\>\""}], "]"}], ",", 
      
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"#", ",", 
           RowBox[{"getColor", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "&"}], ",", 
        "dataGraph"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Tooltip", "[", 
          RowBox[{"#", ",", 
           RowBox[{"getName", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "&"}], ",", 
        "dataGraph"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GraphLayout", "->", "\"\<LayeredDigraphEmbedding\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7379579573246107`*^9, 3.737957961535295*^9}, {
   3.7379580342674217`*^9, 3.7379580624080048`*^9}, {3.7379581077903843`*^9, 
   3.7379581137104673`*^9}, {3.737958145992611*^9, 3.7379582448170843`*^9}, {
   3.737958283653722*^9, 3.7379583898482523`*^9}, {3.737958523988626*^9, 
   3.7379586098377037`*^9}, 3.737958952524761*^9, {3.737959162032428*^9, 
   3.737959164695547*^9}, {3.7379592173959703`*^9, 3.737959229212387*^9}, {
   3.7379615560402946`*^9, 3.737961558154326*^9}, {3.737961708672504*^9, 
   3.7379617099038267`*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"31b95f57-fc83-4352-ac98-f0118d0a6cc7"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{528, 540, 616, 4636, 1288, 5248, 5520, 1400, 1780, 1404, 1852, 
      1436, 1784, 1444, 1472, 1612, 1504, 1688, 1512, 1872, 1704, 3036, 4008, 
      1960, 10452, 1972, 3764, 2000, 9468, 2020, 2044, 2056, 2148, 2136, 2192,
       3832, 3068, 3104, 3888, 3848, 3992, 4696, 4704, 4716, 4724, 4744, 4908,
       4684, 5048, 7976, 5456, 6744, 5508, 9532, 9568, 9800, 10544, 10596, 
      10628}, {{{1, 2}, {2, 2}, {2, 3}, {3, 4}, {5, 6}, {5, 7}, {8, 9}, {10, 
       11}, {12, 13}, {14, 8}, {14, 12}, {14, 14}, {15, 16}, {17, 18}, {19, 
       20}, {16, 21}, {18, 18}, {18, 21}, {21, 10}, {9, 22}, {13, 15}, {13, 
       17}, {13, 19}, {13, 18}, {11, 23}, {20, 18}, {24, 25}, {26, 27}, {28, 
       29}, {30, 25}, {31, 28}, {32, 33}, {34, 14}, {33, 35}, {35, 34}, {35, 
       33}, {22, 36}, {37, 38}, {38, 24}, {27, 28}, {36, 39}, {40, 37}, {39, 
       40}, {41, 12}, {41, 14}, {23, 42}, {23, 43}, {23, 44}, {23, 45}, {23, 
       46}, {23, 47}, {4, 48}, {48, 41}, {42, 41}, {43, 41}, {44, 41}, {45, 
       41}, {46, 41}, {47, 6}, {49, 5}, {6, 50}, {51, 52}, {53, 5}, {7, 49}, {
       52, 53}, {50, 51}, {29, 54}, {54, 55}, {55, 56}, {56, 30}, {25, 57}, {
       57, 58}, {58, 59}, {59, 26}, {59, 31}, {59, 32}}, Null}, {
      GraphHighlight -> {
         DirectedEdge[1784, 1504], 
         DirectedEdge[3832, 3888], 
         DirectedEdge[1436, 1784], 
         DirectedEdge[6744, 5508], 
         DirectedEdge[2136, 1444], 
         DirectedEdge[1444, 1444], 
         DirectedEdge[5048, 1288], 
         DirectedEdge[1780, 3036], 
         DirectedEdge[7976, 5456], 
         DirectedEdge[4008, 4696], 
         DirectedEdge[616, 4636], 
         DirectedEdge[3848, 3068], 
         DirectedEdge[1400, 1780], 
         DirectedEdge[1852, 4008], 
         DirectedEdge[3992, 1436], 
         DirectedEdge[4716, 3992], 
         DirectedEdge[540, 540], 
         DirectedEdge[1444, 1400], 
         DirectedEdge[1784, 1688], 
         DirectedEdge[5456, 6744], 
         DirectedEdge[2020, 10452], 
         DirectedEdge[4744, 3992], 
         DirectedEdge[5508, 1288], 
         DirectedEdge[5248, 7976], 10628, 
         DirectedEdge[2192, 2136], 
         DirectedEdge[1872, 1688], 
         DirectedEdge[4008, 4724], 
         DirectedEdge[2056, 2148], 
         DirectedEdge[1512, 1872], 
         DirectedEdge[1404, 1852], 
         DirectedEdge[3104, 1960], 
         DirectedEdge[2000, 9468], 
         DirectedEdge[1784, 1472], 
         DirectedEdge[3036, 3832], 
         DirectedEdge[5520, 5048], 
         DirectedEdge[1444, 1436], 
         DirectedEdge[1288, 5520], 
         DirectedEdge[3888, 3848], 
         DirectedEdge[2148, 2192], 
         DirectedEdge[528, 540], 
         DirectedEdge[1288, 5248], 
         DirectedEdge[1688, 1688], 
         DirectedEdge[1504, 1688], 
         DirectedEdge[1784, 1512], 
         DirectedEdge[4684, 3992], 
         DirectedEdge[4008, 4716], 
         DirectedEdge[10452, 10544], 
         DirectedEdge[9800, 2020], 
         DirectedEdge[4008, 4704], 
         DirectedEdge[2044, 2000], 
         DirectedEdge[4696, 3992], 
         DirectedEdge[9532, 9568], 
         DirectedEdge[4008, 4744], 
         DirectedEdge[4008, 4908], 
         DirectedEdge[1612, 1704], 
         DirectedEdge[10628, 2056], 
         DirectedEdge[1960, 10452], 528, 
         DirectedEdge[1972, 3764], 
         DirectedEdge[1472, 1612], 
         DirectedEdge[4704, 3992], 
         DirectedEdge[4636, 4684], 
         DirectedEdge[10628, 2044], 
         DirectedEdge[10544, 10596], 
         DirectedEdge[2192, 2148], 
         DirectedEdge[3992, 1444], 
         DirectedEdge[1688, 1704], 
         DirectedEdge[540, 616], 
         DirectedEdge[1704, 1404], 
         DirectedEdge[4908, 5248], 
         DirectedEdge[3764, 2000], 
         DirectedEdge[3068, 3104], 
         DirectedEdge[10628, 1972], 
         DirectedEdge[4724, 3992], 
         DirectedEdge[9568, 9800], 
         DirectedEdge[9468, 9532], 
         DirectedEdge[10596, 10628]}, 
       GraphHighlightStyle -> {DirectedEdge[3068, 3104] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[2056, 2148] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[1400, 1780] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[4008, 4744] -> {EdgeStyle -> {
             RGBColor[
             0.5823714237288136, 0.5437609830508474, 0.7974802881355932]}}, 
         DirectedEdge[4008, 4724] -> {EdgeStyle -> {
             RGBColor[
             0.5823714237288136, 0.5437609830508474, 0.7974802881355932]}}, 
         DirectedEdge[4684, 3992] -> {EdgeStyle -> {
             RGBColor[
             0.633272372881356, 0.4916090847457627, 0.7577947627118644]}}, 
         528 -> {VertexLabels -> "Start"}, 
         DirectedEdge[3104, 1960] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[2148, 2192] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[10628, 2056] -> {EdgeStyle -> {
             RGBColor[
             0.9353048813559321, 0.7282816101694916, 0.4933114406779661]}}, 
         DirectedEdge[528, 540] -> {EdgeStyle -> {
             RGBColor[
             0.41623649152542375`, 0.7170165762711864, 0.9154717118644068]}}, 
         DirectedEdge[10452, 10544] -> {EdgeStyle -> {
             RGBColor[
             0.9353048813559321, 0.7282816101694916, 0.4933114406779661]}}, 
         DirectedEdge[1444, 1400] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[2044, 2000] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[540, 616] -> {EdgeStyle -> {
             RGBColor[
             0.41623649152542375`, 0.7170165762711864, 0.9154717118644068]}}, 
         DirectedEdge[2000, 9468] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[4696, 3992] -> {EdgeStyle -> {
             RGBColor[
             0.633272372881356, 0.4916090847457627, 0.7577947627118644]}}, 
         DirectedEdge[4908, 5248] -> {EdgeStyle -> {
             RGBColor[
             0.633272372881356, 0.4916090847457627, 0.7577947627118644]}}, 
         DirectedEdge[1288, 5520] -> {EdgeStyle -> {
             RGBColor[
             0.5275049830508475, 0.6088884406779661, 0.8406035084745763]}}, 
         DirectedEdge[10628, 1972] -> {EdgeStyle -> {
             RGBColor[
             0.9353048813559321, 0.7282816101694916, 0.4933114406779661]}}, 
         DirectedEdge[1472, 1612] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[9532, 9568] -> {EdgeStyle -> {
             RGBColor[
             0.9311219152542373, 0.7027218644067796, 0.4977374576271187]}}, 
         DirectedEdge[9468, 9532] -> {EdgeStyle -> {
             RGBColor[
             0.9311219152542373, 0.7027218644067796, 0.4977374576271187]}}, 
         DirectedEdge[2136, 1444] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[4744, 3992] -> {EdgeStyle -> {
             RGBColor[
             0.633272372881356, 0.4916090847457627, 0.7577947627118644]}}, 
         DirectedEdge[1444, 1444] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[2192, 2136] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[1784, 1472] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[1612, 1704] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[10628, 2044] -> {EdgeStyle -> {
             RGBColor[
             0.9353048813559321, 0.7282816101694916, 0.4933114406779661]}}, 
         DirectedEdge[3848, 3068] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[9800, 2020] -> {EdgeStyle -> {
             RGBColor[
             0.9311219152542373, 0.7027218644067796, 0.4977374576271187]}}, 
         DirectedEdge[1872, 1688] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[4008, 4696] -> {EdgeStyle -> {
             RGBColor[
             0.5823714237288136, 0.5437609830508474, 0.7974802881355932]}}, 
         DirectedEdge[3036, 3832] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[4724, 3992] -> {EdgeStyle -> {
             RGBColor[
             0.633272372881356, 0.4916090847457627, 0.7577947627118644]}}, 
         DirectedEdge[1960, 10452] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[5048, 1288] -> {EdgeStyle -> {
             RGBColor[
             0.633272372881356, 0.4916090847457627, 0.7577947627118644]}}, 
         DirectedEdge[5456, 6744] -> {EdgeStyle -> {
             RGBColor[
             0.633272372881356, 0.4916090847457627, 0.7577947627118644]}}, 
         DirectedEdge[3832, 3888] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[1784, 1512] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[4008, 4716] -> {EdgeStyle -> {
             RGBColor[
             0.5823714237288136, 0.5437609830508474, 0.7974802881355932]}}, 
         DirectedEdge[1512, 1872] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[3992, 1444] -> {EdgeStyle -> {
             RGBColor[
             0.5823714237288136, 0.5437609830508474, 0.7974802881355932]}}, 
         DirectedEdge[4704, 3992] -> {EdgeStyle -> {
             RGBColor[
             0.633272372881356, 0.4916090847457627, 0.7577947627118644]}}, 
         DirectedEdge[616, 4636] -> {EdgeStyle -> {
             RGBColor[
             0.41623649152542375`, 0.7170165762711864, 0.9154717118644068]}}, 
         DirectedEdge[4008, 4704] -> {EdgeStyle -> {
             RGBColor[
             0.5823714237288136, 0.5437609830508474, 0.7974802881355932]}}, 
         DirectedEdge[540, 540] -> {EdgeStyle -> {
             RGBColor[
             0.41623649152542375`, 0.7170165762711864, 0.9154717118644068]}}, 
         DirectedEdge[10544, 10596] -> {EdgeStyle -> {
             RGBColor[
             0.9353048813559321, 0.7282816101694916, 0.4933114406779661]}}, 
         DirectedEdge[9568, 9800] -> {EdgeStyle -> {
             RGBColor[
             0.9311219152542373, 0.7027218644067796, 0.4977374576271187]}}, 
         DirectedEdge[1784, 1688] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[1852, 4008] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[1404, 1852] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[3888, 3848] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[3992, 1436] -> {EdgeStyle -> {
             RGBColor[
             0.5823714237288136, 0.5437609830508474, 0.7974802881355932]}}, 
         10628 -> {VertexLabels -> "Finish"}, 
         DirectedEdge[4716, 3992] -> {EdgeStyle -> {
             RGBColor[
             0.633272372881356, 0.4916090847457627, 0.7577947627118644]}}, 
         DirectedEdge[5508, 1288] -> {EdgeStyle -> {
             RGBColor[
             0.633272372881356, 0.4916090847457627, 0.7577947627118644]}}, 
         DirectedEdge[4636, 4684] -> {EdgeStyle -> {
             RGBColor[
             0.633272372881356, 0.4916090847457627, 0.7577947627118644]}}, 
         DirectedEdge[1972, 3764] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[2192, 2148] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[6744, 5508] -> {EdgeStyle -> {
             RGBColor[
             0.633272372881356, 0.4916090847457627, 0.7577947627118644]}}, 
         DirectedEdge[1288, 5248] -> {EdgeStyle -> {
             RGBColor[
             0.5275049830508475, 0.6088884406779661, 0.8406035084745763]}}, 
         DirectedEdge[4008, 4908] -> {EdgeStyle -> {
             RGBColor[
             0.5823714237288136, 0.5437609830508474, 0.7974802881355932]}}, 
         DirectedEdge[2020, 10452] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[10596, 10628] -> {EdgeStyle -> {
             RGBColor[
             0.9353048813559321, 0.7282816101694916, 0.4933114406779661]}}, 
         DirectedEdge[1704, 1404] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[5520, 5048] -> {EdgeStyle -> {
             RGBColor[
             0.633272372881356, 0.4916090847457627, 0.7577947627118644]}}, 
         DirectedEdge[7976, 5456] -> {EdgeStyle -> {
             RGBColor[
             0.8977764915254238, 0.5865927118644069, 0.5343413220338983]}}, 
         DirectedEdge[5248, 7976] -> {EdgeStyle -> {
             RGBColor[
             0.633272372881356, 0.4916090847457627, 0.7577947627118644]}}, 
         DirectedEdge[1444, 1436] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[3764, 2000] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[1436, 1784] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[1504, 1688] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[1784, 1504] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[1688, 1704] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[1688, 1688] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}, 
         DirectedEdge[1780, 3036] -> {EdgeStyle -> {
             RGBColor[
             0.5549382033898306, 0.5763247118644068, 0.8190418983050848]}}}, 
       GraphLayout -> "LayeredDigraphEmbedding", 
       Properties -> {
        DirectedEdge[3888, 3848] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[1400, 1780] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[4908, 5248] -> {Tooltip -> "main"}, 
         DirectedEdge[7976, 5456] -> {Tooltip -> "strcmp"}, 
         DirectedEdge[2192, 2148] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[1784, 1504] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[1288, 5248] -> {Tooltip -> "Func_1.constprop.1"}, 
         DirectedEdge[540, 540] -> {Tooltip -> "_start"}, 
         DirectedEdge[3104, 1960] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[1972, 3764] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[10596, 10628] -> {Tooltip -> "__umoddi3"}, 
         DirectedEdge[540, 616] -> {Tooltip -> "_start"}, 
         DirectedEdge[1784, 1472] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[9532, 9568] -> {Tooltip -> "__udivdi3"}, 
         DirectedEdge[6744, 5508] -> {Tooltip -> "main"}, 
         DirectedEdge[4008, 4908] -> {Tooltip -> "sc_printf"}, 
         DirectedEdge[5520, 5048] -> {Tooltip -> "main"}, 
         DirectedEdge[4636, 4684] -> {Tooltip -> "main"}, 
         DirectedEdge[4696, 3992] -> {Tooltip -> "main"}, 
         DirectedEdge[2056, 2148] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[2148, 2192] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[1504, 1688] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[1780, 3036] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[9468, 9532] -> {Tooltip -> "__udivdi3"}, 
         DirectedEdge[5248, 7976] -> {Tooltip -> "main"}, 
         DirectedEdge[2192, 2136] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[1444, 1400] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[3764, 2000] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[1444, 1436] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[616, 4636] -> {Tooltip -> "_start"}, 
         DirectedEdge[10544, 10596] -> {Tooltip -> "__umoddi3"}, 
         DirectedEdge[4008, 4744] -> {Tooltip -> "sc_printf"}, 
         DirectedEdge[10452, 10544] -> {Tooltip -> "__umoddi3"}, 
         DirectedEdge[5456, 6744] -> {Tooltip -> "main"}, 
         DirectedEdge[1472, 1612] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[1852, 4008] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[2136, 1444] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[3992, 1444] -> {Tooltip -> "sc_printf"}, 
         DirectedEdge[3068, 3104] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[10628, 2044] -> {Tooltip -> "__umoddi3"}, 
         DirectedEdge[4008, 4716] -> {Tooltip -> "sc_printf"}, 
         DirectedEdge[1688, 1704] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[4008, 4696] -> {Tooltip -> "sc_printf"}, 
         DirectedEdge[4684, 3992] -> {Tooltip -> "main"}, 
         DirectedEdge[9800, 2020] -> {Tooltip -> "__udivdi3"}, 
         DirectedEdge[4724, 3992] -> {Tooltip -> "main"}, 
         DirectedEdge[2044, 2000] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[4704, 3992] -> {Tooltip -> "main"}, 
         DirectedEdge[5508, 1288] -> {Tooltip -> "main"}, 
         DirectedEdge[1960, 10452] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[1512, 1872] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[4716, 3992] -> {Tooltip -> "main"}, 
         DirectedEdge[3848, 3068] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[10628, 1972] -> {Tooltip -> "__umoddi3"}, 
         DirectedEdge[1784, 1512] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[1872, 1688] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[3832, 3888] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[4744, 3992] -> {Tooltip -> "main"}, 
         DirectedEdge[4008, 4724] -> {Tooltip -> "sc_printf"}, 
         DirectedEdge[9568, 9800] -> {Tooltip -> "__udivdi3"}, 
         DirectedEdge[1704, 1404] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[1784, 1688] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[1404, 1852] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[3992, 1436] -> {Tooltip -> "sc_printf"}, 
         DirectedEdge[4008, 4704] -> {Tooltip -> "sc_printf"}, 
         DirectedEdge[3036, 3832] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[2000, 9468] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[1688, 1688] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[528, 540] -> {Tooltip -> "_start"}, 
         DirectedEdge[1288, 5520] -> {Tooltip -> "Func_1.constprop.1"}, 
         DirectedEdge[1436, 1784] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[1444, 1444] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[2020, 10452] -> {Tooltip -> "vprintfmt.constprop.4"}, 
         DirectedEdge[5048, 1288] -> {Tooltip -> "main"}, 
         DirectedEdge[10628, 2056] -> {Tooltip -> "__umoddi3"}, 
         DirectedEdge[1612, 1704] -> {
          Tooltip -> "vprintfmt.constprop.4"}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
gQE6u3+gYowvlbahvbldB/4H+i5dQQ==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.02151608723522247], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.41623649152542375`, 0.7170165762711864, 0.9154717118644068], 
            ArrowBox[{{0., 18.}, {-1.7053025658242404`*^-13, 17.}}, 
             0.08690851735015773]},
           "\"_start\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "_start", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.41623649152542375`, 0.7170165762711864, 0.9154717118644068], 
            ArrowBox[{{-1.7053025658242404`*^-13, 
             17.}, {-4.547473508864641*^-13, 16.}}, 0.08690851735015773]},
           "\"_start\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "_start", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.41623649152542375`, 0.7170165762711864, 0.9154717118644068], 
            ArrowBox[BezierCurveBox[{{-1.7053025658242404`*^-13, 17.}, {
             0.18882651889480034`, 17.285577714968476`}, {
             0.43048003511012223`, 17.30981412081072}, {0.5710676568068879, 
             17.225036666271258`}, {0.571067656806888, 16.774963333728746`}, {
             0.4304800351101221, 16.69018587918928}, {0.18882651889480034`, 
             16.714422285031524`}, {-1.7053025658242404`*^-13, 17.}},
             SplineDegree->7], 0.08690851735015773]},
           "\"_start\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "_start", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.41623649152542375`, 0.7170165762711864, 0.9154717118644068], 
            ArrowBox[{{-4.547473508864641*^-13, 16.}, {
             1.6427748050773516`*^-11, 15.}}, 0.08690851735015773]},
           "\"_start\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "_start", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.633272372881356, 0.4916090847457627, 0.7577947627118644], 
            ArrowBox[{{1.6427748050773516`*^-11, 
             15.}, {-3.6209257814334705`*^-11, 14.}}, 0.08690851735015773]},
           "\"main\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "main", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5275049830508475, 0.6088884406779661, 0.8406035084745763], 
            ArrowBox[BezierCurveBox[CompressedData["
1:eJxNk3tMjXEYxw+WSi6Rzvv7lct7Ouc95z2ZZG5RO77qnS6LUi1r7qmcLZMO
2owSYrVxlmrronZ2uoioKVsiJOUYklaZJJckhdwqKffjnT/Od99nzz5/PNvn
n0cWGRcSPV4ikSwzz78t8UsqnD8qhUQMi5q+7seMM4PoHiIkEhZrI8aKh7wZ
XJ+01EO3mMX1/Ebb+jgG1gnru56HsrCq8pmYbGTgzSW6NySw4HMT8tw7GMST
0sVzC1hwIZtMrQ4EGUGP+gdNLH52fUuLCSMouWe9RjPMomL56t73uQRlaZpt
4zgZVmj9OiJfExSe2M95RcgwoJkX5C+lyE9RxjUkyaD31PQGe1PYnf8i9yyR
gd18OG+/luLjn06foiYZjGeGdzWkUghHXzX/GJZhumNOpFsRhf0Sm9vCHBfo
zsXuu3qZItgxUJnk54Jb2+NKd5gorBQVg6V7XDBBKBpd8pBiwTY311sGFzw4
8lvLtVIsEiNHj+67yHbVW82Vo8t+ROTXHvoeD70clRu/iHyt9l/kiAkfEDlL
8zZT81aOsV9vRN5ZLzVXgZ2h3SILYhS4Ef5U5Fl34s1V4LP1I5FH/A3D/gYF
ktk6Cx8O8g01Ik8SfTjYGyotfDgIA2UWPhxuehdb+HBIKSyw8FHilF22hY8S
bxLTLXyUODKWJvJX0UeJzqG9Fj4qCFnZ9lNaKBzXGl8e2KqCLnKybeNdism5
6R7BJ1WI2ty2LqCOwmnmOM+LV1RwSh14Z7hIsaJusO90rwoZL9a3NxZQ7M6L
XukwnUdzlOPUK8cpaksiVkm9eLQwXM7BWPN9d/OH4hgemaPHddMCKdIDbwt1
6TycrT0L4nkK0u+1Ovoqj5B254zinwTJvuUhh9/x4FcG3tC3ERyqr2k0Mmrk
+zbJ3MsJmPAt+aZValz4cPpaahqBYGV88kmrxsaFtfocLYHNw8SDs0+qcXaG
a86WAIKoS19TgirUyDjV3/HMjSC8ymboWJMaThUjwQ5Sgpf3q003+9SANsz8
V+T/f7niL4KRY9I=
             "]], 0.08690851735015773]},
           "\"Func_1.constprop.1\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Func_1.constprop.1", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5275049830508475, 0.6088884406779661, 0.8406035084745763], 
            ArrowBox[{{5.742361582715603, 8.}, {4.992391064781771, 7.}}, 
             0.08690851735015773]},
           "\"Func_1.constprop.1\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Func_1.constprop.1", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.633272372881356, 0.4916090847457627, 0.7577947627118644], 
            ArrowBox[{{6.000000004913147, 13.}, {5.455220821780188, 12.}}, 
             0.08690851735015773]},
           "\"main\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "main", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.633272372881356, 0.4916090847457627, 0.7577947627118644], 
            ArrowBox[{{4.992391064781771, 7.}, {5.404461637622717, 6.}}, 
             0.08690851735015773]},
           "\"main\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "main", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{0.7424236664808745, 11.}, {0.6047328630169773, 10.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{0.6047328630169773, 10.}, {0.4552208248837246, 9.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{4.1818783436623335`, 5.}, {5.15806033850771, 4.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[BezierCurveBox[CompressedData["
1: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
3XDKc1COZEcfqm/9r3854r+4vdTJ
             "]], 0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{2.000000016317813, 11.}, {2.4552208316658835`, 10.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{2.4552208316658835`, 10.}, {1.4552208380973752`, 9.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{2.4552208316658835`, 10.}, {2.45522082766513, 9.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQzbDl8EWvJcwODGCg4jB75cy4UHYWh/pjp2Jsnys7
3OpOXpJZxeJweU6Ed8UpZYe9UYqL2/+yOPxvWnl6w0plBwexy1HrJ7A6/K/Y
e/dZi7JDxr6K0w+M2Ryu1k1plIpRdjAOFvoq/ZzNoWmK3nZvfWWHhVfmX09Y
xe7Asqu7ruqfksMmJ8Xi9bUcDjHvV19fdlLJIW3utOPsiZwOXSb9hy5MUHJ4
81Zn+qxbnA6ZXw6ffJKv5GDb/u7JfVcuh/k3Fy6v9VVyCMu8veH6Ii4H9Sca
MbM1lRzMp3z+1fiRy4FJJPK5LYuSw0N288P3DLkdDDONPFPvKjqEHVnK+S6Z
22HL4y2NglsVHSadtD+3vp3bobv5wQSnbkWHGeKsgipzuR22emwt+xGv6DBz
M/MlryXcDmfPgICCw4QmTjD/i+d8IFJwEKzkA/NljhcCkYKDxHQhMN/VBQQU
HJbcEQXzcw6KAZGCwx5PCTBfo/aSeu0leYeYe5JgfkU5CMg7NM2SAvNPgIyT
kXcwqIPwxcEGyDmkdULUp4GBnIOeEcQ847KPv57zyjlMfScG5v/Z4CFZsUvW
Yfo+iP2HQNbnyDqYLRIB85uWR38+rCTrUDhTGMy3SRZfX39PxsFrCcT9X8H+
k3HYf0gQzF8BUp4q43DxiwCYHzZDWJbLQMahwQrCh6QfGQcAU173Tw==
             "]], 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{2.4552208316658835`, 10.}, {4.455220832024395, 9.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{0.9121669795151774, 12.}, {0.7424236664808745, 11.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{0.9121669795151774, 12.}, {2.000000016317813, 11.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[BezierCurveBox[{{0.9121669795151774, 12.}, {
             0.7012763848545689, 11.621185880069307`}, {0.5254595891647894, 
             11.582529944969817`}, {0.41071417949281375`, 
             11.621581773964712`}, {0.28689068427620096`, 
             11.939297289531828`}, {0.34494946557536305`, 
             12.045696219520302`}, {0.5005570174540638, 
             12.136206532542383`}, {0.9121669795151774, 12.}},
             SplineDegree->7], 0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzZDguHSqx3d7BjBQclixVwvMv2pc9vHXc0WHxJ2C
YL5OENu8vLOKDnrB35aA+GzRG1ijNyg6cHffAPOT/Eo0DkxQdPiVsAPMh2gA
8q9MBfMXfPGc/8VT0YHneQGY37Q8+vNhJUUHg+meYP4zl3Ymnp8KDmlP5cH8
s2dAQMFBt7K+MTHku/3Ci9q5h+crOPD8+ix5tPy7/cWni/+tKVZw+Jdem3tg
03f7GE7Txk4PBQfmw9I1waw/7B1s7n+JkFNwkOY+71qX/8P+3x+XzWav5B28
HKafcvj4w95gwd+4hTPlHXqSSrhmd/20F0t68eajl7zDo8I01l7rX/abnVhj
Nf7JOfjk5e4WY/ltz+IUst5ls5xD8L19Fd0Gf+zP+5g6LvGScxB60J7I7vnX
3mehiP2PF7IOLcUnSrt8/9lX2X9a4dAn67ByRsNWEbv/9uHq5+pqrWQdDqlH
CATzMjg8iVhxYN1bGQeuM6uj5xcyOChfaci7slzGQcdyt8370wwOQjPDO95l
yDho5rdtdpJhdNi4XIfvr4GMA0Me74GZSYwOkPiScQAA7iDGVQ==
             "]], 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{2.1731448177431503`, 7.}, {3.4552208336752983`, 6.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzWBrddFrCbMDAxgoOYiKOIH5V43LPv56ruiQv88L
zNcJYpuXd1bRQcAmBMxni97AGr1B0eFLTxyYn+RXonFggqKD3MZMMN8erEHR
oW9FKZi/4Ivn/C+eig4uxU1gftPy6M+HlRQdHAQngPnPXNqZeH4qODQ0zQPz
z54BAQWHWs/pkwpXMzsI7/LqZF+g4LDhRfLVpweYHWa1y+fvLVFwEE9gmbX8
CbNDvKl33TsvBYdN6ysebBNjcUg+fHbbLCUFh6brB1YIh7M4eCX7GbZ8l3do
u37n096lLA4+DOvdT66Rd9i3/sy+rUysDmdi925gSZV30EqYwPM7l9XhZHVl
jpmCvMOZF+p3ep+zOrhEPa6Kuyfn0HJ0gcGzU2wOz1pXBmzKkXMIzVU9YzKP
3YFx7ksmbmY5B5sHW9dVJnI4TJu/eGLGQlkHS7mgG1tEOB2W9F7/c8pd1sFX
/ZfHs+2cDlrprS5G32QcKn6vZeDz5nLQ0lmbMW+NjMOOWbn/tc9xOSy645fJ
ny3jIMhq6ergyO0wtSLLrdVQxqHBSuCS1xJuaHzJOAAAP5u1fg==
             "]], 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{3.4552208338930654`, 7.}, {3.4552208336752983`, 6.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[BezierCurveBox[{{3.4552208338930654`, 7.}, {
             3.296142151960642, 6.62399799612907}, {3.106352435343921, 
             6.563826293437064}, {2.976814957359328, 6.5988664008126845`}, {
             2.8332925063267163`, 6.945360248266422}, {2.9001122378092448`, 
             7.0617341749515115`}, {3.076861652374946, 7.153387951682165}, {
             3.4552208338930654`, 7.}},
             SplineDegree->7], 0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{4.455220832024395, 9.}, {4.455220835461773, 8.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{4.455220835461773, 8.}, {3.4552208338930654`, 7.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{3.4552208336752983`, 6.}, {4.1818783436623335`, 5.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{0.4552208248837246, 9.}, {0.4552208183197308, 8.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5823714237288136, 0.5437609830508474, 0.7974802881355932], 
            ArrowBox[{{4.000000003910486, 15.}, {1.0000000014777584`, 14.}}, 
             0.08690851735015773]},
           "\"sc_printf\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "sc_printf", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5823714237288136, 0.5437609830508474, 0.7974802881355932], 
            ArrowBox[{{4.000000003910486, 15.}, {2.000000002459558, 14.}}, 
             0.08690851735015773]},
           "\"sc_printf\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "sc_printf", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5823714237288136, 0.5437609830508474, 0.7974802881355932], 
            ArrowBox[{{4.000000003910486, 15.}, {3.0000000028297222`, 14.}}, 
             0.08690851735015773]},
           "\"sc_printf\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "sc_printf", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5823714237288136, 0.5437609830508474, 0.7974802881355932], 
            ArrowBox[{{4.000000003910486, 15.}, {4.000000003050673, 14.}}, 
             0.08690851735015773]},
           "\"sc_printf\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "sc_printf", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5823714237288136, 0.5437609830508474, 0.7974802881355932], 
            ArrowBox[{{4.000000003910486, 15.}, {5.000000004936567, 14.}}, 
             0.08690851735015773]},
           "\"sc_printf\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "sc_printf", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5823714237288136, 0.5437609830508474, 0.7974802881355932], 
            ArrowBox[{{4.000000003910486, 15.}, {6.000000007205813, 14.}}, 
             0.08690851735015773]},
           "\"sc_printf\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "sc_printf", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{0.45522081901339106`, 3.}, {-1.5447791899273966`, 2.}},
              0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.9353048813559321, 0.7282816101694916, 0.4933114406779661], 
            ArrowBox[{{-1.5447791899273966`, 2.}, {-1.5447791868212448`, 1.}},
              0.08690851735015773]},
           "\"__umoddi3\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "__umoddi3", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{-2.5447791908274553`, 10.}, {-2.5447791912125695`, 
             9.}}, 0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{-2.5447791912125695`, 9.}, {-1.5447792014631432`, 8.}},
              0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{-1.5447792014631432`, 8.}, {-1.5447792135968257`, 7.}},
              0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.9311219152542373, 0.7027218644067796, 0.4977374576271187], 
            ArrowBox[{{-1.5447792135968257`, 7.}, {-1.5447792044978428`, 6.}},
              0.08690851735015773]},
           "\"__udivdi3\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "__udivdi3", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{-1.5447791910205524`, 3.}, {-1.5447791899273966`, 2.}},
              0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzfAyMiFr+4/9DGCg4qCrHA3mXzUu+/jrubJDXl0M
mK8TxDYv76yyw6FfsWA+W/QG1ugNyg5qM+LB/ES/Eo0DE5Qd5oUlgvn2YA3K
DhpmyWD+/C+eQKTscMQsFcxvXB79+bCSskNRRDqY/8ylnYnnp5KD8exMMP8M
GCg5rGMqAvM/g7TPV3LomdQG5sscLwQiJYfzXsvBfFcXEFByKNS+AubnHBQD
IiWHMhPeRBB/it3LyXYvFR3upQaB+Xt2g4Ciw4r9i8H8JxZ9jy36FB2uOzIm
gfg82xK4tyUoOqS9yQLzjcFA0aF1wnUwX3J3xd/PbIoOSf9tk0H8uoglPDZ3
FRx+W8wD8xO5QQYoOPjb/gDzD15e+zNxooJDAo9PCog/b2P3dft8BQe9ZTPB
/F9L/IFIwWEH10Mw/wpIuZGCwz9LpVQQX/tMJx+rhIIDg0lsKiK+FBwAKvTa
cg==
             "]], 0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{-3.544779189441442, 10.}, {-4.098085718144603, 9.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[BezierCurveBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAAAIselXBkEMAAAAAAAAAiQLykB0H0
lRDApYo+4VATIkDPZMCIjsYQwK4lb2gIKiJAPMtIbD/2EMAa0ZGVJkQiQP/X
oOsGJRHA54ymaKthIkAai8gG5VIRwBdZreGWgiJAjuS/vdl/EcCrNaYA6aYi
QFrkhhDlqxHAoSKRxaHOIkB+ih3/BtcRwPofbjDB+SJA+taDiT8BEsC2LT1B
RygjQEEqCM8tJhLAH4bXXXVYI0DN5PjucEESwIZjFuyMiCNAmAZW6QhTEsDo
xfnrjbgjQKOPH771WhLAQ62BXXjoI0Dxf1VtN1kSwJoZrkBMGCRAgNf39s1N
EsDsCn+VCUgkQFCWBlu5OBLAOoH0W7B3JEBivIGZ+RkSwIJ8DpRApyRAInjM
jFyEEcBC7U6pLkklQOznw9NEVRHAZPZN+It5JUDCMVJWriQRwDwJbXF8qSVA
pFV3FJnyEMDLJawUANklQI5TMw4FvxDAD0wL4hYIJkCFK4ZD8okQwAh8itnA
NiZAht1vtGBTEMC4tSn7/WQmQJJp8GBQGxDAHvnoRs6SJkBTnw+SgsMPwDlG
yLwxwCZAxP9XWaQoDsCgkVBUslonQHphC2/OrA3A2ozIgaCIJ0BinLe1gy8N
wOqVp11LtidAfrBcLcSwDMDRrO3nsuMnQMid+tWPMAzAitGaINcQKEBEZJGv
5q4LwBwErwe4PShA8AMhusgrC8CARCqdVWooQM18qfU1pwrAu5IM4a+WKEDc
zipiLiEKwMvuVdPGwihA+GEy9sM4CMCuDnU90V8pQLpI43bZqAfAYv7YuYuN
KUAdaUq9ShcHwPdfHBHtuilAHcNnyReEBsBvMz9D9ecpQLpWO5tA7wXAxnhB
UKQUKkD4I8UyxVgFwAEwIzj6QCpA0yoFkKXABMAdWeT69mwqQE1r+7LhJgTA
GvSEmJqYKkBl5aebeYsDwPkABRHlwypAHJkKSm3uAsC6f2Rk1u4qQFxJQTKI
PQLAbxN2nXQdK0DczgHPA5IBwBtbecUBSCtAmSlMIODrAMDCVm7cfW4rQJFZ
ICYdSwDAXwZV4uiQK0CMvfzAdV//v/RpLddCrytAcnLMnnIz/r+Dgfe6i8kr
QNLRr+UwEv2/Ck2zjcPfK0Cs26aVsPv7v4nMYE/q8StAAJCxrvHv+r8AAAAA
AAAsQExBktU=
             "]], 0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{-0.37788660841380306`, 13.}, {0.9121669795151774, 
             12.}}, 0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[BezierCurveBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAAAJCxrvHv+r8AAAAAAAAsQIiG2Pp2
Sfu/qJdYErPdK0CNx+J6rML7v2xJjam3uStADVPQLpJb/L9KFZ7FDZQrQAQp
oRYoFP2/Q/uKZrVsK0B5SVUybuz9v1T7U4yuQytAZrTsgWTk/r+AFfk2+Rgr
QM5pZwUL/P+/yEl6ZpXsKkDZtGLesJkAwCqY1xqDvipAB1oDVDRFAcClABFU
wo4qQCFanaiY3wHAurR4i45kKkDM/rvaXngCwP/vmuUCOipABEhf6oYPA8Bu
sndiHw8qQMs1h9cQpQPAC/wOAuTjKUAgyDOi/DgEwNTMYMRQuClABP9kSkrL
BMDKJG2pZYwpQHfaGtD5WwXA7AM0sSJgKUB4WlUzC+sFwD1qtduHMylAZ4JT
i2jXB8A0TqgqAZYoQFNoxryuWwjAvsVR+jZrKEDgKNMFi94IwHh4t2orQChA
CMR5Zv1fCcBjZtl73hQoQMw5ut4F4AnAfI+3LVDpJ0AsipRupF4KwMXzUYCA
vSdALLUIFtnbCsA+k6hzb5EnQMe6FtWjVwvA5m27Bx1lJ0ABm76rBNILwL+D
ijyJOCdAMFuCwMeaDcCWQbjvKI4mQGi1FfhwAw7A6swP5nRmJkCPsaT65GkO
wIUaFEhuPiZAqE8vyCPODsBjKsUVFRYmQLCPtWAtMA/Ag/wiT2ntJUCocTfE
AZAPwOiQLfRqxCVAkvW08qDtD8CS5+QEGpslQLYNF3aFJBDAfgBJgXZxJUCb
cVHYH1EQwK/bWWmARyVAeQbxnvfeEMCQ3zcHBrwkQFlLrb/4BBHANCY8/OmR
JEBhXlUH2iERwFVI1DS5ZyRAjz/pdZs1EcDxRQCxcz0kQOTuaAs9QBHABh/A
cBkTJEBgbNTHvkERwJnTE3Sq6CNAArgrqyA6EcCmY/u6Jr4jQMzRbrViKRHA
Ls92RY6TI0C8uZ3mhA8RwDIWhhPhaCNA1G+4PofsEMCxOCklHz4jQHF9Zp+w
xxDAOVaDyiYUI0D5a0/qR6gQwFyOt1PW6yJAZztzH02OEMAX4cXALcUiQL3r
0T7AeRDAak6uES2gIkD7fGtIoWoQwFbWcEbUfCJAIO8/PPBgEMDceA1fI1si
QC5CTxqtXBDA+jWEWxo7IkAjdpni110QwLEN1Tu5HCJAAIselXBkEMAAAAAA
AAAiQJYyh4s=
             "]], 0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{-1.6835800956696403`, 14.}, {-0.37788660841380306`, 
             13.}}, 0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{0.4552208183197308, 8.}, {0.45522082455136115`, 7.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{0.45522082271168074`, 5.}, {0.4552208221115279, 4.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{0.4552208221115279, 4.}, {0.45522081901339106`, 3.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{0.45522082455136115`, 7.}, {0.4552208217014595, 6.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5549382033898306, 0.5763247118644068, 0.8190418983050848], 
            ArrowBox[{{0.4552208217014595, 6.}, {0.45522082271168074`, 5.}}, 
             0.08690851735015773]},
           "\"vprintfmt.constprop.4\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "vprintfmt.constprop.4", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5823714237288136, 0.5437609830508474, 0.7974802881355932], 
            ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzWCbywgkHRjAQMthjm4xmH/FuOzjr+eaDp77KsF8
3SC2eXlnNR3Y3zeA+RzRG1ijN2g6XN7fAeYn+ZVoHJig6bDRYCKY76AD0qDp
sMBxFpg//4snEGk6zPu0GMxvXB79+bCSpsNa53Vg/jOXdiaenxoOZ012gvln
wEDD4ZnOETD/M0j7fA2Hx5POgfkyxwuBSMPhcNoNMN8FDDQcmlc8BPOzD4rl
HBTTcNCIeAXmT7F7OdnupbrDhtJPYP6e3SCg7iDN+AvMf2LR99iiT90h8xc4
WBy4tyUAkbrDrER2MN8YDNQdrEJ4wXzJ3RV/P7OpO9x6LwTm10cs4bG5q+ZQ
YSIB5ieCDVBzEFaSBfMPXF77M3GimsPaHYpg/vyN3dft89UcXH6ogvm/lvgD
kZrDrQeaYP4VkHIjNYe8Il0wX/tMJx+rhJoDw1oDJkR8qTkAAF7mitE=
             "]], 
             0.08690851735015773]},
           "\"sc_printf\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "sc_printf", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.5823714237288136, 0.5437609830508474, 0.7974802881355932], 
            ArrowBox[{{2.000000010629833, 13.}, {0.9121669795151774, 12.}}, 
             0.08690851735015773]},
           "\"sc_printf\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "sc_printf", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.633272372881356, 0.4916090847457627, 0.7577947627118644], 
            ArrowBox[{{1.0000000014777584`, 14.}, {2.000000010629833, 13.}}, 
             0.08690851735015773]},
           "\"main\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "main", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.633272372881356, 0.4916090847457627, 0.7577947627118644], 
            ArrowBox[{{2.000000002459558, 14.}, {2.000000010629833, 13.}}, 
             0.08690851735015773]},
           "\"main\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "main", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.633272372881356, 0.4916090847457627, 0.7577947627118644], 
            ArrowBox[{{3.0000000028297222`, 14.}, {2.000000010629833, 13.}}, 
             0.08690851735015773]},
           "\"main\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "main", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.633272372881356, 0.4916090847457627, 0.7577947627118644], 
            ArrowBox[{{4.000000003050673, 14.}, {2.000000010629833, 13.}}, 
             0.08690851735015773]},
           "\"main\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "main", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.633272372881356, 0.4916090847457627, 0.7577947627118644], 
            ArrowBox[{{5.000000004936567, 14.}, {2.000000010629833, 13.}}, 
             0.08690851735015773]},
           "\"main\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "main", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.633272372881356, 0.4916090847457627, 0.7577947627118644], 
            ArrowBox[{{6.000000007205813, 14.}, {6.000000004913147, 13.}}, 
             0.08690851735015773]},
           "\"main\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "main", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.633272372881356, 0.4916090847457627, 0.7577947627118644], 
            ArrowBox[{{-3.6209257814334705`*^-11, 14.}, {2.000000010629833, 
             13.}}, 0.08690851735015773]},
           "\"main\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "main", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.633272372881356, 0.4916090847457627, 0.7577947627118644], 
            ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzeDHYag9T9SBAQwkHG5wWGTu2yXq0PrtQPgsAwkH
v/WKQV9uiTqkXVmxLjldwiHV8ejrM/9EHRbO3M4Ss0TCQWK/kpmHmpiDudvb
yObnEg45GlaGaYFiDmq3PNfdNJB0iKvlvqvWIOZQFHqWMb5B0uHD3mmWXZvE
HCR2lIcIX5N0kH91223CCzEHSSbPZd8MpRzeMd5msVQSdygxdvzOMUXKIerO
gpJ7vuIOv79LHKp6KuUwI07k0+ZCcYfHFd5MvBbSDis6TGt39oo7aGy7sX1/
t7RDexSL2PuF4g5n1x94NOmBtIP5lYY9IevEHS6lMje3mck47Pq6quDVJnEH
0xsLZszqlXHg2d9ktGG9uMN3tpnK55/KOBgacDAtWyLuIPnptbKKvayDmqf1
/dMTxR1mzQQBWQfTxMSZq6vFHU518rFKfJJ1WHt+//9zaeIOzP7bn7W7yjl0
TAkTMgsWd3B4Odnu5WQ5hxPrVS8+cBB3qI9YwmNzV86hQFHX5ry+uMPhOS8C
GhTlHWpe5gQzKog7cG9LACJ5h7fsT8XKBcUdwMpnyTscqZnaZsAi7rAq/c2j
r+flHRg86hbp/hCDxpeCAwDAdrN+
             "]], 0.08690851735015773]},
           "\"main\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "main", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.8977764915254238, 0.5865927118644069, 0.5343413220338983], 
            ArrowBox[{{5.455220821780188, 12.}, {5.455220823843945, 11.}}, 
             0.08690851735015773]},
           "\"strcmp\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "strcmp", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.633272372881356, 0.4916090847457627, 0.7577947627118644], 
            ArrowBox[{{5.455220823843945, 11.}, {5.455220826104494, 10.}}, 
             0.08690851735015773]},
           "\"main\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "main", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.633272372881356, 0.4916090847457627, 0.7577947627118644], 
            ArrowBox[{{5.455220826104494, 10.}, {5.455220835664534, 9.}}, 
             0.08690851735015773]},
           "\"main\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "main", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.633272372881356, 0.4916090847457627, 0.7577947627118644], 
            ArrowBox[{{5.455220835664534, 9.}, {5.742361582715603, 8.}}, 
             0.08690851735015773]},
           "\"main\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "main", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.9311219152542373, 0.7027218644067796, 0.4977374576271187], 
            ArrowBox[{{-1.5447792044978428`, 6.}, {-1.5447792005257952`, 5.}},
              0.08690851735015773]},
           "\"__udivdi3\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "__udivdi3", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.9311219152542373, 0.7027218644067796, 0.4977374576271187], 
            ArrowBox[{{-1.5447792005257952`, 5.}, {-1.5447792012473656`, 4.}},
              0.08690851735015773]},
           "\"__udivdi3\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "__udivdi3", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.9311219152542373, 0.7027218644067796, 0.4977374576271187], 
            ArrowBox[{{-1.5447792012473656`, 4.}, {-1.5447791910205524`, 3.}},
              0.08690851735015773]},
           "\"__udivdi3\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "__udivdi3", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.9353048813559321, 0.7282816101694916, 0.4933114406779661], 
            ArrowBox[{{-1.5447791868212448`, 1.}, {-1.049232158735549, 0.}}, 
             0.08690851735015773]},
           "\"__umoddi3\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "__umoddi3", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.9353048813559321, 0.7282816101694916, 0.4933114406779661], 
            ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlQlQE1cYxwNVqS0E5AiH0dxgi1htqhW17FdHiwpVmk5BREt1NDoWsCAW
pLUqagttiQcehXEM0pRqx4rQVlSURwCHoQTReIU6OCSEI+GKIbRISGz2w5nl
P9/Ozm923tvfu3YFW3bJtrmzWKxU10XfWcaxC782WQjrZfjS7i9KtluIJZPs
T1lzgfLob9+50zpENPtu9abcv04lJr450Dw+SJyqWMdHRxqoty5X7Ng2OEBy
j16/kdqloX40725f1NhPlhLZoylT71MZ7PQY+K6PmBfnmU48f0w9Db5YeXCe
mWjfcXA2x7VT9zy5fvabvSS7bX151WE9FdvTlHLp7R5S2ibr+PSEkZLFftk4
MN5FFHm6Ah2/h7LXrzIr+4ykuoQ75qgyUSvXvv+wztlJwoQ8SWtCPzWvLzkv
flEnuevZwY5lDVE3ilWvJJ0wkI1XypNu6CxU90bv6Lu+BjKkWHtUtdBK/bmg
RHa1Sk+EpbGlxtPDlCg4IdTroJ7YTBdP5ozbqJYQn7oHaXpSXETnOfXfKjfk
pCtTXWWnKjU2Nc3cxnRXjVNuZWbkjnY6DqrjgQFZaVvtqheULLEduYJunsSC
eOk/yL4z6LhB/5Y25Azs0A38eiee3w/bpw3b5w5S74n+NZgpMFZoRZ6ry43Q
5U6FDwPd0U/RudhV02BOURCyZZDONCgIXoS8bkzlKg/4+qcNyDicpFdhJODb
OsZnOowev1bH+EyHw55WZC36vAbyzOZ6mlvQxxPK3/VqoDkCfbxAd2xNA+PD
hqf7DzUwPmxQT7mGHIc+3pDL60XG5hE+ILzrd5vm/Dw6PqDkLEWOxA59wG7d
hGwujDIVRs0AzWA1shzjC+FbW5ADUtScFLUv2Fc3IeNycf0gsqQcOTuLjh90
yw8gz6GHp/UD93MT75vw8QfFSj36oU6eP+RvSkdegj7+MNzVV8/4BIC05Yma
8eHA+cQoNePDgTtnK2oZn0C4enphLeMTCBui/yaMTyDcvLyLMD5BoNNICDM/
QVB5vr+GmZ8gWBXRUMP4BINcm4+8HX1CgPrhG2QO+oTA5zlf1TA+M8GsPFDD
+MyE6/aCGsZnJjwp+Bm5DX24EBevrmF8uMD5pGeSDxfmfx9AGJ9ZIFe1EmZ+
ZkP2Lg8cvz/6zIa8+kjk2+jDg1MlcuS96MODs9MUyLgdtTwoHSlHnphePvyS
qkFegeGDKq2zljmvfDg/akMeoY+nkg9yHw6ujxQjAO+zXOTXr37mKgHwjs1C
NtLbWSGAk/1ByDer6QggtYKNfJIenkkAl546J/kIIS7TNMlHCIkZdyb5CKFR
9zsyfi6UQpCnhdcyPiIIqW8aFh/Tk/cE61jnkkUQUf2vIsCmJ791RVfp8kVQ
El95vKzYQHIOzFrfWSGCtFPj9seHOsmlZ62GW49FUJz1sOViuZEsj0xO2GEX
QahjmQd3djdZmtD8l4ErBnao9MK81h5yJsbfOXeZGOKtVVf0dSYSz1kyPzpR
DPbNzfyFz/tIdtWy2AWZYojhJi+XPbKQ6BnCqOl/iOHZHqnig73DxBHufPDG
gBiGbhl2Z3WNkDMe93wKhRJYbksZNoaMEo6q+NmKjyUwEKT1PBo8RnLckrKo
/RIYCvet3aO3kwaeb2lumcS1fyO8ijIcxOok6ewmCYxyRbZRjZN4KLd2G7ol
wLIPZ56yvHj5/wqF/wESpqgl
             "]], 0.08690851735015773]},
           "\"__umoddi3\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "__umoddi3", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.9353048813559321, 0.7282816101694916, 0.4933114406779661], 
            ArrowBox[{{-1.9962362831572023`, 11.}, {-2.5447791908274553`, 
             10.}}, 0.08690851735015773]},
           "\"__umoddi3\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "__umoddi3", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.9353048813559321, 0.7282816101694916, 0.4933114406779661], 
            ArrowBox[{{-1.9962362831572023`, 11.}, {-1.5447791827887727`, 
             10.}}, 0.08690851735015773]},
           "\"__umoddi3\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "__umoddi3", "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           {RGBColor[
            0.9353048813559321, 0.7282816101694916, 0.4933114406779661], 
            ArrowBox[{{-1.9962362831572023`, 11.}, {-3.544779189441442, 10.}},
              0.08690851735015773]},
           "\"__umoddi3\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "__umoddi3", "Tooltip"]& ]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
          {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
           DiskBox[1, 0.08690851735015773]}, 
          InsetBox["\<\"Start\"\>", 
           Offset[{2, 2}, {0.08690851735015773, 18.086908517350157}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, DiskBox[2, 0.08690851735015773], 
         DiskBox[3, 0.08690851735015773], DiskBox[4, 0.08690851735015773], 
         DiskBox[5, 0.08690851735015773], DiskBox[6, 0.08690851735015773], 
         DiskBox[7, 0.08690851735015773], DiskBox[8, 0.08690851735015773], 
         DiskBox[9, 0.08690851735015773], DiskBox[10, 0.08690851735015773], 
         DiskBox[11, 0.08690851735015773], DiskBox[12, 0.08690851735015773], 
         DiskBox[13, 0.08690851735015773], DiskBox[14, 0.08690851735015773], 
         DiskBox[15, 0.08690851735015773], DiskBox[16, 0.08690851735015773], 
         DiskBox[17, 0.08690851735015773], DiskBox[18, 0.08690851735015773], 
         DiskBox[19, 0.08690851735015773], DiskBox[20, 0.08690851735015773], 
         DiskBox[21, 0.08690851735015773], DiskBox[22, 0.08690851735015773], 
         DiskBox[23, 0.08690851735015773], DiskBox[24, 0.08690851735015773], 
         DiskBox[25, 0.08690851735015773], DiskBox[26, 0.08690851735015773], 
         DiskBox[27, 0.08690851735015773], DiskBox[28, 0.08690851735015773], 
         DiskBox[29, 0.08690851735015773], DiskBox[30, 0.08690851735015773], 
         DiskBox[31, 0.08690851735015773], DiskBox[32, 0.08690851735015773], 
         DiskBox[33, 0.08690851735015773], DiskBox[34, 0.08690851735015773], 
         DiskBox[35, 0.08690851735015773], DiskBox[36, 0.08690851735015773], 
         DiskBox[37, 0.08690851735015773], DiskBox[38, 0.08690851735015773], 
         DiskBox[39, 0.08690851735015773], DiskBox[40, 0.08690851735015773], 
         DiskBox[41, 0.08690851735015773], DiskBox[42, 0.08690851735015773], 
         DiskBox[43, 0.08690851735015773], DiskBox[44, 0.08690851735015773], 
         DiskBox[45, 0.08690851735015773], DiskBox[46, 0.08690851735015773], 
         DiskBox[47, 0.08690851735015773], DiskBox[48, 0.08690851735015773], 
         DiskBox[49, 0.08690851735015773], DiskBox[50, 0.08690851735015773], 
         DiskBox[51, 0.08690851735015773], DiskBox[52, 0.08690851735015773], 
         DiskBox[53, 0.08690851735015773], DiskBox[54, 0.08690851735015773], 
         DiskBox[55, 0.08690851735015773], DiskBox[56, 0.08690851735015773], 
         DiskBox[57, 0.08690851735015773], 
         DiskBox[58, 0.08690851735015773], {
          {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
           DiskBox[59, 0.08690851735015773]}, 
          InsetBox["\<\"Finish\"\>", 
           Offset[{2, 2}, {-1.9093277658070444, 11.086908517350158}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.737961823924849*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"ed70639d-2ac5-4531-bb79-b25d1703b50b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Evaluate statistics of memory access", "Subsubsection",
 CellChangeTimes->{{3.737197557848568*^9, 3.737197576810416*^9}, {
  3.737197627494431*^9, 3.737197634107177*^9}, {3.739466859393345*^9, 
  3.739466877677318*^9}},ExpressionUUID->"7bbe6224-62a7-4def-85a9-\
52b4d410f0d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeviceRead", "[", 
   RowBox[{"device", ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "\"\<reset\>\"", ",", 
      "\"\</Users/ckorikov/_syntacore/projects/wolfram_russianhack18_scr1/cpp_\
bridge/dhrystone.bin\>\""}], "\[IndentingNewLine]", "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.737196696014893*^9, 3.737196697390973*^9}, {
  3.737196797716717*^9, 3.737196854711508*^9}, {3.737197028566655*^9, 
  3.737197032277376*^9}, {3.737197192014955*^9, 
  3.737197192558469*^9}},ExpressionUUID->"69ee9d48-7b04-44a8-96ef-\
d77b5cad0c75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"busData", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"DeviceRead", "[", 
       RowBox[{"device", ",", "\"\<step\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"DeviceRead", "[", 
       RowBox[{"device", ",", "\"\<get_data_bus\>\""}], "\[IndentingNewLine]",
        "]"}]}], ",", "100000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7371976452618504`*^9, 3.737197686224382*^9}, {
  3.737197869347034*^9, 
  3.7371979036933203`*^9}},ExpressionUUID->"d9feed8f-6435-4391-a8cd-\
71f0edb5acea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"busDataClean", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"busData", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], " ", "&"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.737197701570887*^9, 
  3.737197704473621*^9}},ExpressionUUID->"1679e249-f93e-43b0-b634-\
5095e584aca3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"busDataCleanFull", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Range", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], ")"}]}]}], 
        "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
      "busDataClean"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.737197773584302*^9, 
  3.7371977787325497`*^9}},ExpressionUUID->"41e80c23-8026-4afd-aa3a-\
01ae3885f9eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"busDataCleanFull", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "60000", ",", "500"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.737197785008951*^9, 3.737197839738946*^9}, {
  3.737197949802341*^9, 3.737198060342266*^9}, {3.737199472811928*^9, 
  3.737199558088501*^9}},ExpressionUUID->"7800b3fb-0cfd-494b-baaa-\
df9256792773"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[
    Opacity[0.]], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[
     Opacity[0.]], RectangleBox[{0., 0}, {500., 1210.},
      RoundingRadius->0], RectangleBox[{500., 0}, {1000., 25706.},
      RoundingRadius->0], RectangleBox[{1000., 0}, {1500., 187.},
      RoundingRadius->0], RectangleBox[{1500., 0}, {2000., 5778.},
      RoundingRadius->0], RectangleBox[{2000., 0}, {2500., 4933.},
      RoundingRadius->0], RectangleBox[{2500., 0}, {3000., 23117.},
      RoundingRadius->0], RectangleBox[{3000., 0}, {3500., 380.},
      RoundingRadius->0], RectangleBox[{3500., 0}, {4000., 19952.},
      RoundingRadius->0], RectangleBox[{4000., 0}, {4500., 15986.},
      RoundingRadius->0], RectangleBox[{4500., 0}, {5000., 190.},
      RoundingRadius->0], RectangleBox[{5500., 0}, {6000., 341.},
      RoundingRadius->0], RectangleBox[{6000., 0}, {6500., 32.},
      RoundingRadius->0], RectangleBox[{6500., 0}, {7000., 450.},
      RoundingRadius->0], RectangleBox[{7000., 0}, {7500., 4.},
      RoundingRadius->0], RectangleBox[{7500., 0}, {8000., 378.},
      RoundingRadius->0], RectangleBox[{8000., 0}, {8500., 19.},
      RoundingRadius->0], RectangleBox[{8500., 0}, {9000., 154.},
      RoundingRadius->0], RectangleBox[{9000., 0}, {9500., 30.},
      RoundingRadius->0], RectangleBox[{9500., 0}, {10000., 434.},
      RoundingRadius->0], RectangleBox[{10000., 0}, {10500., 6.},
      RoundingRadius->0], RectangleBox[{10500., 0}, {11000., 196.},
      RoundingRadius->0], RectangleBox[{11500., 0}, {12000., 34854.},
      RoundingRadius->0], RectangleBox[{12000., 0}, {12500., 250.},
      RoundingRadius->0], RectangleBox[{12500., 0}, {13000., 254.},
      RoundingRadius->0], RectangleBox[{13000., 0}, {13500., 250.},
      RoundingRadius->0], RectangleBox[{13500., 0}, {14000., 2888.},
      RoundingRadius->0], RectangleBox[{14000., 0}, {14500., 2512.},
      RoundingRadius->0], RectangleBox[{14500., 0}, {15000., 660.},
      RoundingRadius->0], RectangleBox[{15000., 0}, {15500., 250.},
      RoundingRadius->0], RectangleBox[{15500., 0}, {16000., 250.},
      RoundingRadius->0], RectangleBox[{16000., 0}, {16500., 1754.},
      RoundingRadius->0], RectangleBox[{16500., 0}, {17000., 250.},
      RoundingRadius->0], RectangleBox[{17000., 0}, {17500., 250.},
      RoundingRadius->0], RectangleBox[{17500., 0}, {18000., 626.},
      RoundingRadius->0], RectangleBox[{18000., 0}, {18500., 250.},
      RoundingRadius->0], RectangleBox[{18500., 0}, {19000., 250.},
      RoundingRadius->0], RectangleBox[{19000., 0}, {19500., 250.},
      RoundingRadius->0], RectangleBox[{19500., 0}, {20000., 250.},
      RoundingRadius->0], RectangleBox[{20000., 0}, {20500., 251.},
      RoundingRadius->0], RectangleBox[{20500., 0}, {21000., 250.},
      RoundingRadius->0], RectangleBox[{21000., 0}, {21500., 252.},
      RoundingRadius->0], RectangleBox[{21500., 0}, {22000., 226.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-1200., 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{499.5078125, Automatic},
  PlotRange->{{0., 60000.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.737197789223288*^9, 3.737197840367028*^9}, {
   3.737197936816059*^9, 3.737198012331073*^9}, 3.7371980609762793`*^9, {
   3.737199478303585*^9, 
   3.737199558589435*^9}},ExpressionUUID->"7881c56c-5725-40df-9797-\
d4fd0353d845"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Execution graph", "Subsubsection",
 CellChangeTimes->{{3.737196671175005*^9, 3.737196693157172*^9}, {
  3.739466795379058*^9, 
  3.739466819637866*^9}},ExpressionUUID->"8ca3970c-3410-41c5-a59b-\
57ba43a103de"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DeviceRead", "[", 
   RowBox[{"device", ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "\"\<reset\>\"", ",", 
      "\"\</Users/ckorikov/_syntacore/projects/wolfram_russianhack18_scr1/\
scr1_programs/dhrystone.bin\>\""}], "\[IndentingNewLine]", "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ipcList", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DeviceRead", "[", 
      RowBox[{"device", ",", "\"\<next_ipc\>\""}], "]"}], ",", "10000"}], 
    "]"}]}], ";", 
  RowBox[{"g", "=", 
   RowBox[{"Union", "[", 
    RowBox[{"BlockMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", "ipcList", ",", "2", 
      ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphPlot", "[", 
  RowBox[{"g", ",", 
   RowBox[{"DirectedEdges", "\[Rule]", " ", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.737196696014893*^9, 3.737196697390973*^9}, {
  3.737196797716717*^9, 3.737196854711508*^9}, {3.737197028566655*^9, 
  3.737197032277376*^9}, {3.741692421498354*^9, 3.741692422962385*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"b7d51811-c640-4344-982e-f7dafb3e507a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[CompressedData["
1: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
6HiXdVLDFIeCL0m4Rariv1q+aiw=
    "], {
     {RGBColor[0.5, 0., 0.], Arrowheads[{{0.007926140262473971, 0.8}}], 
      ArrowBox[{1, 2}], ArrowBox[{2, 3}], ArrowBox[{3, 4}], ArrowBox[{4, 5}], 
      ArrowBox[{5, 6}], ArrowBox[{6, 7}], ArrowBox[{7, 8}], ArrowBox[{7, 10}],
       ArrowBox[{8, 9}], ArrowBox[{9, 7}], ArrowBox[{10, 11}], 
      ArrowBox[{11, 12}], ArrowBox[{12, 13}], ArrowBox[{13, 14}], 
      ArrowBox[{14, 15}], ArrowBox[{15, 16}], ArrowBox[{16, 17}], 
      ArrowBox[{17, 18}], ArrowBox[{18, 19}], ArrowBox[{19, 20}], 
      ArrowBox[{20, 21}], ArrowBox[{21, 22}], ArrowBox[{22, 23}], 
      ArrowBox[{23, 24}], ArrowBox[{24, 25}], ArrowBox[{25, 26}], 
      ArrowBox[{26, 27}], ArrowBox[{27, 117}], ArrowBox[{28, 29}], 
      ArrowBox[{29, 30}], ArrowBox[{30, 31}], ArrowBox[{31, 32}], 
      ArrowBox[{32, 33}], ArrowBox[{33, 34}], ArrowBox[{34, 35}], 
      ArrowBox[{35, 36}], ArrowBox[{35, 37}], ArrowBox[{36, 38}], 
      ArrowBox[{37, 41}], ArrowBox[{38, 39}], ArrowBox[{39, 40}], 
      ArrowBox[{40, 82}], ArrowBox[{41, 42}], ArrowBox[{42, 43}], 
      ArrowBox[{43, 44}], ArrowBox[{44, 45}], ArrowBox[{45, 46}], 
      ArrowBox[{46, 47}], ArrowBox[{47, 43}], ArrowBox[{47, 48}], 
      ArrowBox[{48, 49}], ArrowBox[{49, 40}], ArrowBox[{50, 51}], 
      ArrowBox[{51, 52}], ArrowBox[{52, 53}], ArrowBox[{53, 54}], 
      ArrowBox[{54, 55}], ArrowBox[{55, 56}], ArrowBox[{56, 57}], 
      ArrowBox[{57, 58}], ArrowBox[{58, 59}], ArrowBox[{59, 60}], 
      ArrowBox[{60, 61}], ArrowBox[{61, 62}], ArrowBox[{62, 63}], 
      ArrowBox[{63, 64}], ArrowBox[{64, 65}], ArrowBox[{65, 66}], 
      ArrowBox[{66, 67}], ArrowBox[{67, 68}], ArrowBox[{68, 69}], 
      ArrowBox[{69, 70}], ArrowBox[{70, 71}], ArrowBox[{71, 72}], 
      ArrowBox[{72, 73}], ArrowBox[{73, 74}], ArrowBox[{74, 75}], 
      ArrowBox[{75, 76}], ArrowBox[{76, 77}], ArrowBox[{77, 78}], 
      ArrowBox[{77, 79}], ArrowBox[{78, 80}], ArrowBox[{79, 83}], 
      ArrowBox[{80, 81}], ArrowBox[{81, 28}], ArrowBox[{82, 77}], 
      ArrowBox[{83, 84}], ArrowBox[{84, 85}], ArrowBox[{85, 86}], 
      ArrowBox[{86, 87}], ArrowBox[{87, 88}], ArrowBox[{88, 89}], 
      ArrowBox[{89, 90}], ArrowBox[{90, 91}], ArrowBox[{91, 92}], 
      ArrowBox[{92, 93}], ArrowBox[{93, 94}], ArrowBox[{94, 95}], 
      ArrowBox[{95, 96}], ArrowBox[{96, 97}], ArrowBox[{97, 111}], 
      ArrowBox[{98, 99}], ArrowBox[{99, 100}], ArrowBox[{100, 101}], 
      ArrowBox[{101, 102}], ArrowBox[{102, 103}], ArrowBox[{103, 104}], 
      ArrowBox[{104, 105}], ArrowBox[{105, 106}], ArrowBox[{106, 107}], 
      ArrowBox[{107, 108}], ArrowBox[{108, 109}], ArrowBox[{109, 110}], 
      ArrowBox[{110, 50}], ArrowBox[{111, 112}], ArrowBox[{112, 113}], 
      ArrowBox[{113, 114}], ArrowBox[{113, 115}], ArrowBox[{113, 116}], 
      ArrowBox[{114, 193}], ArrowBox[{115, 195}], ArrowBox[{116, 196}], 
      ArrowBox[{117, 118}], ArrowBox[{118, 119}], ArrowBox[{119, 120}], 
      ArrowBox[{120, 121}], ArrowBox[{121, 122}], ArrowBox[{122, 123}], 
      ArrowBox[{123, 124}], ArrowBox[{124, 125}], ArrowBox[{125, 126}], 
      ArrowBox[{126, 127}], ArrowBox[{127, 128}], ArrowBox[{128, 129}], 
      ArrowBox[{129, 130}], ArrowBox[{130, 131}], ArrowBox[{131, 132}], 
      ArrowBox[{132, 133}], ArrowBox[{133, 134}], ArrowBox[{134, 135}], 
      ArrowBox[{135, 136}], ArrowBox[{136, 137}], ArrowBox[{137, 138}], 
      ArrowBox[{138, 139}], ArrowBox[{139, 140}], ArrowBox[{140, 141}], 
      ArrowBox[{141, 142}], ArrowBox[{142, 143}], ArrowBox[{143, 144}], 
      ArrowBox[{144, 145}], ArrowBox[{145, 146}], ArrowBox[{146, 147}], 
      ArrowBox[{147, 148}], ArrowBox[{148, 149}], ArrowBox[{149, 150}], 
      ArrowBox[{150, 151}], ArrowBox[{151, 152}], ArrowBox[{152, 153}], 
      ArrowBox[{153, 154}], ArrowBox[{154, 155}], ArrowBox[{155, 156}], 
      ArrowBox[{156, 157}], ArrowBox[{157, 158}], ArrowBox[{158, 159}], 
      ArrowBox[{159, 160}], ArrowBox[{160, 161}], ArrowBox[{161, 162}], 
      ArrowBox[{162, 163}], ArrowBox[{163, 164}], ArrowBox[{164, 165}], 
      ArrowBox[{165, 166}], ArrowBox[{166, 167}], ArrowBox[{167, 168}], 
      ArrowBox[{168, 169}], ArrowBox[{169, 170}], ArrowBox[{170, 171}], 
      ArrowBox[{171, 172}], ArrowBox[{172, 173}], ArrowBox[{173, 174}], 
      ArrowBox[{174, 175}], ArrowBox[{175, 176}], ArrowBox[{176, 177}], 
      ArrowBox[{177, 178}], ArrowBox[{178, 179}], ArrowBox[{179, 180}], 
      ArrowBox[{180, 181}], ArrowBox[{181, 182}], ArrowBox[{182, 183}], 
      ArrowBox[{183, 184}], ArrowBox[{184, 185}], ArrowBox[{185, 186}], 
      ArrowBox[{186, 187}], ArrowBox[{187, 188}], ArrowBox[{188, 189}], 
      ArrowBox[{189, 190}], ArrowBox[{190, 191}], ArrowBox[{191, 192}], 
      ArrowBox[{192, 98}], ArrowBox[{193, 194}], ArrowBox[{194, 98}], 
      ArrowBox[{195, 98}], ArrowBox[{196, 197}], ArrowBox[{197, 198}], 
      ArrowBox[{198, 199}], ArrowBox[{199, 200}], ArrowBox[{200, 98}]}, 
     {RGBColor[0, 0, 0.7], 
      TagBox[
       TooltipBox[PointBox[1],
        "516"],
       Annotation[#, 516, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[2],
        "520"],
       Annotation[#, 520, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[3],
        "524"],
       Annotation[#, 524, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[4],
        "528"],
       Annotation[#, 528, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[5],
        "532"],
       Annotation[#, 532, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[6],
        "536"],
       Annotation[#, 536, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[7],
        "544"],
       Annotation[#, 544, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[8],
        "538"],
       Annotation[#, 538, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[9],
        "542"],
       Annotation[#, 542, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[10],
        "548"],
       Annotation[#, 548, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[11],
        "552"],
       Annotation[#, 552, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[12],
        "556"],
       Annotation[#, 556, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[13],
        "560"],
       Annotation[#, 560, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[14],
        "562"],
       Annotation[#, 562, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[15],
        "566"],
       Annotation[#, 566, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[16],
        "570"],
       Annotation[#, 570, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[17],
        "574"],
       Annotation[#, 574, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[18],
        "578"],
       Annotation[#, 578, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[19],
        "582"],
       Annotation[#, 582, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[20],
        "586"],
       Annotation[#, 586, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[21],
        "590"],
       Annotation[#, 590, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[22],
        "592"],
       Annotation[#, 592, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[23],
        "596"],
       Annotation[#, 596, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[24],
        "600"],
       Annotation[#, 600, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[25],
        "602"],
       Annotation[#, 602, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[26],
        "604"],
       Annotation[#, 604, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[27],
        "2184"],
       Annotation[#, 2184, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[28],
        "762"],
       Annotation[#, 762, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[29],
        "766"],
       Annotation[#, 766, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[30],
        "770"],
       Annotation[#, 770, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[31],
        "772"],
       Annotation[#, 772, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[32],
        "776"],
       Annotation[#, 776, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[33],
        "780"],
       Annotation[#, 780, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[34],
        "784"],
       Annotation[#, 784, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[35],
        "786"],
       Annotation[#, 786, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[36],
        "790"],
       Annotation[#, 790, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[37],
        "800"],
       Annotation[#, 800, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[38],
        "794"],
       Annotation[#, 794, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[39],
        "798"],
       Annotation[#, 798, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[40],
        "934"],
       Annotation[#, 934, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[41],
        "804"],
       Annotation[#, 804, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[42],
        "808"],
       Annotation[#, 808, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[43],
        "812"],
       Annotation[#, 812, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[44],
        "814"],
       Annotation[#, 814, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[45],
        "818"],
       Annotation[#, 818, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[46],
        "820"],
       Annotation[#, 820, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[47],
        "824"],
       Annotation[#, 824, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[48],
        "826"],
       Annotation[#, 826, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[49],
        "830"],
       Annotation[#, 830, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[50],
        "832"],
       Annotation[#, 832, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[51],
        "834"],
       Annotation[#, 834, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[52],
        "838"],
       Annotation[#, 838, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[53],
        "842"],
       Annotation[#, 842, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[54],
        "844"],
       Annotation[#, 844, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[55],
        "848"],
       Annotation[#, 848, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[56],
        "850"],
       Annotation[#, 850, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[57],
        "854"],
       Annotation[#, 854, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[58],
        "858"],
       Annotation[#, 858, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[59],
        "860"],
       Annotation[#, 860, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[60],
        "864"],
       Annotation[#, 864, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[61],
        "868"],
       Annotation[#, 868, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[62],
        "872"],
       Annotation[#, 872, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[63],
        "876"],
       Annotation[#, 876, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[64],
        "880"],
       Annotation[#, 880, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[65],
        "884"],
       Annotation[#, 884, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[66],
        "888"],
       Annotation[#, 888, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[67],
        "892"],
       Annotation[#, 892, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[68],
        "896"],
       Annotation[#, 896, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[69],
        "900"],
       Annotation[#, 900, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[70],
        "904"],
       Annotation[#, 904, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[71],
        "908"],
       Annotation[#, 908, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[72],
        "910"],
       Annotation[#, 910, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[73],
        "912"],
       Annotation[#, 912, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[74],
        "916"],
       Annotation[#, 916, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[75],
        "918"],
       Annotation[#, 918, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[76],
        "922"],
       Annotation[#, 922, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[77],
        "926"],
       Annotation[#, 926, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[78],
        "928"],
       Annotation[#, 928, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[79],
        "994"],
       Annotation[#, 994, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[80],
        "930"],
       Annotation[#, 930, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[81],
        "932"],
       Annotation[#, 932, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[82],
        "938"],
       Annotation[#, 938, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[83],
        "998"],
       Annotation[#, 998, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[84],
        "1002"],
       Annotation[#, 1002, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[85],
        "1006"],
       Annotation[#, 1006, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[86],
        "1010"],
       Annotation[#, 1010, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[87],
        "1014"],
       Annotation[#, 1014, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[88],
        "1018"],
       Annotation[#, 1018, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[89],
        "1022"],
       Annotation[#, 1022, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[90],
        "1026"],
       Annotation[#, 1026, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[91],
        "1030"],
       Annotation[#, 1030, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[92],
        "1034"],
       Annotation[#, 1034, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[93],
        "1038"],
       Annotation[#, 1038, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[94],
        "1042"],
       Annotation[#, 1042, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[95],
        "1046"],
       Annotation[#, 1046, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[96],
        "1048"],
       Annotation[#, 1048, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[97],
        "1826"],
       Annotation[#, 1826, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[98],
        "1798"],
       Annotation[#, 1798, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[99],
        "1800"],
       Annotation[#, 1800, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[100],
        "1804"],
       Annotation[#, 1804, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[101],
        "1806"],
       Annotation[#, 1806, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[102],
        "1808"],
       Annotation[#, 1808, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[103],
        "1810"],
       Annotation[#, 1810, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[104],
        "1812"],
       Annotation[#, 1812, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[105],
        "1814"],
       Annotation[#, 1814, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[106],
        "1816"],
       Annotation[#, 1816, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[107],
        "1818"],
       Annotation[#, 1818, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[108],
        "1820"],
       Annotation[#, 1820, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[109],
        "1822"],
       Annotation[#, 1822, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[110],
        "1824"],
       Annotation[#, 1824, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[111],
        "1828"],
       Annotation[#, 1828, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[112],
        "1830"],
       Annotation[#, 1830, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[113],
        "1832"],
       Annotation[#, 1832, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[114],
        "2436"],
       Annotation[#, 2436, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[115],
        "2446"],
       Annotation[#, 2446, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[116],
        "2452"],
       Annotation[#, 2452, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[117],
        "2186"],
       Annotation[#, 2186, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[118],
        "2188"],
       Annotation[#, 2188, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[119],
        "2192"],
       Annotation[#, 2192, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[120],
        "2194"],
       Annotation[#, 2194, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[121],
        "2198"],
       Annotation[#, 2198, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[122],
        "2202"],
       Annotation[#, 2202, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[123],
        "2204"],
       Annotation[#, 2204, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[124],
        "2206"],
       Annotation[#, 2206, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[125],
        "2210"],
       Annotation[#, 2210, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[126],
        "2214"],
       Annotation[#, 2214, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[127],
        "2218"],
       Annotation[#, 2218, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[128],
        "2220"],
       Annotation[#, 2220, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[129],
        "2222"],
       Annotation[#, 2222, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[130],
        "2224"],
       Annotation[#, 2224, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[131],
        "2226"],
       Annotation[#, 2226, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[132],
        "2228"],
       Annotation[#, 2228, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[133],
        "2230"],
       Annotation[#, 2230, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[134],
        "2232"],
       Annotation[#, 2232, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[135],
        "2234"],
       Annotation[#, 2234, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[136],
        "2236"],
       Annotation[#, 2236, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[137],
        "2238"],
       Annotation[#, 2238, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[138],
        "2240"],
       Annotation[#, 2240, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[139],
        "2244"],
       Annotation[#, 2244, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[140],
        "2248"],
       Annotation[#, 2248, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[141],
        "2252"],
       Annotation[#, 2252, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[142],
        "2254"],
       Annotation[#, 2254, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[143],
        "2258"],
       Annotation[#, 2258, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[144],
        "2262"],
       Annotation[#, 2262, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[145],
        "2266"],
       Annotation[#, 2266, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[146],
        "2270"],
       Annotation[#, 2270, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[147],
        "2274"],
       Annotation[#, 2274, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[148],
        "2278"],
       Annotation[#, 2278, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[149],
        "2282"],
       Annotation[#, 2282, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[150],
        "2284"],
       Annotation[#, 2284, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[151],
        "2288"],
       Annotation[#, 2288, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[152],
        "2292"],
       Annotation[#, 2292, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[153],
        "2296"],
       Annotation[#, 2296, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[154],
        "2300"],
       Annotation[#, 2300, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[155],
        "2304"],
       Annotation[#, 2304, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[156],
        "2308"],
       Annotation[#, 2308, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[157],
        "2312"],
       Annotation[#, 2312, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[158],
        "2316"],
       Annotation[#, 2316, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[159],
        "2320"],
       Annotation[#, 2320, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[160],
        "2324"],
       Annotation[#, 2324, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[161],
        "2328"],
       Annotation[#, 2328, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[162],
        "2332"],
       Annotation[#, 2332, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[163],
        "2336"],
       Annotation[#, 2336, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[164],
        "2340"],
       Annotation[#, 2340, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[165],
        "2344"],
       Annotation[#, 2344, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[166],
        "2348"],
       Annotation[#, 2348, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[167],
        "2352"],
       Annotation[#, 2352, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[168],
        "2356"],
       Annotation[#, 2356, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[169],
        "2360"],
       Annotation[#, 2360, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[170],
        "2362"],
       Annotation[#, 2362, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[171],
        "2364"],
       Annotation[#, 2364, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[172],
        "2366"],
       Annotation[#, 2366, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[173],
        "2370"],
       Annotation[#, 2370, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[174],
        "2374"],
       Annotation[#, 2374, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[175],
        "2376"],
       Annotation[#, 2376, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[176],
        "2380"],
       Annotation[#, 2380, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[177],
        "2384"],
       Annotation[#, 2384, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[178],
        "2386"],
       Annotation[#, 2386, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[179],
        "2390"],
       Annotation[#, 2390, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[180],
        "2394"],
       Annotation[#, 2394, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[181],
        "2398"],
       Annotation[#, 2398, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[182],
        "2400"],
       Annotation[#, 2400, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[183],
        "2402"],
       Annotation[#, 2402, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[184],
        "2404"],
       Annotation[#, 2404, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[185],
        "2406"],
       Annotation[#, 2406, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[186],
        "2408"],
       Annotation[#, 2408, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[187],
        "2410"],
       Annotation[#, 2410, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[188],
        "2412"],
       Annotation[#, 2412, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[189],
        "2416"],
       Annotation[#, 2416, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[190],
        "2426"],
       Annotation[#, 2426, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[191],
        "2430"],
       Annotation[#, 2430, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[192],
        "2434"],
       Annotation[#, 2434, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[193],
        "2440"],
       Annotation[#, 2440, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[194],
        "2444"],
       Annotation[#, 2444, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[195],
        "2450"],
       Annotation[#, 2450, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[196],
        "2454"],
       Annotation[#, 2454, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[197],
        "2458"],
       Annotation[#, 2458, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[198],
        "3660"],
       Annotation[#, 3660, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[199],
        "3664"],
       Annotation[#, 3664, "Tooltip"]& ], 
      TagBox[
       TooltipBox[PointBox[200],
        "3668"],
       Annotation[#, 3668, "Tooltip"]& ]}}],
   Annotation[#, VertexCoordinateRules -> CompressedData["
1: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
6HiXdVLDFIeCL0m4Rariv1q+aiw=
     "]]& ],
  AspectRatio->Automatic,
  FrameTicks->None,
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{3.7416924396675987`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"c932b1dd-3b47-44c6-a1bf-446f8b14e2a3"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{986, 649},
WindowMargins->{{Automatic, 71}, {33, Automatic}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 7, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 232, 4, 98, "Title",ExpressionUUID->"06c7e292-9ceb-4e64-b669-2e08baca2aef"],
Cell[815, 28, 1099, 18, 196, "Text",ExpressionUUID->"5c006520-4c11-4d25-b0ba-d024e260238e"],
Cell[CellGroupData[{
Cell[1939, 50, 403, 6, 61, "Chapter",ExpressionUUID->"a0716f33-11bc-45cf-82de-feac96e25066"],
Cell[CellGroupData[{
Cell[2367, 60, 208, 4, 67, "Section",ExpressionUUID->"778e1e37-6500-4bb1-98d6-e9b7bd557798"],
Cell[2578, 66, 969, 19, 104, "Text",ExpressionUUID->"54881897-4fac-4dac-bf0c-71d6ab70deb2"],
Cell[CellGroupData[{
Cell[3572, 89, 32999, 557, 308, "Input",ExpressionUUID->"6e14ad3c-428c-49fc-9e8c-8a7f93de0cf5"],
Cell[36574, 648, 25264, 436, 446, "Output",ExpressionUUID->"5c19778a-3ff2-4975-8eaf-15f86d1bf01b"]
}, {2}]],
Cell[61850, 1087, 153, 3, 30, "Input",ExpressionUUID->"36744b9f-0e0e-49ee-a11b-a3921f5d0165"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62040, 1095, 409, 6, 67, "Section",ExpressionUUID->"3fddaa04-c18e-4e35-a4d7-e6bd6120ec5c"],
Cell[CellGroupData[{
Cell[62474, 1105, 259, 4, 45, "Subsubsection",ExpressionUUID->"1eb99232-768b-45b1-9333-c9841e6345ed"],
Cell[62736, 1111, 392, 11, 58, "Text",ExpressionUUID->"bf663672-e907-4a35-b9a1-c5f7617b6dd5"],
Cell[63131, 1124, 443, 10, 68, "Input",ExpressionUUID->"d3a54814-f965-40f5-8350-fbb3017d5f3c",
 InitializationCell->True],
Cell[63577, 1136, 295, 6, 35, "Text",ExpressionUUID->"c2b466b8-ef31-406e-af4c-d31203c273c7"],
Cell[CellGroupData[{
Cell[63897, 1146, 478, 8, 46, "Input",ExpressionUUID->"ccdaaad1-16fc-4876-8c53-f3e015b4b4ec",
 InitializationCell->True],
Cell[64378, 1156, 27535, 496, 66, "Output",ExpressionUUID->"a59b716d-651b-430d-8d58-73cf9b7bd772"]
}, Open  ]],
Cell[91928, 1655, 183, 3, 35, "Text",ExpressionUUID->"7286950f-34f7-4e3d-9961-25081da47bda"],
Cell[92114, 1660, 212, 3, 30, "Input",ExpressionUUID->"de3619b2-6f2a-4397-89ba-da7a78c57eb9"],
Cell[92329, 1665, 345, 11, 58, "Text",ExpressionUUID->"541154d5-f546-4050-bf04-374f78c25cb4"],
Cell[92677, 1678, 811, 14, 128, "Input",ExpressionUUID->"9624ebf4-22de-40a6-ae09-b60252f077f0"],
Cell[93491, 1694, 295, 8, 58, "Text",ExpressionUUID->"e7f77f02-c2c4-48da-bfd8-7de23f52a556"],
Cell[93789, 1704, 319, 6, 30, "Input",ExpressionUUID->"6090ce86-fb7d-43d9-96f4-f0b52c826c13"],
Cell[94111, 1712, 189, 5, 35, "Text",ExpressionUUID->"b49c603e-f494-4ebb-a4b5-7bb0706c2bec"],
Cell[94303, 1719, 275, 5, 30, "Input",ExpressionUUID->"d0602119-e757-4d0e-b226-92097b03259b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94615, 1729, 233, 4, 45, "Subsubsection",ExpressionUUID->"0756ce18-7e41-4db1-bd2f-0c8e5688a183"],
Cell[94851, 1735, 366, 7, 35, "Text",ExpressionUUID->"49207ad1-ae23-4a04-a538-91d98ba2bfcb"],
Cell[95220, 1744, 287, 7, 58, "Text",ExpressionUUID->"d6a50e65-ece4-47e2-a5d7-a42c04c727d2"],
Cell[CellGroupData[{
Cell[95532, 1755, 334, 7, 30, "Input",ExpressionUUID->"9b507119-333f-4d4c-9f24-aa90b57018b5"],
Cell[95869, 1764, 17239, 327, 135, "Output",ExpressionUUID->"54f4a767-2ed7-4212-891c-454995ce81eb"]
}, Open  ]],
Cell[113123, 2094, 661, 18, 81, "Text",ExpressionUUID->"c41100be-0c4d-4c40-b5e3-c722773ed75b"],
Cell[113787, 2114, 279, 7, 58, "Text",ExpressionUUID->"b1f7c1d1-d8f9-4966-b0b0-d2a89588f61f"],
Cell[CellGroupData[{
Cell[114091, 2125, 307, 6, 30, "Input",ExpressionUUID->"737edf65-e6f3-4358-a510-74a69245fd62"],
Cell[114401, 2133, 16815, 319, 161, "Output",ExpressionUUID->"573c80f6-4a80-474b-91d9-f133b23647cd"]
}, Open  ]],
Cell[131231, 2455, 347, 9, 58, "Text",ExpressionUUID->"043367d9-fa5c-4bf1-8e8a-46dfe53ea264"],
Cell[CellGroupData[{
Cell[131603, 2468, 352, 6, 30, "Input",ExpressionUUID->"f912d38a-62ab-4424-ab7e-1e082ba1b223"],
Cell[131958, 2476, 12179, 225, 119, "Output",ExpressionUUID->"a4a9ce54-5844-4a4e-93cc-8fe354638b0a"]
}, Open  ]],
Cell[144152, 2704, 514, 11, 81, "Text",ExpressionUUID->"59070edc-3cc3-455d-9fa7-923a2a97d7af"],
Cell[CellGroupData[{
Cell[144691, 2719, 756, 19, 94, "Input",ExpressionUUID->"9224bb0f-ea63-4c51-bd97-797e2feb2e4e"],
Cell[145450, 2740, 66528, 1331, 563, "Output",ExpressionUUID->"2a31d9a9-9327-4992-9691-4b52fd2fcede"]
}, Open  ]],
Cell[211993, 4074, 355, 9, 58, "Text",ExpressionUUID->"696aca4c-e5dc-4486-871b-a5e7036bf51c"],
Cell[CellGroupData[{
Cell[212373, 4087, 881, 20, 94, "Input",ExpressionUUID->"a98b811e-a3e2-43a8-ba98-1162da33ae9b"],
Cell[213257, 4109, 37256, 619, 483, "Output",ExpressionUUID->"f8f19250-f213-41fb-b3b1-ee6a2edd2310"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250562, 4734, 285, 4, 45, "Subsubsection",ExpressionUUID->"b9a43d9a-8042-43fa-ba5a-d1b0e0dccb96"],
Cell[250850, 4740, 190, 3, 35, "Text",ExpressionUUID->"879a1cdd-56d2-496a-9053-2a03746ed9db"],
Cell[251043, 4745, 193, 4, 35, "Text",ExpressionUUID->"7ba4088e-5b7c-4f82-a336-91bb5a3d6efb"],
Cell[251239, 4751, 274, 4, 35, "Text",ExpressionUUID->"e0658df1-7d18-4c10-95b4-d4cf9775d05d"],
Cell[CellGroupData[{
Cell[251538, 4759, 458, 9, 30, "Input",ExpressionUUID->"1612669f-746f-4e64-8818-227115b985bf"],
Cell[251999, 4770, 488, 8, 34, "Output",ExpressionUUID->"efae26cb-2ff2-4e46-9ce3-b396ae9ed72a"]
}, Open  ]],
Cell[252502, 4781, 170, 3, 35, "Text",ExpressionUUID->"4dc7fbe6-f469-4813-b33e-7c95e6ddecc7"],
Cell[CellGroupData[{
Cell[252697, 4788, 461, 10, 30, "Input",ExpressionUUID->"8cad3872-aabf-4287-8546-b46d09422716"],
Cell[253161, 4800, 301, 5, 34, "Output",ExpressionUUID->"a1bd07cc-869f-4391-88e4-6c27d05a9a58"]
}, Open  ]],
Cell[253477, 4808, 309, 5, 35, "Text",ExpressionUUID->"0ae03630-f211-4d10-93d5-0570864dabbd"],
Cell[CellGroupData[{
Cell[253811, 4817, 738, 13, 30, "Input",ExpressionUUID->"c836c61e-3894-4d4c-aea9-953372c680e1"],
Cell[254552, 4832, 1044, 16, 34, "Output",ExpressionUUID->"5aec81ef-b73b-4ec9-8327-d7ee6ce94895"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255633, 4853, 398, 8, 30, "Input",ExpressionUUID->"a6c3e42e-ffc6-4d1d-839d-3e239b2a897f"],
Cell[256034, 4863, 668, 9, 34, "Output",ExpressionUUID->"467ee524-ecc6-4db4-b8fa-dd1df706e803"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[256751, 4878, 313, 5, 45, "Subsubsection",ExpressionUUID->"79608c82-2b0a-430b-9a03-653af29e0c89"],
Cell[257067, 4885, 478, 9, 58, "Text",ExpressionUUID->"6d710e3b-a55c-438a-a19b-f403be01dbab"],
Cell[CellGroupData[{
Cell[257570, 4898, 302, 5, 30, "Input",ExpressionUUID->"df79693e-f4e2-4ef9-b20f-5fed5be14970"],
Cell[257875, 4905, 588, 8, 34, "Output",ExpressionUUID->"70102969-a990-41f5-9bf0-196ada7243ad"]
}, Open  ]],
Cell[258478, 4916, 456, 8, 81, "Text",ExpressionUUID->"8c903cc6-ab87-433d-af83-856bd96f5517"],
Cell[CellGroupData[{
Cell[258959, 4928, 282, 5, 30, "Input",ExpressionUUID->"dfcb5635-8c2f-457e-8e93-90ebe6505933"],
Cell[259244, 4935, 374, 6, 34, "Output",ExpressionUUID->"5b2cf402-a78a-45dc-bf05-5b6f267b8a16"]
}, Open  ]],
Cell[259633, 4944, 204, 3, 35, "Text",ExpressionUUID->"aa8ef18e-c64c-4cb9-a7fa-40227da4f7f3"],
Cell[CellGroupData[{
Cell[259862, 4951, 476, 8, 30, "Input",ExpressionUUID->"3545c76a-7af5-4b22-9629-18646be6d48b"],
Cell[260341, 4961, 368, 5, 34, "Output",ExpressionUUID->"32fa193a-ebcc-42d6-8eee-3231a647c321"]
}, Open  ]],
Cell[260724, 4969, 277, 6, 35, "Text",ExpressionUUID->"b7659c26-cb76-4d13-882a-4bb13504d437"],
Cell[261004, 4977, 293, 6, 30, "Input",ExpressionUUID->"71c5da87-fc74-4864-af0b-5ef26b7c42cc"],
Cell[261300, 4985, 287, 6, 35, "Text",ExpressionUUID->"e9cb6b4f-fc60-4f9a-8a23-dc948ae6681f"],
Cell[CellGroupData[{
Cell[261612, 4995, 305, 5, 30, "Input",ExpressionUUID->"246ab0f7-9458-4ae5-84cd-7a2a97164d6b"],
Cell[261920, 5002, 2376, 32, 1348, "Output",ExpressionUUID->"74798b70-411b-4e78-9ccb-29a72b9d274d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[264357, 5041, 163, 3, 67, "Section",ExpressionUUID->"65d0321a-55ed-4e55-8db3-91688326b2c3"],
Cell[CellGroupData[{
Cell[264545, 5048, 219, 4, 45, "Subsubsection",ExpressionUUID->"9ea7af7a-0fdb-41e8-b1af-e6a338f0450b"],
Cell[264767, 5054, 386, 9, 73, "Input",ExpressionUUID->"f4292eff-4dd5-46a8-86ba-3df96d5e6e69"],
Cell[265156, 5065, 616, 15, 115, "Input",ExpressionUUID->"1ea3ab32-4767-47e6-81f8-330d85d4868e"],
Cell[265775, 5082, 495, 16, 30, "Input",ExpressionUUID->"b41a0f04-8797-4188-8d37-ac574169f7cd"],
Cell[CellGroupData[{
Cell[266295, 5102, 124, 1, 30, "Input",ExpressionUUID->"d947bc85-11fc-43e1-8255-b0a3c7370168"],
Cell[266422, 5105, 1371, 26, 379, "Output",ExpressionUUID->"46203af3-e70a-49dc-bad8-6b41e3264a59"]
}, Open  ]],
Cell[267808, 5134, 260, 4, 35, "Text",ExpressionUUID->"a717d3fa-0d22-4e72-afb3-e1df32a1a032"],
Cell[268071, 5140, 294, 9, 30, "Input",ExpressionUUID->"1a7824d1-ecea-4c7f-b3bb-52855f59807e"],
Cell[268368, 5151, 351, 5, 35, "Text",ExpressionUUID->"567b7537-c7d1-4fa8-ab59-336e89deb2ee"],
Cell[268722, 5158, 1217, 33, 136, "Input",ExpressionUUID->"81e015ce-df54-48f9-8508-9e6de99e0c05"],
Cell[269942, 5193, 254, 4, 35, "Text",ExpressionUUID->"ddb05eb5-d1cf-4177-afc4-0369de6c013d"],
Cell[CellGroupData[{
Cell[270221, 5201, 453, 11, 73, "Input",ExpressionUUID->"9f9a086b-b9a5-4c52-ad13-feb924f68920"],
Cell[270677, 5214, 11705, 244, 53, "Output",ExpressionUUID->"46c70ec0-ca79-4bc1-a8f5-2e303ff2f1fb"]
}, Open  ]],
Cell[282397, 5461, 211, 4, 35, "Text",ExpressionUUID->"741a4ebb-e32d-4688-aa80-b4435135b133"],
Cell[CellGroupData[{
Cell[282633, 5469, 245, 5, 30, "Input",ExpressionUUID->"62f5d9a1-ad6c-4230-9888-121c07adb921"],
Cell[282881, 5476, 12012, 257, 53, "Output",ExpressionUUID->"a5ed43bc-6bbd-4627-b31f-31749db0d239"]
}, Open  ]],
Cell[294908, 5736, 322, 5, 35, "Text",ExpressionUUID->"970c5fa8-7a30-4b16-ae24-7fbc7d376918"],
Cell[295233, 5743, 982, 26, 94, "Input",ExpressionUUID->"6588ea5d-b73a-4fb7-8893-4c87423462d3"],
Cell[296218, 5771, 233, 4, 35, "Text",ExpressionUUID->"679d8bf0-0627-44ac-a124-2e45308e75c8"],
Cell[CellGroupData[{
Cell[296476, 5779, 241, 6, 30, "Input",ExpressionUUID->"d57e0e80-bb57-42f9-882f-e081dae49c33"],
Cell[296720, 5787, 7571, 155, 62, "Output",ExpressionUUID->"7f927ce5-46ef-4e36-a954-03379392b427"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304328, 5947, 198, 4, 30, "Input",ExpressionUUID->"53063fe8-29bd-4bf8-abcc-468383a2b693"],
Cell[304529, 5953, 174, 3, 34, "Output",ExpressionUUID->"d00244f8-8d9d-493c-ac14-1a989c179444"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304740, 5961, 138, 2, 30, "Input",ExpressionUUID->"c29d19fb-b473-4ff5-be58-d52da78a79f7"],
Cell[304881, 5965, 9466, 250, 326, "Output",ExpressionUUID->"d59a7c7a-acf1-42f4-a3e4-e4c9e94c7551"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[314396, 6221, 264, 4, 37, "Subsubsection",ExpressionUUID->"af8d3c0e-37ed-48f0-9235-2fdcb750a477"],
Cell[314663, 6227, 637, 16, 30, "Input",ExpressionUUID->"b452daeb-bf08-477f-8fd1-5f63c85100cf"],
Cell[315303, 6245, 2246, 64, 199, "Input",ExpressionUUID->"6649ff40-2815-4246-bed7-abe7acd67425"],
Cell[317552, 6311, 659, 13, 30, "Input",ExpressionUUID->"7c68b042-a24f-4d2f-859c-b61fc684f3e7"],
Cell[318214, 6326, 4003, 108, 178, "Input",ExpressionUUID->"fb72d99e-2cda-4897-b059-bb2a1254f47c"],
Cell[CellGroupData[{
Cell[322242, 6438, 2090, 49, 199, "Input",ExpressionUUID->"31b95f57-fc83-4352-ac98-f0118d0a6cc7"],
Cell[324335, 6489, 77361, 1543, 449, "Output",ExpressionUUID->"ed70639d-2ac5-4531-bb79-b25d1703b50b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[401745, 8038, 282, 4, 37, "Subsubsection",ExpressionUUID->"7bbe6224-62a7-4def-85a9-52b4d410f0d6"],
Cell[402030, 8044, 601, 14, 115, "Input",ExpressionUUID->"69ee9d48-7b04-44a8-96ef-d77b5cad0c75"],
Cell[402634, 8060, 603, 15, 94, "Input",ExpressionUUID->"d9feed8f-6435-4391-a8cd-71f0edb5acea"],
Cell[403240, 8077, 387, 12, 30, "Input",ExpressionUUID->"1679e249-f93e-43b0-b634-5095e584aca3"],
Cell[403630, 8091, 809, 22, 115, "Input",ExpressionUUID->"41e80c23-8026-4afd-aa3a-01ae3885f9eb"],
Cell[CellGroupData[{
Cell[404464, 8117, 386, 8, 30, "Input",ExpressionUUID->"7800b3fb-0cfd-494b-baaa-df9256792773"],
Cell[404853, 8127, 4048, 72, 314, "Output",ExpressionUUID->"7881c56c-5725-40df-9797-d4fd0353d845"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[408950, 8205, 215, 4, 37, "Subsubsection",ExpressionUUID->"8ca3970c-3410-41c5-a59b-57ba43a103de"],
Cell[CellGroupData[{
Cell[409190, 8213, 1345, 34, 136, "Input",ExpressionUUID->"b7d51811-c640-4344-982e-f7dafb3e507a"],
Cell[410538, 8249, 34757, 1019, 62, "Output",ExpressionUUID->"c932b1dd-3b47-44c6-a1bf-446f8b14e2a3"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

